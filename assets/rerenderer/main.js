if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3211";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__17289__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__17288 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__17288) : cljs.core.into_array.call(null, G__17288);
      }());
    };
    var G__17289 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__17290__i = 0, G__17290__a = new Array(arguments.length - 0);
        while (G__17290__i < G__17290__a.length) {
          G__17290__a[G__17290__i] = arguments[G__17290__i + 0];
          ++G__17290__i;
        }
        args = new cljs.core.IndexedSeq(G__17290__a, 0);
      }
      return G__17289__delegate.call(this, args);
    };
    G__17289.cljs$lang$maxFixedArity = 0;
    G__17289.cljs$lang$applyTo = function(arglist__17291) {
      var args = cljs.core.seq(arglist__17291);
      return G__17289__delegate(args);
    };
    G__17289.cljs$core$IFn$_invoke$arity$variadic = G__17289__delegate;
    return G__17289;
  }();
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  var G__17293 = x;
  return goog.isString(G__17293);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__17295 = x__$1;
    return goog.typeOf(G__17295);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4345__auto__ = ty;
    if (cljs.core.truth_(and__4345__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4345__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__17297 = obj;
    return goog.typeOf(G__17297);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__17299 = Symbol;
  return goog.typeOf(G__17299);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function cljs$core$make_array() {
  var G__17301 = arguments.length;
  switch(G__17301) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5242__auto___17303 = len;
  var i_17304 = 0;
  while (true) {
    if (i_17304 < n__5242__auto___17303) {
      new_arr[i_17304] = arr[i_17304];
      var G__17305 = i_17304 + 1;
      i_17304 = G__17305;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__17306 = i + 1;
      i = G__17306;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget() {
  var G__17311 = arguments.length;
  switch(G__17311) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__17312 = cljs.core.aget;
  var G__17313 = array[i];
  var G__17314 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__17312, G__17313, G__17314) : cljs.core.apply.call(null, G__17312, G__17313, G__17314);
};
cljs.core.aget.cljs$lang$applyTo = function(seq17307) {
  var G__17308 = cljs.core.first(seq17307);
  var seq17307__$1 = cljs.core.next(seq17307);
  var G__17309 = cljs.core.first(seq17307__$1);
  var seq17307__$2 = cljs.core.next(seq17307__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__17308, G__17309, seq17307__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset() {
  var G__17321 = arguments.length;
  switch(G__17321) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5408__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__17322 = cljs.core.aset;
  var G__17323 = array[idx];
  var G__17324 = idx2;
  var G__17325 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__17322, G__17323, G__17324, G__17325) : cljs.core.apply.call(null, G__17322, G__17323, G__17324, G__17325);
};
cljs.core.aset.cljs$lang$applyTo = function(seq17316) {
  var G__17317 = cljs.core.first(seq17316);
  var seq17316__$1 = cljs.core.next(seq17316);
  var G__17318 = cljs.core.first(seq17316__$1);
  var seq17316__$2 = cljs.core.next(seq17316__$1);
  var G__17319 = cljs.core.first(seq17316__$2);
  var seq17316__$3 = cljs.core.next(seq17316__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__17317, G__17318, G__17319, seq17316__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array() {
  var G__17328 = arguments.length;
  switch(G__17328) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__17329 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__17330 = [];
  var G__17331 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__17329, G__17330, G__17331) : cljs.core.reduce.call(null, G__17329, G__17330, G__17331);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke() {
  var argseq__5397__auto__ = 2 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5397__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq17333) {
  var G__17334 = cljs.core.first(seq17333);
  var seq17333__$1 = cljs.core.next(seq17333);
  var G__17335 = cljs.core.first(seq17333__$1);
  var seq17333__$2 = cljs.core.next(seq17333__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__17334, G__17335, seq17333__$2);
};
cljs.core.Fn = function() {
  var obj17337 = {};
  return obj17337;
}();
cljs.core.IFn = function() {
  var obj17339 = {};
  return obj17339;
}();
cljs.core._invoke = function cljs$core$_invoke() {
  var G__17341 = arguments.length;
  switch(G__17341) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17343 = x__4993__auto__;
        return goog.typeOf(G__17343);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17345 = x__4993__auto__;
        return goog.typeOf(G__17345);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17347 = x__4993__auto__;
        return goog.typeOf(G__17347);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$4;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17349 = x__4993__auto__;
        return goog.typeOf(G__17349);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$5;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17351 = x__4993__auto__;
        return goog.typeOf(G__17351);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$6;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17353 = x__4993__auto__;
        return goog.typeOf(G__17353);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$7;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17355 = x__4993__auto__;
        return goog.typeOf(G__17355);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$8;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17357 = x__4993__auto__;
        return goog.typeOf(G__17357);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$9;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17359 = x__4993__auto__;
        return goog.typeOf(G__17359);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$10;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17361 = x__4993__auto__;
        return goog.typeOf(G__17361);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$11;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17363 = x__4993__auto__;
        return goog.typeOf(G__17363);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$12;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17365 = x__4993__auto__;
        return goog.typeOf(G__17365);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$13;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17367 = x__4993__auto__;
        return goog.typeOf(G__17367);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$14;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17369 = x__4993__auto__;
        return goog.typeOf(G__17369);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$15;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17371 = x__4993__auto__;
        return goog.typeOf(G__17371);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$16;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17373 = x__4993__auto__;
        return goog.typeOf(G__17373);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$17;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17375 = x__4993__auto__;
        return goog.typeOf(G__17375);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$18;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17377 = x__4993__auto__;
        return goog.typeOf(G__17377);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$19;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17379 = x__4993__auto__;
        return goog.typeOf(G__17379);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$20;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17381 = x__4993__auto__;
        return goog.typeOf(G__17381);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$21;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17383 = x__4993__auto__;
        return goog.typeOf(G__17383);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$22;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._invoke[function() {
        var G__17385 = x__4993__auto__;
        return goog.typeOf(G__17385);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._invoke["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
  var obj17388 = {};
  return obj17388;
}();
cljs.core._clone = function cljs$core$_clone(value) {
  if (function() {
    var and__4345__auto__ = value;
    if (and__4345__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4993__auto__ = value == null ? null : value;
    return function() {
      var or__4357__auto__ = cljs.core._clone[function() {
        var G__17392 = x__4993__auto__;
        return goog.typeOf(G__17392);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._clone["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj17394 = {};
  return obj17394;
}();
cljs.core._count = function cljs$core$_count(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._count[function() {
        var G__17398 = x__4993__auto__;
        return goog.typeOf(G__17398);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._count["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj17400 = {};
  return obj17400;
}();
cljs.core._empty = function cljs$core$_empty(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._empty[function() {
        var G__17404 = x__4993__auto__;
        return goog.typeOf(G__17404);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._empty["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj17406 = {};
  return obj17406;
}();
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._conj[function() {
        var G__17410 = x__4993__auto__;
        return goog.typeOf(G__17410);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._conj["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj17412 = {};
  return obj17412;
}();
cljs.core._nth = function cljs$core$_nth() {
  var G__17414 = arguments.length;
  switch(G__17414) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IIndexed$_nth$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._nth[function() {
        var G__17416 = x__4993__auto__;
        return goog.typeOf(G__17416);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._nth["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIndexed.-nth", coll);
        }
      }
    }().call(null, coll, n);
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IIndexed$_nth$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._nth[function() {
        var G__17418 = x__4993__auto__;
        return goog.typeOf(G__17418);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._nth["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIndexed.-nth", coll);
        }
      }
    }().call(null, coll, n, not_found);
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
  var obj17421 = {};
  return obj17421;
}();
cljs.core.ISeq = function() {
  var obj17423 = {};
  return obj17423;
}();
cljs.core._first = function cljs$core$_first(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._first[function() {
        var G__17427 = x__4993__auto__;
        return goog.typeOf(G__17427);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._first["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._rest[function() {
        var G__17431 = x__4993__auto__;
        return goog.typeOf(G__17431);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._rest["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj17433 = {};
  return obj17433;
}();
cljs.core._next = function cljs$core$_next(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._next[function() {
        var G__17437 = x__4993__auto__;
        return goog.typeOf(G__17437);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._next["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj17439 = {};
  return obj17439;
}();
cljs.core._lookup = function cljs$core$_lookup() {
  var G__17441 = arguments.length;
  switch(G__17441) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$ILookup$_lookup$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._lookup[function() {
        var G__17443 = x__4993__auto__;
        return goog.typeOf(G__17443);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._lookup["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ILookup.-lookup", o);
        }
      }
    }().call(null, o, k);
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$ILookup$_lookup$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._lookup[function() {
        var G__17445 = x__4993__auto__;
        return goog.typeOf(G__17445);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._lookup["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ILookup.-lookup", o);
        }
      }
    }().call(null, o, k, not_found);
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
  var obj17448 = {};
  return obj17448;
}();
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__17452 = x__4993__auto__;
        return goog.typeOf(G__17452);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._assoc[function() {
        var G__17456 = x__4993__auto__;
        return goog.typeOf(G__17456);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._assoc["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj17458 = {};
  return obj17458;
}();
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._dissoc[function() {
        var G__17462 = x__4993__auto__;
        return goog.typeOf(G__17462);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._dissoc["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj17464 = {};
  return obj17464;
}();
cljs.core._key = function cljs$core$_key(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._key[function() {
        var G__17468 = x__4993__auto__;
        return goog.typeOf(G__17468);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._key["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._val[function() {
        var G__17472 = x__4993__auto__;
        return goog.typeOf(G__17472);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._val["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj17474 = {};
  return obj17474;
}();
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._disjoin[function() {
        var G__17478 = x__4993__auto__;
        return goog.typeOf(G__17478);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._disjoin["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj17480 = {};
  return obj17480;
}();
cljs.core._peek = function cljs$core$_peek(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._peek[function() {
        var G__17484 = x__4993__auto__;
        return goog.typeOf(G__17484);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._peek["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._pop[function() {
        var G__17488 = x__4993__auto__;
        return goog.typeOf(G__17488);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._pop["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj17490 = {};
  return obj17490;
}();
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._assoc_n[function() {
        var G__17494 = x__4993__auto__;
        return goog.typeOf(G__17494);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._assoc_n["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj17496 = {};
  return obj17496;
}();
cljs.core._deref = function cljs$core$_deref(o) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._deref[function() {
        var G__17500 = x__4993__auto__;
        return goog.typeOf(G__17500);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._deref["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj17502 = {};
  return obj17502;
}();
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._deref_with_timeout[function() {
        var G__17506 = x__4993__auto__;
        return goog.typeOf(G__17506);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj17508 = {};
  return obj17508;
}();
cljs.core._meta = function cljs$core$_meta(o) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._meta[function() {
        var G__17512 = x__4993__auto__;
        return goog.typeOf(G__17512);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._meta["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj17514 = {};
  return obj17514;
}();
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._with_meta[function() {
        var G__17518 = x__4993__auto__;
        return goog.typeOf(G__17518);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._with_meta["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj17520 = {};
  return obj17520;
}();
cljs.core._reduce = function cljs$core$_reduce() {
  var G__17522 = arguments.length;
  switch(G__17522) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IReduce$_reduce$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._reduce[function() {
        var G__17524 = x__4993__auto__;
        return goog.typeOf(G__17524);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._reduce["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReduce.-reduce", coll);
        }
      }
    }().call(null, coll, f);
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IReduce$_reduce$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._reduce[function() {
        var G__17526 = x__4993__auto__;
        return goog.typeOf(G__17526);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._reduce["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReduce.-reduce", coll);
        }
      }
    }().call(null, coll, f, start);
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
  var obj17529 = {};
  return obj17529;
}();
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._kv_reduce[function() {
        var G__17533 = x__4993__auto__;
        return goog.typeOf(G__17533);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj17535 = {};
  return obj17535;
}();
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._equiv[function() {
        var G__17539 = x__4993__auto__;
        return goog.typeOf(G__17539);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._equiv["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj17541 = {};
  return obj17541;
}();
cljs.core._hash = function cljs$core$_hash(o) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._hash[function() {
        var G__17545 = x__4993__auto__;
        return goog.typeOf(G__17545);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._hash["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj17547 = {};
  return obj17547;
}();
cljs.core._seq = function cljs$core$_seq(o) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._seq[function() {
        var G__17551 = x__4993__auto__;
        return goog.typeOf(G__17551);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._seq["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj17553 = {};
  return obj17553;
}();
cljs.core.IList = function() {
  var obj17555 = {};
  return obj17555;
}();
cljs.core.IRecord = function() {
  var obj17557 = {};
  return obj17557;
}();
cljs.core.IReversible = function() {
  var obj17559 = {};
  return obj17559;
}();
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._rseq[function() {
        var G__17563 = x__4993__auto__;
        return goog.typeOf(G__17563);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._rseq["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj17565 = {};
  return obj17565;
}();
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._sorted_seq[function() {
        var G__17569 = x__4993__auto__;
        return goog.typeOf(G__17569);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._sorted_seq_from[function() {
        var G__17573 = x__4993__auto__;
        return goog.typeOf(G__17573);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._entry_key[function() {
        var G__17577 = x__4993__auto__;
        return goog.typeOf(G__17577);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._entry_key["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._comparator[function() {
        var G__17581 = x__4993__auto__;
        return goog.typeOf(G__17581);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._comparator["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj17583 = {};
  return obj17583;
}();
cljs.core._write = function cljs$core$_write(writer, s) {
  if (function() {
    var and__4345__auto__ = writer;
    if (and__4345__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4993__auto__ = writer == null ? null : writer;
    return function() {
      var or__4357__auto__ = cljs.core._write[function() {
        var G__17587 = x__4993__auto__;
        return goog.typeOf(G__17587);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._write["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (function() {
    var and__4345__auto__ = writer;
    if (and__4345__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4993__auto__ = writer == null ? null : writer;
    return function() {
      var or__4357__auto__ = cljs.core._flush[function() {
        var G__17591 = x__4993__auto__;
        return goog.typeOf(G__17591);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._flush["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj17593 = {};
  return obj17593;
}();
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._pr_writer[function() {
        var G__17597 = x__4993__auto__;
        return goog.typeOf(G__17597);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._pr_writer["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj17599 = {};
  return obj17599;
}();
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (function() {
    var and__4345__auto__ = d;
    if (and__4345__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4993__auto__ = d == null ? null : d;
    return function() {
      var or__4357__auto__ = cljs.core._realized_QMARK_[function() {
        var G__17603 = x__4993__auto__;
        return goog.typeOf(G__17603);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj17605 = {};
  return obj17605;
}();
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._notify_watches[function() {
        var G__17609 = x__4993__auto__;
        return goog.typeOf(G__17609);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._notify_watches["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._add_watch[function() {
        var G__17613 = x__4993__auto__;
        return goog.typeOf(G__17613);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._add_watch["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core._remove_watch[function() {
        var G__17617 = x__4993__auto__;
        return goog.typeOf(G__17617);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._remove_watch["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj17619 = {};
  return obj17619;
}();
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._as_transient[function() {
        var G__17623 = x__4993__auto__;
        return goog.typeOf(G__17623);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._as_transient["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj17625 = {};
  return obj17625;
}();
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (function() {
    var and__4345__auto__ = tcoll;
    if (and__4345__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4993__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4357__auto__ = cljs.core._conj_BANG_[function() {
        var G__17629 = x__4993__auto__;
        return goog.typeOf(G__17629);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (function() {
    var and__4345__auto__ = tcoll;
    if (and__4345__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4993__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4357__auto__ = cljs.core._persistent_BANG_[function() {
        var G__17633 = x__4993__auto__;
        return goog.typeOf(G__17633);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj17635 = {};
  return obj17635;
}();
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__4345__auto__ = tcoll;
    if (and__4345__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4993__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4357__auto__ = cljs.core._assoc_BANG_[function() {
        var G__17639 = x__4993__auto__;
        return goog.typeOf(G__17639);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj17641 = {};
  return obj17641;
}();
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__4345__auto__ = tcoll;
    if (and__4345__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4993__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4357__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__17645 = x__4993__auto__;
        return goog.typeOf(G__17645);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj17647 = {};
  return obj17647;
}();
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__4345__auto__ = tcoll;
    if (and__4345__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4993__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4357__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__17651 = x__4993__auto__;
        return goog.typeOf(G__17651);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (function() {
    var and__4345__auto__ = tcoll;
    if (and__4345__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4993__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4357__auto__ = cljs.core._pop_BANG_[function() {
        var G__17655 = x__4993__auto__;
        return goog.typeOf(G__17655);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj17657 = {};
  return obj17657;
}();
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__4345__auto__ = tcoll;
    if (and__4345__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4993__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4357__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__17661 = x__4993__auto__;
        return goog.typeOf(G__17661);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj17663 = {};
  return obj17663;
}();
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (function() {
    var and__4345__auto__ = x;
    if (and__4345__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4993__auto__ = x == null ? null : x;
    return function() {
      var or__4357__auto__ = cljs.core._compare[function() {
        var G__17667 = x__4993__auto__;
        return goog.typeOf(G__17667);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._compare["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj17669 = {};
  return obj17669;
}();
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._drop_first[function() {
        var G__17673 = x__4993__auto__;
        return goog.typeOf(G__17673);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._drop_first["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj17675 = {};
  return obj17675;
}();
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._chunked_first[function() {
        var G__17679 = x__4993__auto__;
        return goog.typeOf(G__17679);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._chunked_first["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._chunked_rest[function() {
        var G__17683 = x__4993__auto__;
        return goog.typeOf(G__17683);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj17685 = {};
  return obj17685;
}();
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._chunked_next[function() {
        var G__17689 = x__4993__auto__;
        return goog.typeOf(G__17689);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._chunked_next["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj17691 = {};
  return obj17691;
}();
cljs.core._name = function cljs$core$_name(x) {
  if (function() {
    var and__4345__auto__ = x;
    if (and__4345__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4993__auto__ = x == null ? null : x;
    return function() {
      var or__4357__auto__ = cljs.core._name[function() {
        var G__17695 = x__4993__auto__;
        return goog.typeOf(G__17695);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._name["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (function() {
    var and__4345__auto__ = x;
    if (and__4345__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4993__auto__ = x == null ? null : x;
    return function() {
      var or__4357__auto__ = cljs.core._namespace[function() {
        var G__17699 = x__4993__auto__;
        return goog.typeOf(G__17699);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._namespace["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj17701 = {};
  return obj17701;
}();
cljs.core.IReset = function() {
  var obj17703 = {};
  return obj17703;
}();
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._reset_BANG_[function() {
        var G__17707 = x__4993__auto__;
        return goog.typeOf(G__17707);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj17709 = {};
  return obj17709;
}();
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_() {
  var G__17711 = arguments.length;
  switch(G__17711) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._swap_BANG_[function() {
        var G__17713 = x__4993__auto__;
        return goog.typeOf(G__17713);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._swap_BANG_[function() {
        var G__17715 = x__4993__auto__;
        return goog.typeOf(G__17715);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._swap_BANG_[function() {
        var G__17717 = x__4993__auto__;
        return goog.typeOf(G__17717);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a, b);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._swap_BANG_[function() {
        var G__17719 = x__4993__auto__;
        return goog.typeOf(G__17719);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a, b, xs);
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
  var obj17722 = {};
  return obj17722;
}();
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (function() {
    var and__4345__auto__ = o;
    if (and__4345__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4993__auto__ = o == null ? null : o;
    return function() {
      var or__4357__auto__ = cljs.core._vreset_BANG_[function() {
        var G__17726 = x__4993__auto__;
        return goog.typeOf(G__17726);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj17728 = {};
  return obj17728;
}();
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (function() {
    var and__4345__auto__ = coll;
    if (and__4345__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4993__auto__ = coll == null ? null : coll;
    return function() {
      var or__4357__auto__ = cljs.core._iterator[function() {
        var G__17732 = x__4993__auto__;
        return goog.typeOf(G__17732);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._iterator["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__17735 = 4294967295;
  var G__17736 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__17735, G__17736) : Math.imul.call(null, G__17735, G__17736);
}() === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var G__17739 = a;
    var G__17740 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__17739, G__17740) : Math.imul.call(null, G__17739, G__17740);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__17741 = i + 2;
        var G__17742 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__17741;
        h1 = G__17742;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj17744 = {};
  return obj17744;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__17745 = i + 1;
          var G__17746 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__17745;
          hash = G__17746;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj17750 = {};
      return obj17750;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (function() {
    var G__17753 = o;
    if (G__17753) {
      var bit__5024__auto__ = G__17753.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__5024__auto__ || G__17753.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__17754 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__17754) : Math.floor.call(null, G__17754);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4345__auto__ = cljs.core.not(a.ns);
      if (and__4345__auto__) {
        return b.ns;
      } else {
        return and__4345__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__17761 = a.ns;
            var G__17762 = b.ns;
            return goog.array.defaultCompare(G__17761, G__17762);
          }();
          if (0 === nsc) {
            var G__17763 = a.name;
            var G__17764 = b.name;
            return goog.array.defaultCompare(G__17763, G__17764);
          } else {
            return nsc;
          }
        }
      } else {
        var G__17765 = a.name;
        var G__17766 = b.name;
        return goog.array.defaultCompare(G__17765, G__17766);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4773__auto__ = self__._hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__17768 = null;
  var G__17768__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__17768__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__17768 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17768__2.call(this, self__, coll);
      case 3:
        return G__17768__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17768.cljs$core$IFn$_invoke$arity$2 = G__17768__2;
  G__17768.cljs$core$IFn$_invoke$arity$3 = G__17768__3;
  return G__17768;
}();
cljs.core.Symbol.prototype.apply = function(self__, args17767) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args17767)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol() {
  var G__17770 = arguments.length;
  switch(G__17770) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__17817 = null;
  var G__17817__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__17817__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__17817__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__17817__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__17817__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__17817__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__17817__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__17817__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__17817__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__17817__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__17817__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__17817__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__17817__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__17817__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__17817__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__17817__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__17817__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__17817__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__17817__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__17817__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__17817__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__17817__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17773 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__17774 = a;
    var G__17775 = b;
    var G__17776 = c;
    var G__17777 = d;
    var G__17778 = e;
    var G__17779 = f;
    var G__17780 = g;
    var G__17781 = h;
    var G__17782 = i;
    var G__17783 = j;
    var G__17784 = k;
    var G__17785 = l;
    var G__17786 = m;
    var G__17787 = n;
    var G__17788 = o;
    var G__17789 = p;
    var G__17790 = q;
    var G__17791 = r;
    var G__17792 = s;
    var G__17793 = t;
    var G__17794 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__17773, G__17774, G__17775, G__17776, G__17777, G__17778, G__17779, G__17780, G__17781, G__17782, G__17783, G__17784, G__17785, G__17786, G__17787, G__17788, G__17789, G__17790, G__17791, G__17792, G__17793, G__17794) : cljs.core.apply.call(null, G__17773, G__17774, G__17775, G__17776, G__17777, G__17778, G__17779, G__17780, G__17781, G__17782, G__17783, G__17784, G__17785, G__17786, G__17787, 
    G__17788, G__17789, G__17790, G__17791, G__17792, G__17793, G__17794);
  };
  G__17817 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__17817__1.call(this, self__);
      case 2:
        return G__17817__2.call(this, self__, a);
      case 3:
        return G__17817__3.call(this, self__, a, b);
      case 4:
        return G__17817__4.call(this, self__, a, b, c);
      case 5:
        return G__17817__5.call(this, self__, a, b, c, d);
      case 6:
        return G__17817__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__17817__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__17817__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__17817__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__17817__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__17817__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__17817__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__17817__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__17817__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__17817__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__17817__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__17817__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__17817__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__17817__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__17817__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__17817__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__17817__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17817.cljs$core$IFn$_invoke$arity$1 = G__17817__1;
  G__17817.cljs$core$IFn$_invoke$arity$2 = G__17817__2;
  G__17817.cljs$core$IFn$_invoke$arity$3 = G__17817__3;
  G__17817.cljs$core$IFn$_invoke$arity$4 = G__17817__4;
  G__17817.cljs$core$IFn$_invoke$arity$5 = G__17817__5;
  G__17817.cljs$core$IFn$_invoke$arity$6 = G__17817__6;
  G__17817.cljs$core$IFn$_invoke$arity$7 = G__17817__7;
  G__17817.cljs$core$IFn$_invoke$arity$8 = G__17817__8;
  G__17817.cljs$core$IFn$_invoke$arity$9 = G__17817__9;
  G__17817.cljs$core$IFn$_invoke$arity$10 = G__17817__10;
  G__17817.cljs$core$IFn$_invoke$arity$11 = G__17817__11;
  G__17817.cljs$core$IFn$_invoke$arity$12 = G__17817__12;
  G__17817.cljs$core$IFn$_invoke$arity$13 = G__17817__13;
  G__17817.cljs$core$IFn$_invoke$arity$14 = G__17817__14;
  G__17817.cljs$core$IFn$_invoke$arity$15 = G__17817__15;
  G__17817.cljs$core$IFn$_invoke$arity$16 = G__17817__16;
  G__17817.cljs$core$IFn$_invoke$arity$17 = G__17817__17;
  G__17817.cljs$core$IFn$_invoke$arity$18 = G__17817__18;
  G__17817.cljs$core$IFn$_invoke$arity$19 = G__17817__19;
  G__17817.cljs$core$IFn$_invoke$arity$20 = G__17817__20;
  G__17817.cljs$core$IFn$_invoke$arity$21 = G__17817__21;
  G__17817.cljs$core$IFn$_invoke$arity$22 = G__17817__22;
  return G__17817;
}();
cljs.core.Var.prototype.apply = function(self__, args17772) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args17772)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__17795 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__17796 = a;
  var G__17797 = b;
  var G__17798 = c;
  var G__17799 = d;
  var G__17800 = e;
  var G__17801 = f;
  var G__17802 = g;
  var G__17803 = h;
  var G__17804 = i;
  var G__17805 = j;
  var G__17806 = k;
  var G__17807 = l;
  var G__17808 = m;
  var G__17809 = n;
  var G__17810 = o;
  var G__17811 = p;
  var G__17812 = q;
  var G__17813 = r;
  var G__17814 = s;
  var G__17815 = t;
  var G__17816 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__17795, G__17796, G__17797, G__17798, G__17799, G__17800, G__17801, G__17802, G__17803, G__17804, G__17805, G__17806, G__17807, G__17808, G__17809, G__17810, G__17811, G__17812, G__17813, G__17814, G__17815, G__17816) : cljs.core.apply.call(null, G__17795, G__17796, G__17797, G__17798, G__17799, G__17800, G__17801, G__17802, G__17803, G__17804, G__17805, G__17806, G__17807, G__17808, G__17809, 
  G__17810, G__17811, G__17812, G__17813, G__17814, G__17815, G__17816);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  var G__17819 = x;
  if (G__17819) {
    var bit__5031__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__4357__auto__ = bit__5031__auto__;
      if (cljs.core.truth_(or__4357__auto__)) {
        return or__4357__auto__;
      } else {
        return G__17819.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__17819.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__17819);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__17819);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  var G__17821 = value;
  if (G__17821) {
    var bit__5031__auto__ = G__17821.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__5031__auto__ || G__17821.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__17821.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__17821);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__17821);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__17823 = coll;
      if (G__17823) {
        var bit__5024__auto__ = G__17823.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__5024__auto__ || G__17823.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__17825 = coll;
      if (G__17825) {
        var bit__5024__auto__ = G__17825.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__5024__auto__ || G__17825.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__17827 = coll;
      if (G__17827) {
        var bit__5024__auto__ = G__17827.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__5024__auto__ || G__17827.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__17829 = coll;
      if (G__17829) {
        var bit__5024__auto__ = G__17829.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__5024__auto__ || G__17829.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_() {
  var G__17834 = arguments.length;
  switch(G__17834) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__17836 = y;
        var G__17837 = cljs.core.first(more);
        var G__17838 = cljs.core.next(more);
        x = G__17836;
        y = G__17837;
        more = G__17838;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq17830) {
  var G__17831 = cljs.core.first(seq17830);
  var seq17830__$1 = cljs.core.next(seq17830);
  var G__17832 = cljs.core.first(seq17830__$1);
  var seq17830__$2 = cljs.core.next(seq17830__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__17831, G__17832, seq17830__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__17839 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__17839) : cljs.core.es6_iterator_seq.call(null, G__17839);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__17840 = n + 1;
      var G__17841 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__17842 = cljs.core.next(coll__$1);
      n = G__17840;
      hash_code = G__17841;
      coll__$1 = G__17842;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__17843 = n + 1;
      var G__17844 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__17845 = cljs.core.next(coll__$1);
      n = G__17843;
      hash_code = G__17844;
      coll__$1 = G__17845;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  var G__17846 = this$__$1.valueOf();
  var G__17847 = other.valueOf();
  return goog.array.defaultCompare(G__17846, G__17847);
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__17848 = o;
  return goog.getUid(G__17848);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__17850 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17850) : cljs.core.deref.call(null, G__17850);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce() {
  var G__17852 = arguments.length;
  switch(G__17852) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__17853 = val;
          var G__17854 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17853, G__17854) : f.call(null, G__17853, G__17854);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__17860 = nval;
          var G__17861 = n + 1;
          val = G__17860;
          n = G__17861;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__17855 = val__$1;
        var G__17856 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17855, G__17856) : f.call(null, G__17855, G__17856);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__17862 = nval;
        var G__17863 = n + 1;
        val__$1 = G__17862;
        n = G__17863;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__17857 = val__$1;
        var G__17858 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17857, G__17858) : f.call(null, G__17857, G__17858);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__17864 = nval;
        var G__17865 = n + 1;
        val__$1 = G__17864;
        n = G__17865;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce() {
  var G__17867 = arguments.length;
  switch(G__17867) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__17868 = val;
          var G__17869 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17868, G__17869) : f.call(null, G__17868, G__17869);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__17875 = nval;
          var G__17876 = n + 1;
          val = G__17875;
          n = G__17876;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__17870 = val__$1;
        var G__17871 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17870, G__17871) : f.call(null, G__17870, G__17871);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__17877 = nval;
        var G__17878 = n + 1;
        val__$1 = G__17877;
        n = G__17878;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__17872 = val__$1;
        var G__17873 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17872, G__17873) : f.call(null, G__17872, G__17873);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__17879 = nval;
        var G__17880 = n + 1;
        val__$1 = G__17879;
        n = G__17880;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  var G__17882 = x;
  if (G__17882) {
    var bit__5031__auto__ = G__17882.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__5031__auto__ || G__17882.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__17882.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__17882);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__17882);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  var G__17884 = x;
  if (G__17884) {
    var bit__5031__auto__ = G__17884.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__5031__auto__ || G__17884.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__17884.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__17884);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__17884);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__17885 = coll__$1;
  var G__17886 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__17885, G__17886) : cljs.core.equiv_sequential.call(null, G__17885, G__17886);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__17887 = o;
  var G__17888 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__17887, G__17888) : cljs.core.cons.call(null, G__17887, G__17888);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq() {
  var G__17890 = arguments.length;
  switch(G__17890) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq() {
  var G__17893 = arguments.length;
  switch(G__17893) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__17895 = coll__$1;
  var G__17896 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__17895, G__17896) : cljs.core.equiv_sequential.call(null, G__17895, G__17896);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__17897 = cljs.core.List.EMPTY;
  var G__17898 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__17897, G__17898) : cljs.core.with_meta.call(null, G__17897, G__17898);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__17899 = f;
  var G__17900 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__17899, G__17900) : cljs.core.seq_reduce.call(null, G__17899, G__17900);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__17901 = f;
  var G__17902 = start;
  var G__17903 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__17901, G__17902, G__17903) : cljs.core.seq_reduce.call(null, G__17901, G__17902, G__17903);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__17904 = o;
  var G__17905 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__17904, G__17905) : cljs.core.cons.call(null, G__17904, G__17905);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__17906 = sn;
      s = G__17906;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj() {
  var G__17911 = arguments.length;
  switch(G__17911) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__17913 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__17914 = cljs.core.first(xs);
      var G__17915 = cljs.core.next(xs);
      coll = G__17913;
      x = G__17914;
      xs = G__17915;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq17907) {
  var G__17908 = cljs.core.first(seq17907);
  var seq17907__$1 = cljs.core.next(seq17907);
  var G__17909 = cljs.core.first(seq17907__$1);
  var seq17907__$2 = cljs.core.next(seq17907__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__17908, G__17909, seq17907__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__17916 = cljs.core.next(s);
      var G__17917 = acc + 1;
      s = G__17916;
      acc = G__17917;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__17919 = coll;
      if (G__17919) {
        var bit__5024__auto__ = G__17919.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__5024__auto__ || G__17919.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth() {
  var G__17921 = arguments.length;
  switch(G__17921) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__17923 = cljs.core.next(coll);
            var G__17924 = n - 1;
            coll = G__17923;
            n = G__17924;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__17925 = cljs.core.next(coll);
            var G__17926 = n - 1;
            var G__17927 = not_found;
            coll = G__17925;
            n = G__17926;
            not_found = G__17927;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth() {
  var G__17929 = arguments.length;
  switch(G__17929) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (function() {
        var G__17930 = coll;
        if (G__17930) {
          var bit__5024__auto__ = G__17930.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__5024__auto__ || G__17930.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (function() {
                var G__17931 = coll;
                if (G__17931) {
                  var bit__5031__auto__ = G__17931.cljs$lang$protocol_mask$partition0$ & 64;
                  if (bit__5031__auto__ || G__17931.cljs$core$ISeq$) {
                    return true;
                  } else {
                    if (!G__17931.cljs$lang$protocol_mask$partition0$) {
                      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17931);
                    } else {
                      return false;
                    }
                  }
                } else {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17931);
                }
              }()) {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (function() {
        var G__17932 = coll;
        if (G__17932) {
          var bit__5024__auto__ = G__17932.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__5024__auto__ || G__17932.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (function() {
                var G__17933 = coll;
                if (G__17933) {
                  var bit__5031__auto__ = G__17933.cljs$lang$protocol_mask$partition0$ & 64;
                  if (bit__5031__auto__ || G__17933.cljs$core$ISeq$) {
                    return true;
                  } else {
                    if (!G__17933.cljs$lang$protocol_mask$partition0$) {
                      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17933);
                    } else {
                      return false;
                    }
                  }
                } else {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17933);
                }
              }()) {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__17935 = n__$1 - 1;
      var G__17936 = cljs.core.rest(xs);
      n__$1 = G__17935;
      xs = G__17936;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get() {
  var G__17938 = arguments.length;
  switch(G__17938) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (function() {
      var G__17939 = o;
      if (G__17939) {
        var bit__5024__auto__ = G__17939.cljs$lang$protocol_mask$partition0$ & 256;
        if (bit__5024__auto__ || G__17939.cljs$core$ILookup$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (function() {
      var G__17940 = o;
      if (G__17940) {
        var bit__5024__auto__ = G__17940.cljs$lang$protocol_mask$partition0$ & 256;
        if (bit__5024__auto__ || G__17940.cljs$core$ILookup$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc() {
  var G__17947 = arguments.length;
  switch(G__17947) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5408__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__17949 = ret;
      var G__17950 = cljs.core.first(kvs);
      var G__17951 = cljs.core.second(kvs);
      var G__17952 = cljs.core.nnext(kvs);
      coll = G__17949;
      k = G__17950;
      v = G__17951;
      kvs = G__17952;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq17942) {
  var G__17943 = cljs.core.first(seq17942);
  var seq17942__$1 = cljs.core.next(seq17942);
  var G__17944 = cljs.core.first(seq17942__$1);
  var seq17942__$2 = cljs.core.next(seq17942__$1);
  var G__17945 = cljs.core.first(seq17942__$2);
  var seq17942__$3 = cljs.core.next(seq17942__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__17943, G__17944, G__17945, seq17942__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc() {
  var G__17957 = arguments.length;
  switch(G__17957) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__17959 = ret;
        var G__17960 = cljs.core.first(ks);
        var G__17961 = cljs.core.next(ks);
        coll = G__17959;
        k = G__17960;
        ks = G__17961;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq17953) {
  var G__17954 = cljs.core.first(seq17953);
  var seq17953__$1 = cljs.core.next(seq17953);
  var G__17955 = cljs.core.first(seq17953__$1);
  var seq17953__$2 = cljs.core.next(seq17953__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__17954, G__17955, seq17953__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4357__auto__ = function() {
    var G__17966 = f;
    return goog.isFunction(G__17966);
  }();
  if (cljs.core.truth_(or__4357__auto__)) {
    return or__4357__auto__;
  } else {
    var G__17967 = f;
    if (G__17967) {
      var bit__5031__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4357__auto____$1 = bit__5031__auto__;
        if (cljs.core.truth_(or__4357__auto____$1)) {
          return or__4357__auto____$1;
        } else {
          return G__17967.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__17967.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__17967);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__17967);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__18433 = null;
  var G__18433__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__18433__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17969 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__17969) : self__.afn.call(null, G__17969);
  };
  var G__18433__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17970 = a;
    var G__17971 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__17970, G__17971) : self__.afn.call(null, G__17970, G__17971);
  };
  var G__18433__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17972 = a;
    var G__17973 = b;
    var G__17974 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__17972, G__17973, G__17974) : self__.afn.call(null, G__17972, G__17973, G__17974);
  };
  var G__18433__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17975 = a;
    var G__17976 = b;
    var G__17977 = c;
    var G__17978 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__17975, G__17976, G__17977, G__17978) : self__.afn.call(null, G__17975, G__17976, G__17977, G__17978);
  };
  var G__18433__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17979 = a;
    var G__17980 = b;
    var G__17981 = c;
    var G__17982 = d;
    var G__17983 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__17979, G__17980, G__17981, G__17982, G__17983) : self__.afn.call(null, G__17979, G__17980, G__17981, G__17982, G__17983);
  };
  var G__18433__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17984 = a;
    var G__17985 = b;
    var G__17986 = c;
    var G__17987 = d;
    var G__17988 = e;
    var G__17989 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__17984, G__17985, G__17986, G__17987, G__17988, G__17989) : self__.afn.call(null, G__17984, G__17985, G__17986, G__17987, G__17988, G__17989);
  };
  var G__18433__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17990 = a;
    var G__17991 = b;
    var G__17992 = c;
    var G__17993 = d;
    var G__17994 = e;
    var G__17995 = f;
    var G__17996 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__17990, G__17991, G__17992, G__17993, G__17994, G__17995, G__17996) : self__.afn.call(null, G__17990, G__17991, G__17992, G__17993, G__17994, G__17995, G__17996);
  };
  var G__18433__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17997 = a;
    var G__17998 = b;
    var G__17999 = c;
    var G__18000 = d;
    var G__18001 = e;
    var G__18002 = f;
    var G__18003 = g;
    var G__18004 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__17997, G__17998, G__17999, G__18000, G__18001, G__18002, G__18003, G__18004) : self__.afn.call(null, G__17997, G__17998, G__17999, G__18000, G__18001, G__18002, G__18003, G__18004);
  };
  var G__18433__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18005 = a;
    var G__18006 = b;
    var G__18007 = c;
    var G__18008 = d;
    var G__18009 = e;
    var G__18010 = f;
    var G__18011 = g;
    var G__18012 = h;
    var G__18013 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__18005, G__18006, G__18007, G__18008, G__18009, G__18010, G__18011, G__18012, G__18013) : self__.afn.call(null, G__18005, G__18006, G__18007, G__18008, G__18009, G__18010, G__18011, G__18012, G__18013);
  };
  var G__18433__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18014 = a;
    var G__18015 = b;
    var G__18016 = c;
    var G__18017 = d;
    var G__18018 = e;
    var G__18019 = f;
    var G__18020 = g;
    var G__18021 = h;
    var G__18022 = i;
    var G__18023 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__18014, G__18015, G__18016, G__18017, G__18018, G__18019, G__18020, G__18021, G__18022, G__18023) : self__.afn.call(null, G__18014, G__18015, G__18016, G__18017, G__18018, G__18019, G__18020, G__18021, G__18022, G__18023);
  };
  var G__18433__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18024 = a;
    var G__18025 = b;
    var G__18026 = c;
    var G__18027 = d;
    var G__18028 = e;
    var G__18029 = f;
    var G__18030 = g;
    var G__18031 = h;
    var G__18032 = i;
    var G__18033 = j;
    var G__18034 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__18024, G__18025, G__18026, G__18027, G__18028, G__18029, G__18030, G__18031, G__18032, G__18033, G__18034) : self__.afn.call(null, G__18024, G__18025, G__18026, G__18027, G__18028, G__18029, G__18030, G__18031, G__18032, G__18033, G__18034);
  };
  var G__18433__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18035 = a;
    var G__18036 = b;
    var G__18037 = c;
    var G__18038 = d;
    var G__18039 = e;
    var G__18040 = f;
    var G__18041 = g;
    var G__18042 = h;
    var G__18043 = i;
    var G__18044 = j;
    var G__18045 = k;
    var G__18046 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__18035, G__18036, G__18037, G__18038, G__18039, G__18040, G__18041, G__18042, G__18043, G__18044, G__18045, G__18046) : self__.afn.call(null, G__18035, G__18036, G__18037, G__18038, G__18039, G__18040, G__18041, G__18042, G__18043, G__18044, G__18045, G__18046);
  };
  var G__18433__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18047 = a;
    var G__18048 = b;
    var G__18049 = c;
    var G__18050 = d;
    var G__18051 = e;
    var G__18052 = f;
    var G__18053 = g;
    var G__18054 = h;
    var G__18055 = i;
    var G__18056 = j;
    var G__18057 = k;
    var G__18058 = l;
    var G__18059 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__18047, G__18048, G__18049, G__18050, G__18051, G__18052, G__18053, G__18054, G__18055, G__18056, G__18057, G__18058, G__18059) : self__.afn.call(null, G__18047, G__18048, G__18049, G__18050, G__18051, G__18052, G__18053, G__18054, G__18055, G__18056, G__18057, G__18058, G__18059);
  };
  var G__18433__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18060 = a;
    var G__18061 = b;
    var G__18062 = c;
    var G__18063 = d;
    var G__18064 = e;
    var G__18065 = f;
    var G__18066 = g;
    var G__18067 = h;
    var G__18068 = i;
    var G__18069 = j;
    var G__18070 = k;
    var G__18071 = l;
    var G__18072 = m;
    var G__18073 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__18060, G__18061, G__18062, G__18063, G__18064, G__18065, G__18066, G__18067, G__18068, G__18069, G__18070, G__18071, G__18072, G__18073) : self__.afn.call(null, G__18060, G__18061, G__18062, G__18063, G__18064, G__18065, G__18066, G__18067, G__18068, G__18069, G__18070, G__18071, G__18072, G__18073);
  };
  var G__18433__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18074 = a;
    var G__18075 = b;
    var G__18076 = c;
    var G__18077 = d;
    var G__18078 = e;
    var G__18079 = f;
    var G__18080 = g;
    var G__18081 = h;
    var G__18082 = i;
    var G__18083 = j;
    var G__18084 = k;
    var G__18085 = l;
    var G__18086 = m;
    var G__18087 = n;
    var G__18088 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__18074, G__18075, G__18076, G__18077, G__18078, G__18079, G__18080, G__18081, G__18082, G__18083, G__18084, G__18085, G__18086, G__18087, G__18088) : self__.afn.call(null, G__18074, G__18075, G__18076, G__18077, G__18078, G__18079, G__18080, G__18081, G__18082, G__18083, G__18084, G__18085, G__18086, G__18087, G__18088);
  };
  var G__18433__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18089 = a;
    var G__18090 = b;
    var G__18091 = c;
    var G__18092 = d;
    var G__18093 = e;
    var G__18094 = f;
    var G__18095 = g;
    var G__18096 = h;
    var G__18097 = i;
    var G__18098 = j;
    var G__18099 = k;
    var G__18100 = l;
    var G__18101 = m;
    var G__18102 = n;
    var G__18103 = o;
    var G__18104 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__18089, G__18090, G__18091, G__18092, G__18093, G__18094, G__18095, G__18096, G__18097, G__18098, G__18099, G__18100, G__18101, G__18102, G__18103, G__18104) : self__.afn.call(null, G__18089, G__18090, G__18091, G__18092, G__18093, G__18094, G__18095, G__18096, G__18097, G__18098, G__18099, G__18100, G__18101, G__18102, G__18103, G__18104);
  };
  var G__18433__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18105 = a;
    var G__18106 = b;
    var G__18107 = c;
    var G__18108 = d;
    var G__18109 = e;
    var G__18110 = f;
    var G__18111 = g;
    var G__18112 = h;
    var G__18113 = i;
    var G__18114 = j;
    var G__18115 = k;
    var G__18116 = l;
    var G__18117 = m;
    var G__18118 = n;
    var G__18119 = o;
    var G__18120 = p;
    var G__18121 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__18105, G__18106, G__18107, G__18108, G__18109, G__18110, G__18111, G__18112, G__18113, G__18114, G__18115, G__18116, G__18117, G__18118, G__18119, G__18120, G__18121) : self__.afn.call(null, G__18105, G__18106, G__18107, G__18108, G__18109, G__18110, G__18111, G__18112, G__18113, G__18114, G__18115, G__18116, G__18117, G__18118, G__18119, G__18120, G__18121);
  };
  var G__18433__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18122 = a;
    var G__18123 = b;
    var G__18124 = c;
    var G__18125 = d;
    var G__18126 = e;
    var G__18127 = f;
    var G__18128 = g;
    var G__18129 = h;
    var G__18130 = i;
    var G__18131 = j;
    var G__18132 = k;
    var G__18133 = l;
    var G__18134 = m;
    var G__18135 = n;
    var G__18136 = o;
    var G__18137 = p;
    var G__18138 = q;
    var G__18139 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__18122, G__18123, G__18124, G__18125, G__18126, G__18127, G__18128, G__18129, G__18130, G__18131, G__18132, G__18133, G__18134, G__18135, G__18136, G__18137, G__18138, G__18139) : self__.afn.call(null, G__18122, G__18123, G__18124, G__18125, G__18126, G__18127, G__18128, G__18129, G__18130, G__18131, G__18132, G__18133, G__18134, G__18135, G__18136, G__18137, G__18138, G__18139);
  };
  var G__18433__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18140 = a;
    var G__18141 = b;
    var G__18142 = c;
    var G__18143 = d;
    var G__18144 = e;
    var G__18145 = f;
    var G__18146 = g;
    var G__18147 = h;
    var G__18148 = i;
    var G__18149 = j;
    var G__18150 = k;
    var G__18151 = l;
    var G__18152 = m;
    var G__18153 = n;
    var G__18154 = o;
    var G__18155 = p;
    var G__18156 = q;
    var G__18157 = r;
    var G__18158 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__18140, G__18141, G__18142, G__18143, G__18144, G__18145, G__18146, G__18147, G__18148, G__18149, G__18150, G__18151, G__18152, G__18153, G__18154, G__18155, G__18156, G__18157, G__18158) : self__.afn.call(null, G__18140, G__18141, G__18142, G__18143, G__18144, G__18145, G__18146, G__18147, G__18148, G__18149, G__18150, G__18151, G__18152, G__18153, G__18154, G__18155, G__18156, G__18157, G__18158);
  };
  var G__18433__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18159 = a;
    var G__18160 = b;
    var G__18161 = c;
    var G__18162 = d;
    var G__18163 = e;
    var G__18164 = f;
    var G__18165 = g;
    var G__18166 = h;
    var G__18167 = i;
    var G__18168 = j;
    var G__18169 = k;
    var G__18170 = l;
    var G__18171 = m;
    var G__18172 = n;
    var G__18173 = o;
    var G__18174 = p;
    var G__18175 = q;
    var G__18176 = r;
    var G__18177 = s;
    var G__18178 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__18159, G__18160, G__18161, G__18162, G__18163, G__18164, G__18165, G__18166, G__18167, G__18168, G__18169, G__18170, G__18171, G__18172, G__18173, G__18174, G__18175, G__18176, G__18177, G__18178) : self__.afn.call(null, G__18159, G__18160, G__18161, G__18162, G__18163, G__18164, G__18165, G__18166, G__18167, G__18168, G__18169, G__18170, G__18171, G__18172, G__18173, G__18174, G__18175, G__18176, 
    G__18177, G__18178);
  };
  var G__18433__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18179 = self__.afn;
    var G__18180 = a;
    var G__18181 = b;
    var G__18182 = c;
    var G__18183 = d;
    var G__18184 = e;
    var G__18185 = f;
    var G__18186 = g;
    var G__18187 = h;
    var G__18188 = i;
    var G__18189 = j;
    var G__18190 = k;
    var G__18191 = l;
    var G__18192 = m;
    var G__18193 = n;
    var G__18194 = o;
    var G__18195 = p;
    var G__18196 = q;
    var G__18197 = r;
    var G__18198 = s;
    var G__18199 = t;
    var G__18200 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18179, G__18180, G__18181, G__18182, G__18183, G__18184, G__18185, G__18186, G__18187, G__18188, G__18189, G__18190, G__18191, G__18192, G__18193, G__18194, G__18195, G__18196, G__18197, G__18198, G__18199, G__18200) : cljs.core.apply.call(null, G__18179, G__18180, G__18181, G__18182, G__18183, G__18184, G__18185, G__18186, G__18187, G__18188, G__18189, G__18190, G__18191, G__18192, G__18193, 
    G__18194, G__18195, G__18196, G__18197, G__18198, G__18199, G__18200);
  };
  G__18433 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__18433__1.call(this, self__);
      case 2:
        return G__18433__2.call(this, self__, a);
      case 3:
        return G__18433__3.call(this, self__, a, b);
      case 4:
        return G__18433__4.call(this, self__, a, b, c);
      case 5:
        return G__18433__5.call(this, self__, a, b, c, d);
      case 6:
        return G__18433__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__18433__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__18433__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__18433__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__18433__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__18433__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__18433__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__18433__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__18433__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__18433__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__18433__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__18433__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__18433__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__18433__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__18433__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__18433__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__18433__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18433.cljs$core$IFn$_invoke$arity$1 = G__18433__1;
  G__18433.cljs$core$IFn$_invoke$arity$2 = G__18433__2;
  G__18433.cljs$core$IFn$_invoke$arity$3 = G__18433__3;
  G__18433.cljs$core$IFn$_invoke$arity$4 = G__18433__4;
  G__18433.cljs$core$IFn$_invoke$arity$5 = G__18433__5;
  G__18433.cljs$core$IFn$_invoke$arity$6 = G__18433__6;
  G__18433.cljs$core$IFn$_invoke$arity$7 = G__18433__7;
  G__18433.cljs$core$IFn$_invoke$arity$8 = G__18433__8;
  G__18433.cljs$core$IFn$_invoke$arity$9 = G__18433__9;
  G__18433.cljs$core$IFn$_invoke$arity$10 = G__18433__10;
  G__18433.cljs$core$IFn$_invoke$arity$11 = G__18433__11;
  G__18433.cljs$core$IFn$_invoke$arity$12 = G__18433__12;
  G__18433.cljs$core$IFn$_invoke$arity$13 = G__18433__13;
  G__18433.cljs$core$IFn$_invoke$arity$14 = G__18433__14;
  G__18433.cljs$core$IFn$_invoke$arity$15 = G__18433__15;
  G__18433.cljs$core$IFn$_invoke$arity$16 = G__18433__16;
  G__18433.cljs$core$IFn$_invoke$arity$17 = G__18433__17;
  G__18433.cljs$core$IFn$_invoke$arity$18 = G__18433__18;
  G__18433.cljs$core$IFn$_invoke$arity$19 = G__18433__19;
  G__18433.cljs$core$IFn$_invoke$arity$20 = G__18433__20;
  G__18433.cljs$core$IFn$_invoke$arity$21 = G__18433__21;
  G__18433.cljs$core$IFn$_invoke$arity$22 = G__18433__22;
  return G__18433;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args17968) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args17968)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__18201 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__18201) : self__.afn.call(null, G__18201);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__18202 = a;
  var G__18203 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__18202, G__18203) : self__.afn.call(null, G__18202, G__18203);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__18204 = a;
  var G__18205 = b;
  var G__18206 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__18204, G__18205, G__18206) : self__.afn.call(null, G__18204, G__18205, G__18206);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__18207 = a;
  var G__18208 = b;
  var G__18209 = c;
  var G__18210 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__18207, G__18208, G__18209, G__18210) : self__.afn.call(null, G__18207, G__18208, G__18209, G__18210);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__18211 = a;
  var G__18212 = b;
  var G__18213 = c;
  var G__18214 = d;
  var G__18215 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__18211, G__18212, G__18213, G__18214, G__18215) : self__.afn.call(null, G__18211, G__18212, G__18213, G__18214, G__18215);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__18216 = a;
  var G__18217 = b;
  var G__18218 = c;
  var G__18219 = d;
  var G__18220 = e;
  var G__18221 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__18216, G__18217, G__18218, G__18219, G__18220, G__18221) : self__.afn.call(null, G__18216, G__18217, G__18218, G__18219, G__18220, G__18221);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__18222 = a;
  var G__18223 = b;
  var G__18224 = c;
  var G__18225 = d;
  var G__18226 = e;
  var G__18227 = f;
  var G__18228 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__18222, G__18223, G__18224, G__18225, G__18226, G__18227, G__18228) : self__.afn.call(null, G__18222, G__18223, G__18224, G__18225, G__18226, G__18227, G__18228);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__18229 = a;
  var G__18230 = b;
  var G__18231 = c;
  var G__18232 = d;
  var G__18233 = e;
  var G__18234 = f;
  var G__18235 = g;
  var G__18236 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__18229, G__18230, G__18231, G__18232, G__18233, G__18234, G__18235, G__18236) : self__.afn.call(null, G__18229, G__18230, G__18231, G__18232, G__18233, G__18234, G__18235, G__18236);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__18237 = a;
  var G__18238 = b;
  var G__18239 = c;
  var G__18240 = d;
  var G__18241 = e;
  var G__18242 = f;
  var G__18243 = g;
  var G__18244 = h;
  var G__18245 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__18237, G__18238, G__18239, G__18240, G__18241, G__18242, G__18243, G__18244, G__18245) : self__.afn.call(null, G__18237, G__18238, G__18239, G__18240, G__18241, G__18242, G__18243, G__18244, G__18245);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__18246 = a;
  var G__18247 = b;
  var G__18248 = c;
  var G__18249 = d;
  var G__18250 = e;
  var G__18251 = f;
  var G__18252 = g;
  var G__18253 = h;
  var G__18254 = i;
  var G__18255 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__18246, G__18247, G__18248, G__18249, G__18250, G__18251, G__18252, G__18253, G__18254, G__18255) : self__.afn.call(null, G__18246, G__18247, G__18248, G__18249, G__18250, G__18251, G__18252, G__18253, G__18254, G__18255);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__18256 = a;
  var G__18257 = b;
  var G__18258 = c;
  var G__18259 = d;
  var G__18260 = e;
  var G__18261 = f;
  var G__18262 = g;
  var G__18263 = h;
  var G__18264 = i;
  var G__18265 = j;
  var G__18266 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__18256, G__18257, G__18258, G__18259, G__18260, G__18261, G__18262, G__18263, G__18264, G__18265, G__18266) : self__.afn.call(null, G__18256, G__18257, G__18258, G__18259, G__18260, G__18261, G__18262, G__18263, G__18264, G__18265, G__18266);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__18267 = a;
  var G__18268 = b;
  var G__18269 = c;
  var G__18270 = d;
  var G__18271 = e;
  var G__18272 = f;
  var G__18273 = g;
  var G__18274 = h;
  var G__18275 = i;
  var G__18276 = j;
  var G__18277 = k;
  var G__18278 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__18267, G__18268, G__18269, G__18270, G__18271, G__18272, G__18273, G__18274, G__18275, G__18276, G__18277, G__18278) : self__.afn.call(null, G__18267, G__18268, G__18269, G__18270, G__18271, G__18272, G__18273, G__18274, G__18275, G__18276, G__18277, G__18278);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__18279 = a;
  var G__18280 = b;
  var G__18281 = c;
  var G__18282 = d;
  var G__18283 = e;
  var G__18284 = f;
  var G__18285 = g;
  var G__18286 = h;
  var G__18287 = i;
  var G__18288 = j;
  var G__18289 = k;
  var G__18290 = l;
  var G__18291 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__18279, G__18280, G__18281, G__18282, G__18283, G__18284, G__18285, G__18286, G__18287, G__18288, G__18289, G__18290, G__18291) : self__.afn.call(null, G__18279, G__18280, G__18281, G__18282, G__18283, G__18284, G__18285, G__18286, G__18287, G__18288, G__18289, G__18290, G__18291);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__18292 = a;
  var G__18293 = b;
  var G__18294 = c;
  var G__18295 = d;
  var G__18296 = e;
  var G__18297 = f;
  var G__18298 = g;
  var G__18299 = h;
  var G__18300 = i;
  var G__18301 = j;
  var G__18302 = k;
  var G__18303 = l;
  var G__18304 = m;
  var G__18305 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__18292, G__18293, G__18294, G__18295, G__18296, G__18297, G__18298, G__18299, G__18300, G__18301, G__18302, G__18303, G__18304, G__18305) : self__.afn.call(null, G__18292, G__18293, G__18294, G__18295, G__18296, G__18297, G__18298, G__18299, G__18300, G__18301, G__18302, G__18303, G__18304, G__18305);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__18306 = a;
  var G__18307 = b;
  var G__18308 = c;
  var G__18309 = d;
  var G__18310 = e;
  var G__18311 = f;
  var G__18312 = g;
  var G__18313 = h;
  var G__18314 = i;
  var G__18315 = j;
  var G__18316 = k;
  var G__18317 = l;
  var G__18318 = m;
  var G__18319 = n;
  var G__18320 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__18306, G__18307, G__18308, G__18309, G__18310, G__18311, G__18312, G__18313, G__18314, G__18315, G__18316, G__18317, G__18318, G__18319, G__18320) : self__.afn.call(null, G__18306, G__18307, G__18308, G__18309, G__18310, G__18311, G__18312, G__18313, G__18314, G__18315, G__18316, G__18317, G__18318, G__18319, G__18320);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__18321 = a;
  var G__18322 = b;
  var G__18323 = c;
  var G__18324 = d;
  var G__18325 = e;
  var G__18326 = f;
  var G__18327 = g;
  var G__18328 = h;
  var G__18329 = i;
  var G__18330 = j;
  var G__18331 = k;
  var G__18332 = l;
  var G__18333 = m;
  var G__18334 = n;
  var G__18335 = o;
  var G__18336 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__18321, G__18322, G__18323, G__18324, G__18325, G__18326, G__18327, G__18328, G__18329, G__18330, G__18331, G__18332, G__18333, G__18334, G__18335, G__18336) : self__.afn.call(null, G__18321, G__18322, G__18323, G__18324, G__18325, G__18326, G__18327, G__18328, G__18329, G__18330, G__18331, G__18332, G__18333, G__18334, G__18335, G__18336);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__18337 = a;
  var G__18338 = b;
  var G__18339 = c;
  var G__18340 = d;
  var G__18341 = e;
  var G__18342 = f;
  var G__18343 = g;
  var G__18344 = h;
  var G__18345 = i;
  var G__18346 = j;
  var G__18347 = k;
  var G__18348 = l;
  var G__18349 = m;
  var G__18350 = n;
  var G__18351 = o;
  var G__18352 = p;
  var G__18353 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__18337, G__18338, G__18339, G__18340, G__18341, G__18342, G__18343, G__18344, G__18345, G__18346, G__18347, G__18348, G__18349, G__18350, G__18351, G__18352, G__18353) : self__.afn.call(null, G__18337, G__18338, G__18339, G__18340, G__18341, G__18342, G__18343, G__18344, G__18345, G__18346, G__18347, G__18348, G__18349, G__18350, G__18351, G__18352, G__18353);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__18354 = a;
  var G__18355 = b;
  var G__18356 = c;
  var G__18357 = d;
  var G__18358 = e;
  var G__18359 = f;
  var G__18360 = g;
  var G__18361 = h;
  var G__18362 = i;
  var G__18363 = j;
  var G__18364 = k;
  var G__18365 = l;
  var G__18366 = m;
  var G__18367 = n;
  var G__18368 = o;
  var G__18369 = p;
  var G__18370 = q;
  var G__18371 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__18354, G__18355, G__18356, G__18357, G__18358, G__18359, G__18360, G__18361, G__18362, G__18363, G__18364, G__18365, G__18366, G__18367, G__18368, G__18369, G__18370, G__18371) : self__.afn.call(null, G__18354, G__18355, G__18356, G__18357, G__18358, G__18359, G__18360, G__18361, G__18362, G__18363, G__18364, G__18365, G__18366, G__18367, G__18368, G__18369, G__18370, G__18371);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__18372 = a;
  var G__18373 = b;
  var G__18374 = c;
  var G__18375 = d;
  var G__18376 = e;
  var G__18377 = f;
  var G__18378 = g;
  var G__18379 = h;
  var G__18380 = i;
  var G__18381 = j;
  var G__18382 = k;
  var G__18383 = l;
  var G__18384 = m;
  var G__18385 = n;
  var G__18386 = o;
  var G__18387 = p;
  var G__18388 = q;
  var G__18389 = r;
  var G__18390 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__18372, G__18373, G__18374, G__18375, G__18376, G__18377, G__18378, G__18379, G__18380, G__18381, G__18382, G__18383, G__18384, G__18385, G__18386, G__18387, G__18388, G__18389, G__18390) : self__.afn.call(null, G__18372, G__18373, G__18374, G__18375, G__18376, G__18377, G__18378, G__18379, G__18380, G__18381, G__18382, G__18383, G__18384, G__18385, G__18386, G__18387, G__18388, G__18389, G__18390);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__18391 = a;
  var G__18392 = b;
  var G__18393 = c;
  var G__18394 = d;
  var G__18395 = e;
  var G__18396 = f;
  var G__18397 = g;
  var G__18398 = h;
  var G__18399 = i;
  var G__18400 = j;
  var G__18401 = k;
  var G__18402 = l;
  var G__18403 = m;
  var G__18404 = n;
  var G__18405 = o;
  var G__18406 = p;
  var G__18407 = q;
  var G__18408 = r;
  var G__18409 = s;
  var G__18410 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__18391, G__18392, G__18393, G__18394, G__18395, G__18396, G__18397, G__18398, G__18399, G__18400, G__18401, G__18402, G__18403, G__18404, G__18405, G__18406, G__18407, G__18408, G__18409, G__18410) : self__.afn.call(null, G__18391, G__18392, G__18393, G__18394, G__18395, G__18396, G__18397, G__18398, G__18399, G__18400, G__18401, G__18402, G__18403, G__18404, G__18405, G__18406, G__18407, G__18408, G__18409, 
  G__18410);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__18411 = self__.afn;
  var G__18412 = a;
  var G__18413 = b;
  var G__18414 = c;
  var G__18415 = d;
  var G__18416 = e;
  var G__18417 = f;
  var G__18418 = g;
  var G__18419 = h;
  var G__18420 = i;
  var G__18421 = j;
  var G__18422 = k;
  var G__18423 = l;
  var G__18424 = m;
  var G__18425 = n;
  var G__18426 = o;
  var G__18427 = p;
  var G__18428 = q;
  var G__18429 = r;
  var G__18430 = s;
  var G__18431 = t;
  var G__18432 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18411, G__18412, G__18413, G__18414, G__18415, G__18416, G__18417, G__18418, G__18419, G__18420, G__18421, G__18422, G__18423, G__18424, G__18425, G__18426, G__18427, G__18428, G__18429, G__18430, G__18431, G__18432) : cljs.core.apply.call(null, G__18411, G__18412, G__18413, G__18414, G__18415, G__18416, G__18417, G__18418, G__18419, G__18420, G__18421, G__18422, G__18423, G__18424, G__18425, 
  G__18426, G__18427, G__18428, G__18429, G__18430, G__18431, G__18432);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__18437 = o;
    if (G__18437) {
      var bit__5031__auto__ = G__18437.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__5031__auto__ || G__18437.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__18437.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__18437);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__18437);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4345__auto__ = !(o == null);
    if (and__4345__auto__) {
      var G__18441 = o;
      if (G__18441) {
        var bit__5031__auto__ = G__18441.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__5031__auto__ || G__18441.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__18441.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__18441);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__18441);
      }
    } else {
      return and__4345__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj() {
  var G__18446 = arguments.length;
  switch(G__18446) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__18448 = ret;
        var G__18449 = cljs.core.first(ks);
        var G__18450 = cljs.core.next(ks);
        coll = G__18448;
        k = G__18449;
        ks = G__18450;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq18442) {
  var G__18443 = cljs.core.first(seq18442);
  var seq18442__$1 = cljs.core.next(seq18442);
  var G__18444 = cljs.core.first(seq18442__$1);
  var seq18442__$2 = cljs.core.next(seq18442__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__18443, G__18444, seq18442__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__18452 = x;
    if (G__18452) {
      var bit__5031__auto__ = G__18452.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__5031__auto__ || G__18452.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__18452.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__18452);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__18452);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__18454 = x;
    if (G__18454) {
      var bit__5031__auto__ = G__18454.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__5031__auto__ || G__18454.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__18454.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__18454);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__18454);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  var G__18456 = x;
  if (G__18456) {
    var bit__5031__auto__ = G__18456.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__5031__auto__ || G__18456.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__18456.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__18456);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__18456);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  var G__18458 = x;
  if (G__18458) {
    var bit__5031__auto__ = G__18458.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__5031__auto__ || G__18458.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__18458.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__18458);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__18458);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  var G__18460 = x;
  if (G__18460) {
    var bit__5031__auto__ = G__18460.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__5031__auto__ || G__18460.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__18460.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__18460);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__18460);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  var G__18462 = x;
  if (G__18462) {
    var bit__5031__auto__ = G__18462.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__5031__auto__ || G__18462.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__18462.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__18462);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__18462);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__18464 = x;
    if (G__18464) {
      var bit__5031__auto__ = G__18464.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__5031__auto__ || G__18464.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__18464.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__18464);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__18464);
    }
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  var G__18466 = x;
  if (G__18466) {
    var bit__5031__auto__ = G__18466.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__5031__auto__ || G__18466.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__18466.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__18466);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__18466);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  var G__18468 = x;
  if (G__18468) {
    var bit__5024__auto__ = G__18468.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__5024__auto__ || G__18468.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj() {
  var G__18471 = arguments.length;
  switch(G__18471) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5408__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  var obj18473 = {};
  return obj18473;
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var G__18474 = goog.object.create;
  var G__18475 = keyvals;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__18474, G__18475) : cljs.core.apply.call(null, G__18474, G__18475);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq18469) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq18469));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__18479_18481 = obj;
  var G__18480_18482 = function(G__18479_18481, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__18479_18481, keys);
  goog.object.forEach(G__18479_18481, G__18480_18482);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__18483 = i__$1 + 1;
      var G__18484 = j__$1 + 1;
      var G__18485 = len__$1 - 1;
      i__$1 = G__18483;
      j__$1 = G__18484;
      len__$1 = G__18485;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__18486 = i__$1 - 1;
      var G__18487 = j__$1 - 1;
      var G__18488 = len__$1 - 1;
      i__$1 = G__18486;
      j__$1 = G__18487;
      len__$1 = G__18488;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj18490 = {};
  return obj18490;
}();
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__18492 = s;
    if (G__18492) {
      var bit__5031__auto__ = G__18492.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__5031__auto__ || G__18492.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__18492.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__18492);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__18492);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var G__18494 = s;
  if (G__18494) {
    var bit__5031__auto__ = G__18494.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__5031__auto__ || G__18494.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__18494.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__18494);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__18494);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4357__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4357__auto__) {
    return or__4357__auto__;
  } else {
    var G__18498 = f;
    if (G__18498) {
      var bit__5031__auto__ = G__18498.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__5031__auto__ || G__18498.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__18498.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__18498);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__18498);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__18511 = n;
    return isNaN(G__18511);
  }()) && !(n === Infinity) && function() {
    var G__18512 = n;
    return parseFloat(G__18512);
  }() === function() {
    var G__18513 = n;
    var G__18514 = 10;
    return parseInt(G__18513, G__18514);
  }();
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_() {
  var G__18519 = arguments.length;
  switch(G__18519) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__18521 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__18522 = etc;
          s = G__18521;
          xs = G__18522;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq18515) {
  var G__18516 = cljs.core.first(seq18515);
  var seq18515__$1 = cljs.core.next(seq18515);
  var G__18517 = cljs.core.first(seq18515__$1);
  var seq18515__$2 = cljs.core.next(seq18515__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__18516, G__18517, seq18515__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__18526 = x;
            if (G__18526) {
              var bit__5024__auto__ = G__18526.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__5024__auto__ || G__18526.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__18527 = x;
            var G__18528 = y;
            return goog.array.defaultCompare(G__18527, G__18528);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed() {
  var G__18530 = arguments.length;
  switch(G__18530) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return-1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__18532 = xs;
      var G__18533 = ys;
      var G__18534 = len;
      var G__18535 = n + 1;
      xs = G__18532;
      ys = G__18533;
      len = G__18534;
      n = G__18535;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__18540 = x;
        var G__18541 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18540, G__18541) : f.call(null, G__18540, G__18541);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__18542 = y;
            var G__18543 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18542, G__18543) : f.call(null, G__18542, G__18543);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort() {
  var G__18545 = arguments.length;
  switch(G__18545) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = function() {
      var G__18546 = coll;
      return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__18546) : cljs.core.to_array.call(null, G__18546);
    }();
    var G__18547_18550 = a;
    var G__18548_18551 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__18547_18550, G__18548_18551);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by() {
  var G__18553 = arguments.length;
  switch(G__18553) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, function() {
      var G__18554 = x;
      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18554) : keyfn.call(null, G__18554);
    }(), function() {
      var G__18555 = y;
      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18555) : keyfn.call(null, G__18555);
    }());
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce() {
  var G__18558 = arguments.length;
  switch(G__18558) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4124__auto__ = cljs.core.seq(coll);
  if (temp__4124__auto__) {
    var s = temp__4124__auto__;
    var G__18559 = f;
    var G__18560 = cljs.core.first(s);
    var G__18561 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__18559, G__18560, G__18561) : cljs.core.reduce.call(null, G__18559, G__18560, G__18561);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__18562 = val__$1;
        var G__18563 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18562, G__18563) : f.call(null, G__18562, G__18563);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__18565 = nval;
        var G__18566 = cljs.core.next(coll__$1);
        val__$1 = G__18565;
        coll__$1 = G__18566;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = function() {
    var G__18570 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__18570) : cljs.core.to_array.call(null, G__18570);
  }();
  var G__18571_18573 = a;
  goog.array.shuffle(G__18571_18573);
  var G__18572 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__18572) : cljs.core.vec.call(null, G__18572);
};
cljs.core.reduce = function cljs$core$reduce() {
  var G__18575 = arguments.length;
  switch(G__18575) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (function() {
    var G__18576 = coll;
    if (G__18576) {
      var bit__5024__auto__ = G__18576.cljs$lang$protocol_mask$partition0$ & 524288;
      if (bit__5024__auto__ || G__18576.cljs$core$IReduce$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (function() {
    var G__18577 = coll;
    if (G__18577) {
      var bit__5024__auto__ = G__18577.cljs$lang$protocol_mask$partition0$ & 524288;
      if (bit__5024__auto__ || G__18577.cljs$core$IReduce$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing() {
  var G__18580 = arguments.length;
  switch(G__18580) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__18585 = null;
    var G__18585__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__18585__1 = function(x) {
      var G__18581 = x;
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__18581) : cf.call(null, G__18581);
    };
    var G__18585__2 = function(x, y) {
      var G__18582 = x;
      var G__18583 = y;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18582, G__18583) : f.call(null, G__18582, G__18583);
    };
    G__18585 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__18585__0.call(this);
        case 1:
          return G__18585__1.call(this, x);
        case 2:
          return G__18585__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__18585.cljs$core$IFn$_invoke$arity$0 = G__18585__0;
    G__18585.cljs$core$IFn$_invoke$arity$1 = G__18585__1;
    G__18585.cljs$core$IFn$_invoke$arity$2 = G__18585__2;
    return G__18585;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce() {
  var G__18587 = arguments.length;
  switch(G__18587) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }(), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = function() {
    var G__18588 = f;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__18588) : xform.call(null, G__18588);
  }();
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  var G__18589 = ret;
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__18589) : f__$1.call(null, G__18589);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_() {
  var G__18595 = arguments.length;
  switch(G__18595) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq18591) {
  var G__18592 = cljs.core.first(seq18591);
  var seq18591__$1 = cljs.core.next(seq18591);
  var G__18593 = cljs.core.first(seq18591__$1);
  var seq18591__$2 = cljs.core.next(seq18591__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__18592, G__18593, seq18591__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_() {
  var G__18601 = arguments.length;
  switch(G__18601) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return-x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq18597) {
  var G__18598 = cljs.core.first(seq18597);
  var seq18597__$1 = cljs.core.next(seq18597);
  var G__18599 = cljs.core.first(seq18597__$1);
  var seq18597__$2 = cljs.core.next(seq18597__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__18598, G__18599, seq18597__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_() {
  var G__18607 = arguments.length;
  switch(G__18607) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq18603) {
  var G__18604 = cljs.core.first(seq18603);
  var seq18603__$1 = cljs.core.next(seq18603);
  var G__18605 = cljs.core.first(seq18603__$1);
  var seq18603__$2 = cljs.core.next(seq18603__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__18604, G__18605, seq18603__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_() {
  var G__18613 = arguments.length;
  switch(G__18613) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq18609) {
  var G__18610 = cljs.core.first(seq18609);
  var seq18609__$1 = cljs.core.next(seq18609);
  var G__18611 = cljs.core.first(seq18609__$1);
  var seq18609__$2 = cljs.core.next(seq18609__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__18610, G__18611, seq18609__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_() {
  var G__18619 = arguments.length;
  switch(G__18619) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__18621 = y;
        var G__18622 = cljs.core.first(more);
        var G__18623 = cljs.core.next(more);
        x = G__18621;
        y = G__18622;
        more = G__18623;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq18615) {
  var G__18616 = cljs.core.first(seq18615);
  var seq18615__$1 = cljs.core.next(seq18615);
  var G__18617 = cljs.core.first(seq18615__$1);
  var seq18615__$2 = cljs.core.next(seq18615__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__18616, G__18617, seq18615__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_() {
  var G__18628 = arguments.length;
  switch(G__18628) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__18630 = y;
        var G__18631 = cljs.core.first(more);
        var G__18632 = cljs.core.next(more);
        x = G__18630;
        y = G__18631;
        more = G__18632;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq18624) {
  var G__18625 = cljs.core.first(seq18624);
  var seq18624__$1 = cljs.core.next(seq18624);
  var G__18626 = cljs.core.first(seq18624__$1);
  var seq18624__$2 = cljs.core.next(seq18624__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__18625, G__18626, seq18624__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_() {
  var G__18637 = arguments.length;
  switch(G__18637) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__18639 = y;
        var G__18640 = cljs.core.first(more);
        var G__18641 = cljs.core.next(more);
        x = G__18639;
        y = G__18640;
        more = G__18641;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq18633) {
  var G__18634 = cljs.core.first(seq18633);
  var seq18633__$1 = cljs.core.next(seq18633);
  var G__18635 = cljs.core.first(seq18633__$1);
  var seq18633__$2 = cljs.core.next(seq18633__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__18634, G__18635, seq18633__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_() {
  var G__18646 = arguments.length;
  switch(G__18646) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__18648 = y;
        var G__18649 = cljs.core.first(more);
        var G__18650 = cljs.core.next(more);
        x = G__18648;
        y = G__18649;
        more = G__18650;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq18642) {
  var G__18643 = cljs.core.first(seq18642);
  var seq18642__$1 = cljs.core.next(seq18642);
  var G__18644 = cljs.core.first(seq18642__$1);
  var seq18642__$2 = cljs.core.next(seq18642__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__18643, G__18644, seq18642__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max() {
  var G__18655 = arguments.length;
  switch(G__18655) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4669__auto__ = x;
  var y__4670__auto__ = y;
  return x__4669__auto__ > y__4670__auto__ ? x__4669__auto__ : y__4670__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4669__auto__ = x;
    var y__4670__auto__ = y;
    return x__4669__auto__ > y__4670__auto__ ? x__4669__auto__ : y__4670__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq18651) {
  var G__18652 = cljs.core.first(seq18651);
  var seq18651__$1 = cljs.core.next(seq18651);
  var G__18653 = cljs.core.first(seq18651__$1);
  var seq18651__$2 = cljs.core.next(seq18651__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__18652, G__18653, seq18651__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min() {
  var G__18661 = arguments.length;
  switch(G__18661) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4676__auto__ = x;
  var y__4677__auto__ = y;
  return x__4676__auto__ < y__4677__auto__ ? x__4676__auto__ : y__4677__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4676__auto__ = x;
    var y__4677__auto__ = y;
    return x__4676__auto__ < y__4677__auto__ ? x__4676__auto__ : y__4677__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq18657) {
  var G__18658 = cljs.core.first(seq18657);
  var seq18657__$1 = cljs.core.next(seq18657);
  var G__18659 = cljs.core.first(seq18657__$1);
  var seq18657__$2 = cljs.core.next(seq18657__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__18658, G__18659, seq18657__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add() {
  var G__18667 = arguments.length;
  switch(G__18667) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq18663) {
  var G__18664 = cljs.core.first(seq18663);
  var seq18663__$1 = cljs.core.next(seq18663);
  var G__18665 = cljs.core.first(seq18663__$1);
  var seq18663__$2 = cljs.core.next(seq18663__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__18664, G__18665, seq18663__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int() {
  var G__18673 = arguments.length;
  switch(G__18673) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq18669) {
  var G__18670 = cljs.core.first(seq18669);
  var seq18669__$1 = cljs.core.next(seq18669);
  var G__18671 = cljs.core.first(seq18669__$1);
  var seq18669__$2 = cljs.core.next(seq18669__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__18670, G__18671, seq18669__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int() {
  var G__18679 = arguments.length;
  switch(G__18679) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq18675) {
  var G__18676 = cljs.core.first(seq18675);
  var seq18675__$1 = cljs.core.next(seq18675);
  var G__18677 = cljs.core.first(seq18675__$1);
  var seq18675__$2 = cljs.core.next(seq18675__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__18676, G__18677, seq18675__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply() {
  var G__18685 = arguments.length;
  switch(G__18685) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq18681) {
  var G__18682 = cljs.core.first(seq18681);
  var seq18681__$1 = cljs.core.next(seq18681);
  var G__18683 = cljs.core.first(seq18681__$1);
  var seq18681__$2 = cljs.core.next(seq18681__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__18682, G__18683, seq18681__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int() {
  var G__18691 = arguments.length;
  switch(G__18691) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq18687) {
  var G__18688 = cljs.core.first(seq18687);
  var seq18687__$1 = cljs.core.next(seq18687);
  var G__18689 = cljs.core.first(seq18687__$1);
  var seq18687__$2 = cljs.core.next(seq18687__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__18688, G__18689, seq18687__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  var G__18695 = x;
  var G__18696 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__18695, G__18696) : cljs.core.mod.call(null, G__18695, G__18696);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract() {
  var G__18701 = arguments.length;
  switch(G__18701) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return-x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq18697) {
  var G__18698 = cljs.core.first(seq18697);
  var seq18697__$1 = cljs.core.next(seq18697);
  var G__18699 = cljs.core.first(seq18697__$1);
  var seq18697__$2 = cljs.core.next(seq18697__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__18698, G__18699, seq18697__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int() {
  var G__18707 = arguments.length;
  switch(G__18707) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return-x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq18703) {
  var G__18704 = cljs.core.first(seq18703);
  var seq18703__$1 = cljs.core.next(seq18703);
  var G__18705 = cljs.core.first(seq18703__$1);
  var seq18703__$2 = cljs.core.next(seq18703__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__18704, G__18705, seq18703__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    var G__18711 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__18711) : Math.floor.call(null, G__18711);
  } else {
    var G__18712 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__18712) : Math.ceil.call(null, G__18712);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor() {
  var G__18717 = arguments.length;
  switch(G__18717) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq18713) {
  var G__18714 = cljs.core.first(seq18713);
  var seq18713__$1 = cljs.core.next(seq18713);
  var G__18715 = cljs.core.first(seq18713__$1);
  var seq18713__$2 = cljs.core.next(seq18713__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__18714, G__18715, seq18713__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and() {
  var G__18723 = arguments.length;
  switch(G__18723) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq18719) {
  var G__18720 = cljs.core.first(seq18719);
  var seq18719__$1 = cljs.core.next(seq18719);
  var G__18721 = cljs.core.first(seq18719__$1);
  var seq18719__$2 = cljs.core.next(seq18719__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__18720, G__18721, seq18719__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or() {
  var G__18729 = arguments.length;
  switch(G__18729) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq18725) {
  var G__18726 = cljs.core.first(seq18725);
  var seq18725__$1 = cljs.core.next(seq18725);
  var G__18727 = cljs.core.first(seq18725__$1);
  var seq18725__$2 = cljs.core.next(seq18725__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__18726, G__18727, seq18725__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not() {
  var G__18735 = arguments.length;
  switch(G__18735) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq18731) {
  var G__18732 = cljs.core.first(seq18731);
  var seq18731__$1 = cljs.core.next(seq18731);
  var G__18733 = cljs.core.first(seq18731__$1);
  var seq18731__$2 = cljs.core.next(seq18731__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__18732, G__18733, seq18731__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_() {
  var G__18741 = arguments.length;
  switch(G__18741) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__18743 = y;
        var G__18744 = cljs.core.first(more);
        var G__18745 = cljs.core.next(more);
        x = G__18743;
        y = G__18744;
        more = G__18745;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq18737) {
  var G__18738 = cljs.core.first(seq18737);
  var seq18737__$1 = cljs.core.next(seq18737);
  var G__18739 = cljs.core.first(seq18737__$1);
  var seq18737__$2 = cljs.core.next(seq18737__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__18738, G__18739, seq18737__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__18746 = n__$1 - 1;
      var G__18747 = cljs.core.next(xs);
      n__$1 = G__18746;
      xs = G__18747;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str() {
  var G__18751 = arguments.length;
  switch(G__18751) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5408__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    var G__18752 = x;
    return goog.string.buildString(G__18752);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__18754 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__18755 = cljs.core.next(more);
      sb = G__18754;
      more = G__18755;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq18748) {
  var G__18749 = cljs.core.first(seq18748);
  var seq18748__$1 = cljs.core.next(seq18748);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__18749, seq18748__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs() {
  var G__18757 = arguments.length;
  switch(G__18757) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__18759 = cljs.core.next(xs);
            var G__18760 = cljs.core.next(ys);
            xs = G__18759;
            ys = G__18760;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__18761 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__18762 = cljs.core.next(s);
        res = G__18761;
        s = G__18762;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__18767 = (h + (cljs.core.hash(function() {
        var G__18765 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__18765) : cljs.core.key.call(null, G__18765);
      }()) ^ cljs.core.hash(function() {
        var G__18766 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__18766) : cljs.core.val.call(null, G__18766);
      }()))) % 4503599627370496;
      var G__18768 = cljs.core.next(s);
      h = G__18767;
      s = G__18768;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__18769 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__18770 = cljs.core.next(s__$1);
      h = G__18769;
      s__$1 = G__18770;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__18781_18791 = cljs.core.seq(fn_map);
  var chunk__18782_18792 = null;
  var count__18783_18793 = 0;
  var i__18784_18794 = 0;
  while (true) {
    if (i__18784_18794 < count__18783_18793) {
      var vec__18785_18795 = chunk__18782_18792.cljs$core$IIndexed$_nth$arity$2(null, i__18784_18794);
      var key_name_18796 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18785_18795, 0, null);
      var f_18797 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18785_18795, 1, null);
      var str_name_18798 = function() {
        var G__18786 = key_name_18796;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__18786) : cljs.core.name.call(null, G__18786);
      }();
      obj[str_name_18798] = f_18797;
      var G__18799 = seq__18781_18791;
      var G__18800 = chunk__18782_18792;
      var G__18801 = count__18783_18793;
      var G__18802 = i__18784_18794 + 1;
      seq__18781_18791 = G__18799;
      chunk__18782_18792 = G__18800;
      count__18783_18793 = G__18801;
      i__18784_18794 = G__18802;
      continue;
    } else {
      var temp__4126__auto___18803 = cljs.core.seq(seq__18781_18791);
      if (temp__4126__auto___18803) {
        var seq__18781_18804__$1 = temp__4126__auto___18803;
        if (cljs.core.chunked_seq_QMARK_(seq__18781_18804__$1)) {
          var c__5142__auto___18805 = function() {
            var G__18787 = seq__18781_18804__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__18787) : cljs.core.chunk_first.call(null, G__18787);
          }();
          var G__18806 = function() {
            var G__18788 = seq__18781_18804__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__18788) : cljs.core.chunk_rest.call(null, G__18788);
          }();
          var G__18807 = c__5142__auto___18805;
          var G__18808 = cljs.core.count(c__5142__auto___18805);
          var G__18809 = 0;
          seq__18781_18791 = G__18806;
          chunk__18782_18792 = G__18807;
          count__18783_18793 = G__18808;
          i__18784_18794 = G__18809;
          continue;
        } else {
          var vec__18789_18810 = cljs.core.first(seq__18781_18804__$1);
          var key_name_18811 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18789_18810, 0, null);
          var f_18812 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18789_18810, 1, null);
          var str_name_18813 = function() {
            var G__18790 = key_name_18811;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__18790) : cljs.core.name.call(null, G__18790);
          }();
          obj[str_name_18813] = f_18812;
          var G__18814 = cljs.core.next(seq__18781_18804__$1);
          var G__18815 = null;
          var G__18816 = 0;
          var G__18817 = 0;
          seq__18781_18791 = G__18814;
          chunk__18782_18792 = G__18815;
          count__18783_18793 = G__18816;
          i__18784_18794 = G__18817;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  var G__18819 = coll;
  if (G__18819) {
    var bit__5031__auto__ = G__18819.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__5031__auto__ || G__18819.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__18819.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__18819);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__18819);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list() {
  var argseq__5397__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5397__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__18821 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__18821;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__18822 = i - 1;
      var G__18823 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__18822;
      r = G__18823;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq18820) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq18820));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4357__auto__ = coll == null;
    if (or__4357__auto__) {
      return or__4357__auto__;
    } else {
      var G__18827 = coll;
      if (G__18827) {
        var bit__5024__auto__ = G__18827.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__5024__auto__ || G__18827.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  var G__18829 = x;
  if (G__18829) {
    var bit__5031__auto__ = G__18829.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__5031__auto__ || G__18829.cljs$core$IList$) {
      return true;
    } else {
      if (!G__18829.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__18829);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__18829);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4345__auto__ = cljs.core.not(a.ns);
      if (and__4345__auto__) {
        return b.ns;
      } else {
        return and__4345__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__18836 = a.ns;
            var G__18837 = b.ns;
            return goog.array.defaultCompare(G__18836, G__18837);
          }();
          if (0 === nsc) {
            var G__18838 = a.name;
            var G__18839 = b.name;
            return goog.array.defaultCompare(G__18838, G__18839);
          } else {
            return nsc;
          }
        }
      } else {
        var G__18840 = a.name;
        var G__18841 = b.name;
        return goog.array.defaultCompare(G__18840, G__18841);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4773__auto__ = self__._hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__18843 = null;
  var G__18843__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__18843__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__18843 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18843__2.call(this, self__, coll);
      case 3:
        return G__18843__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18843.cljs$core$IFn$_invoke$arity$2 = G__18843__2;
  G__18843.cljs$core$IFn$_invoke$arity$3 = G__18843__3;
  return G__18843;
}();
cljs.core.Keyword.prototype.apply = function(self__, args18842) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args18842)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (function() {
    var G__18845 = x;
    if (G__18845) {
      var bit__5024__auto__ = G__18845.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__5024__auto__ || G__18845.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword() {
  var G__18847 = arguments.length;
  switch(G__18847) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), function() {
        var G__18848 = name;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__18848) : cljs.core.name.call(null, G__18848);
      }(), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__18850 = ls.sval();
        ls = G__18850;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk() {
  var G__18852 = arguments.length;
  switch(G__18852) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (function() {
    var G__18855 = s;
    if (G__18855) {
      var bit__5024__auto__ = G__18855.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__5024__auto__ || G__18855.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__18856 = cljs.core.next(s__$1);
      s__$1 = G__18856;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_18857 = 0;
  var xs_18858 = cljs.core.seq(coll);
  while (true) {
    if (xs_18858) {
      ret[i_18857] = cljs.core.to_array(cljs.core.first(xs_18858));
      var G__18859 = i_18857 + 1;
      var G__18860 = cljs.core.next(xs_18858);
      i_18857 = G__18859;
      xs_18858 = G__18860;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array() {
  var G__18862 = arguments.length;
  switch(G__18862) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__18864 = i + 1;
        var G__18865 = cljs.core.next(s__$1);
        i = G__18864;
        s__$1 = G__18865;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5242__auto___18866 = size;
    var i_18867 = 0;
    while (true) {
      if (i_18867 < n__5242__auto___18866) {
        a[i_18867] = init_val_or_seq;
        var G__18868 = i_18867 + 1;
        i_18867 = G__18868;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array() {
  var G__18870 = arguments.length;
  switch(G__18870) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__18872 = i + 1;
        var G__18873 = cljs.core.next(s__$1);
        i = G__18872;
        s__$1 = G__18873;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5242__auto___18874 = size;
    var i_18875 = 0;
    while (true) {
      if (i_18875 < n__5242__auto___18874) {
        a[i_18875] = init_val_or_seq;
        var G__18876 = i_18875 + 1;
        i_18875 = G__18876;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array() {
  var G__18878 = arguments.length;
  switch(G__18878) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__18880 = i + 1;
        var G__18881 = cljs.core.next(s__$1);
        i = G__18880;
        s__$1 = G__18881;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5242__auto___18882 = size;
    var i_18883 = 0;
    while (true) {
      if (i_18883 < n__5242__auto___18882) {
        a[i_18883] = init_val_or_seq;
        var G__18884 = i_18883 + 1;
        i_18883 = G__18884;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array() {
  var G__18886 = arguments.length;
  switch(G__18886) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__18888 = i + 1;
        var G__18889 = cljs.core.next(s__$1);
        i = G__18888;
        s__$1 = G__18889;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5242__auto___18890 = size;
    var i_18891 = 0;
    while (true) {
      if (i_18891 < n__5242__auto___18890) {
        a[i_18891] = init_val_or_seq;
        var G__18892 = i_18891 + 1;
        i_18891 = G__18892;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__18893 = cljs.core.next(s__$1);
        var G__18894 = i - 1;
        var G__18895 = sum + 1;
        s__$1 = G__18893;
        i = G__18894;
        sum = G__18895;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat() {
  var G__18901 = arguments.length;
  switch(G__18901) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq18897) {
  var G__18898 = cljs.core.first(seq18897);
  var seq18897__$1 = cljs.core.next(seq18897);
  var G__18899 = cljs.core.first(seq18897__$1);
  var seq18897__$2 = cljs.core.next(seq18897__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__18898, G__18899, seq18897__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_() {
  var G__18915 = arguments.length;
  switch(G__18915) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5408__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq18909) {
  var G__18910 = cljs.core.first(seq18909);
  var seq18909__$1 = cljs.core.next(seq18909);
  var G__18911 = cljs.core.first(seq18909__$1);
  var seq18909__$2 = cljs.core.next(seq18909__$1);
  var G__18912 = cljs.core.first(seq18909__$2);
  var seq18909__$3 = cljs.core.next(seq18909__$2);
  var G__18913 = cljs.core.first(seq18909__$3);
  var seq18909__$4 = cljs.core.next(seq18909__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__18910, G__18911, G__18912, G__18913, seq18909__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_() {
  var G__18921 = arguments.length;
  switch(G__18921) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__18923 = ntcoll;
      var G__18924 = cljs.core.first(vals);
      var G__18925 = cljs.core.next(vals);
      tcoll = G__18923;
      val = G__18924;
      vals = G__18925;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq18917) {
  var G__18918 = cljs.core.first(seq18917);
  var seq18917__$1 = cljs.core.next(seq18917);
  var G__18919 = cljs.core.first(seq18917__$1);
  var seq18917__$2 = cljs.core.next(seq18917__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__18918, G__18919, seq18917__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_() {
  var G__18931 = arguments.length;
  switch(G__18931) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5408__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__18933 = ntcoll;
      var G__18934 = cljs.core.first(kvs);
      var G__18935 = cljs.core.second(kvs);
      var G__18936 = cljs.core.nnext(kvs);
      tcoll = G__18933;
      key = G__18934;
      val = G__18935;
      kvs = G__18936;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq18926) {
  var G__18927 = cljs.core.first(seq18926);
  var seq18926__$1 = cljs.core.next(seq18926);
  var G__18928 = cljs.core.first(seq18926__$1);
  var seq18926__$2 = cljs.core.next(seq18926__$1);
  var G__18929 = cljs.core.first(seq18926__$2);
  var seq18926__$3 = cljs.core.next(seq18926__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__18927, G__18928, G__18929, seq18926__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_() {
  var G__18941 = arguments.length;
  switch(G__18941) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__18943 = ntcoll;
      var G__18944 = cljs.core.first(ks);
      var G__18945 = cljs.core.next(ks);
      tcoll = G__18943;
      key = G__18944;
      ks = G__18945;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq18937) {
  var G__18938 = cljs.core.first(seq18937);
  var seq18937__$1 = cljs.core.next(seq18937);
  var G__18939 = cljs.core.first(seq18937__$1);
  var seq18937__$2 = cljs.core.next(seq18937__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__18938, G__18939, seq18937__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_() {
  var G__18950 = arguments.length;
  switch(G__18950) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__18952 = ntcoll;
      var G__18953 = cljs.core.first(vals);
      var G__18954 = cljs.core.next(vals);
      tcoll = G__18952;
      val = G__18953;
      vals = G__18954;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq18946) {
  var G__18947 = cljs.core.first(seq18946);
  var seq18946__$1 = cljs.core.next(seq18946);
  var G__18948 = cljs.core.first(seq18946__$1);
  var seq18946__$2 = cljs.core.next(seq18946__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__18947, G__18948, seq18946__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5286 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5286);
      } else {
        var G__19165 = a5286;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19165) : f.call(null, G__19165);
      }
    } else {
      var b5287 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5286, b5287);
        } else {
          var G__19166 = a5286;
          var G__19167 = b5287;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19166, G__19167) : f.call(null, G__19166, G__19167);
        }
      } else {
        var c5288 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5286, b5287, c5288);
          } else {
            var G__19168 = a5286;
            var G__19169 = b5287;
            var G__19170 = c5288;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19168, G__19169, G__19170) : f.call(null, G__19168, G__19169, G__19170);
          }
        } else {
          var d5289 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5286, b5287, c5288, d5289);
            } else {
              var G__19171 = a5286;
              var G__19172 = b5287;
              var G__19173 = c5288;
              var G__19174 = d5289;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19171, G__19172, G__19173, G__19174) : f.call(null, G__19171, G__19172, G__19173, G__19174);
            }
          } else {
            var e5290 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5286, b5287, c5288, d5289, e5290);
              } else {
                var G__19175 = a5286;
                var G__19176 = b5287;
                var G__19177 = c5288;
                var G__19178 = d5289;
                var G__19179 = e5290;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19175, G__19176, G__19177, G__19178, G__19179) : f.call(null, G__19175, G__19176, G__19177, G__19178, G__19179);
              }
            } else {
              var f5291 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5286, b5287, c5288, d5289, e5290, f5291);
                } else {
                  var G__19180 = a5286;
                  var G__19181 = b5287;
                  var G__19182 = c5288;
                  var G__19183 = d5289;
                  var G__19184 = e5290;
                  var G__19185 = f5291;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__19180, G__19181, G__19182, G__19183, G__19184, G__19185) : f.call(null, G__19180, G__19181, G__19182, G__19183, G__19184, G__19185);
                }
              } else {
                var g5292 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5286, b5287, c5288, d5289, e5290, f5291, g5292);
                  } else {
                    var G__19186 = a5286;
                    var G__19187 = b5287;
                    var G__19188 = c5288;
                    var G__19189 = d5289;
                    var G__19190 = e5290;
                    var G__19191 = f5291;
                    var G__19192 = g5292;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__19186, G__19187, G__19188, G__19189, G__19190, G__19191, G__19192) : f.call(null, G__19186, G__19187, G__19188, G__19189, G__19190, G__19191, G__19192);
                  }
                } else {
                  var h5293 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5286, b5287, c5288, d5289, e5290, f5291, g5292, h5293);
                    } else {
                      var G__19193 = a5286;
                      var G__19194 = b5287;
                      var G__19195 = c5288;
                      var G__19196 = d5289;
                      var G__19197 = e5290;
                      var G__19198 = f5291;
                      var G__19199 = g5292;
                      var G__19200 = h5293;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__19193, G__19194, G__19195, G__19196, G__19197, G__19198, G__19199, G__19200) : f.call(null, G__19193, G__19194, G__19195, G__19196, G__19197, G__19198, G__19199, G__19200);
                    }
                  } else {
                    var i5294 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5286, b5287, c5288, d5289, e5290, f5291, g5292, h5293, i5294);
                      } else {
                        var G__19201 = a5286;
                        var G__19202 = b5287;
                        var G__19203 = c5288;
                        var G__19204 = d5289;
                        var G__19205 = e5290;
                        var G__19206 = f5291;
                        var G__19207 = g5292;
                        var G__19208 = h5293;
                        var G__19209 = i5294;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__19201, G__19202, G__19203, G__19204, G__19205, G__19206, G__19207, G__19208, G__19209) : f.call(null, G__19201, G__19202, G__19203, G__19204, G__19205, G__19206, G__19207, G__19208, G__19209);
                      }
                    } else {
                      var j5295 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5286, b5287, c5288, d5289, e5290, f5291, g5292, h5293, i5294, j5295);
                        } else {
                          var G__19210 = a5286;
                          var G__19211 = b5287;
                          var G__19212 = c5288;
                          var G__19213 = d5289;
                          var G__19214 = e5290;
                          var G__19215 = f5291;
                          var G__19216 = g5292;
                          var G__19217 = h5293;
                          var G__19218 = i5294;
                          var G__19219 = j5295;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__19210, G__19211, G__19212, G__19213, G__19214, G__19215, G__19216, G__19217, G__19218, G__19219) : f.call(null, G__19210, G__19211, G__19212, G__19213, G__19214, G__19215, G__19216, G__19217, G__19218, G__19219);
                        }
                      } else {
                        var k5296 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5286, b5287, c5288, d5289, e5290, f5291, g5292, h5293, i5294, j5295, k5296);
                          } else {
                            var G__19220 = a5286;
                            var G__19221 = b5287;
                            var G__19222 = c5288;
                            var G__19223 = d5289;
                            var G__19224 = e5290;
                            var G__19225 = f5291;
                            var G__19226 = g5292;
                            var G__19227 = h5293;
                            var G__19228 = i5294;
                            var G__19229 = j5295;
                            var G__19230 = k5296;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__19220, G__19221, G__19222, G__19223, G__19224, G__19225, G__19226, G__19227, G__19228, G__19229, G__19230) : f.call(null, G__19220, G__19221, G__19222, G__19223, G__19224, G__19225, G__19226, G__19227, G__19228, G__19229, G__19230);
                          }
                        } else {
                          var l5297 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5286, b5287, c5288, d5289, e5290, f5291, g5292, h5293, i5294, j5295, k5296, l5297);
                            } else {
                              var G__19231 = a5286;
                              var G__19232 = b5287;
                              var G__19233 = c5288;
                              var G__19234 = d5289;
                              var G__19235 = e5290;
                              var G__19236 = f5291;
                              var G__19237 = g5292;
                              var G__19238 = h5293;
                              var G__19239 = i5294;
                              var G__19240 = j5295;
                              var G__19241 = k5296;
                              var G__19242 = l5297;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__19231, G__19232, G__19233, G__19234, G__19235, G__19236, G__19237, G__19238, G__19239, G__19240, G__19241, G__19242) : f.call(null, G__19231, G__19232, G__19233, G__19234, G__19235, G__19236, G__19237, G__19238, G__19239, G__19240, G__19241, G__19242);
                            }
                          } else {
                            var m5298 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5286, b5287, c5288, d5289, e5290, f5291, g5292, h5293, i5294, j5295, k5296, l5297, m5298);
                              } else {
                                var G__19243 = a5286;
                                var G__19244 = b5287;
                                var G__19245 = c5288;
                                var G__19246 = d5289;
                                var G__19247 = e5290;
                                var G__19248 = f5291;
                                var G__19249 = g5292;
                                var G__19250 = h5293;
                                var G__19251 = i5294;
                                var G__19252 = j5295;
                                var G__19253 = k5296;
                                var G__19254 = l5297;
                                var G__19255 = m5298;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__19243, G__19244, G__19245, G__19246, G__19247, G__19248, G__19249, G__19250, G__19251, G__19252, G__19253, G__19254, G__19255) : f.call(null, G__19243, G__19244, G__19245, G__19246, G__19247, G__19248, G__19249, G__19250, G__19251, G__19252, G__19253, G__19254, G__19255);
                              }
                            } else {
                              var n5299 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5286, b5287, c5288, d5289, e5290, f5291, g5292, h5293, i5294, j5295, k5296, l5297, m5298, n5299);
                                } else {
                                  var G__19256 = a5286;
                                  var G__19257 = b5287;
                                  var G__19258 = c5288;
                                  var G__19259 = d5289;
                                  var G__19260 = e5290;
                                  var G__19261 = f5291;
                                  var G__19262 = g5292;
                                  var G__19263 = h5293;
                                  var G__19264 = i5294;
                                  var G__19265 = j5295;
                                  var G__19266 = k5296;
                                  var G__19267 = l5297;
                                  var G__19268 = m5298;
                                  var G__19269 = n5299;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__19256, G__19257, G__19258, G__19259, G__19260, G__19261, G__19262, G__19263, G__19264, G__19265, G__19266, G__19267, G__19268, G__19269) : f.call(null, G__19256, G__19257, G__19258, G__19259, G__19260, G__19261, G__19262, G__19263, G__19264, G__19265, G__19266, G__19267, G__19268, G__19269);
                                }
                              } else {
                                var o5300 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5286, b5287, c5288, d5289, e5290, f5291, g5292, h5293, i5294, j5295, k5296, l5297, m5298, n5299, o5300);
                                  } else {
                                    var G__19270 = a5286;
                                    var G__19271 = b5287;
                                    var G__19272 = c5288;
                                    var G__19273 = d5289;
                                    var G__19274 = e5290;
                                    var G__19275 = f5291;
                                    var G__19276 = g5292;
                                    var G__19277 = h5293;
                                    var G__19278 = i5294;
                                    var G__19279 = j5295;
                                    var G__19280 = k5296;
                                    var G__19281 = l5297;
                                    var G__19282 = m5298;
                                    var G__19283 = n5299;
                                    var G__19284 = o5300;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__19270, G__19271, G__19272, G__19273, G__19274, G__19275, G__19276, G__19277, G__19278, G__19279, G__19280, G__19281, G__19282, G__19283, G__19284) : f.call(null, G__19270, G__19271, G__19272, G__19273, G__19274, G__19275, G__19276, G__19277, G__19278, G__19279, G__19280, G__19281, G__19282, G__19283, G__19284);
                                  }
                                } else {
                                  var p5301 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5286, b5287, c5288, d5289, e5290, f5291, g5292, h5293, i5294, j5295, k5296, l5297, m5298, n5299, o5300, p5301);
                                    } else {
                                      var G__19285 = a5286;
                                      var G__19286 = b5287;
                                      var G__19287 = c5288;
                                      var G__19288 = d5289;
                                      var G__19289 = e5290;
                                      var G__19290 = f5291;
                                      var G__19291 = g5292;
                                      var G__19292 = h5293;
                                      var G__19293 = i5294;
                                      var G__19294 = j5295;
                                      var G__19295 = k5296;
                                      var G__19296 = l5297;
                                      var G__19297 = m5298;
                                      var G__19298 = n5299;
                                      var G__19299 = o5300;
                                      var G__19300 = p5301;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__19285, G__19286, G__19287, G__19288, G__19289, G__19290, G__19291, G__19292, G__19293, G__19294, G__19295, G__19296, G__19297, G__19298, G__19299, G__19300) : f.call(null, G__19285, G__19286, G__19287, G__19288, G__19289, G__19290, G__19291, G__19292, G__19293, G__19294, G__19295, G__19296, G__19297, G__19298, G__19299, G__19300);
                                    }
                                  } else {
                                    var q5302 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5286, b5287, c5288, d5289, e5290, f5291, g5292, h5293, i5294, j5295, k5296, l5297, m5298, n5299, o5300, p5301, q5302);
                                      } else {
                                        var G__19301 = a5286;
                                        var G__19302 = b5287;
                                        var G__19303 = c5288;
                                        var G__19304 = d5289;
                                        var G__19305 = e5290;
                                        var G__19306 = f5291;
                                        var G__19307 = g5292;
                                        var G__19308 = h5293;
                                        var G__19309 = i5294;
                                        var G__19310 = j5295;
                                        var G__19311 = k5296;
                                        var G__19312 = l5297;
                                        var G__19313 = m5298;
                                        var G__19314 = n5299;
                                        var G__19315 = o5300;
                                        var G__19316 = p5301;
                                        var G__19317 = q5302;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__19301, G__19302, G__19303, G__19304, G__19305, G__19306, G__19307, G__19308, G__19309, G__19310, G__19311, G__19312, G__19313, G__19314, G__19315, G__19316, G__19317) : f.call(null, G__19301, G__19302, G__19303, G__19304, G__19305, G__19306, G__19307, G__19308, G__19309, G__19310, G__19311, G__19312, G__19313, G__19314, G__19315, G__19316, G__19317);
                                      }
                                    } else {
                                      var r5303 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5286, b5287, c5288, d5289, e5290, f5291, g5292, h5293, i5294, j5295, k5296, l5297, m5298, n5299, o5300, p5301, q5302, r5303);
                                        } else {
                                          var G__19318 = a5286;
                                          var G__19319 = b5287;
                                          var G__19320 = c5288;
                                          var G__19321 = d5289;
                                          var G__19322 = e5290;
                                          var G__19323 = f5291;
                                          var G__19324 = g5292;
                                          var G__19325 = h5293;
                                          var G__19326 = i5294;
                                          var G__19327 = j5295;
                                          var G__19328 = k5296;
                                          var G__19329 = l5297;
                                          var G__19330 = m5298;
                                          var G__19331 = n5299;
                                          var G__19332 = o5300;
                                          var G__19333 = p5301;
                                          var G__19334 = q5302;
                                          var G__19335 = r5303;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__19318, G__19319, G__19320, G__19321, G__19322, G__19323, G__19324, G__19325, G__19326, G__19327, G__19328, G__19329, G__19330, G__19331, G__19332, G__19333, G__19334, G__19335) : f.call(null, G__19318, G__19319, G__19320, G__19321, G__19322, G__19323, G__19324, G__19325, G__19326, G__19327, G__19328, G__19329, G__19330, G__19331, G__19332, G__19333, G__19334, G__19335);
                                        }
                                      } else {
                                        var s5304 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5286, b5287, c5288, d5289, e5290, f5291, g5292, h5293, i5294, j5295, k5296, l5297, m5298, n5299, o5300, p5301, q5302, r5303, s5304);
                                          } else {
                                            var G__19336 = a5286;
                                            var G__19337 = b5287;
                                            var G__19338 = c5288;
                                            var G__19339 = d5289;
                                            var G__19340 = e5290;
                                            var G__19341 = f5291;
                                            var G__19342 = g5292;
                                            var G__19343 = h5293;
                                            var G__19344 = i5294;
                                            var G__19345 = j5295;
                                            var G__19346 = k5296;
                                            var G__19347 = l5297;
                                            var G__19348 = m5298;
                                            var G__19349 = n5299;
                                            var G__19350 = o5300;
                                            var G__19351 = p5301;
                                            var G__19352 = q5302;
                                            var G__19353 = r5303;
                                            var G__19354 = s5304;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__19336, G__19337, G__19338, G__19339, G__19340, G__19341, G__19342, G__19343, G__19344, G__19345, G__19346, G__19347, G__19348, G__19349, G__19350, G__19351, G__19352, G__19353, G__19354) : f.call(null, G__19336, G__19337, G__19338, G__19339, G__19340, G__19341, G__19342, G__19343, G__19344, G__19345, G__19346, G__19347, G__19348, G__19349, G__19350, G__19351, G__19352, G__19353, 
                                            G__19354);
                                          }
                                        } else {
                                          var t5305 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5286, b5287, c5288, d5289, e5290, f5291, g5292, h5293, i5294, j5295, k5296, l5297, m5298, n5299, o5300, p5301, q5302, r5303, s5304, t5305);
                                            } else {
                                              var G__19355 = a5286;
                                              var G__19356 = b5287;
                                              var G__19357 = c5288;
                                              var G__19358 = d5289;
                                              var G__19359 = e5290;
                                              var G__19360 = f5291;
                                              var G__19361 = g5292;
                                              var G__19362 = h5293;
                                              var G__19363 = i5294;
                                              var G__19364 = j5295;
                                              var G__19365 = k5296;
                                              var G__19366 = l5297;
                                              var G__19367 = m5298;
                                              var G__19368 = n5299;
                                              var G__19369 = o5300;
                                              var G__19370 = p5301;
                                              var G__19371 = q5302;
                                              var G__19372 = r5303;
                                              var G__19373 = s5304;
                                              var G__19374 = t5305;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__19355, G__19356, G__19357, G__19358, G__19359, G__19360, G__19361, G__19362, G__19363, G__19364, G__19365, G__19366, G__19367, G__19368, G__19369, G__19370, G__19371, G__19372, G__19373, G__19374) : f.call(null, G__19355, G__19356, G__19357, G__19358, G__19359, G__19360, G__19361, G__19362, G__19363, G__19364, G__19365, G__19366, G__19367, G__19368, G__19369, G__19370, G__19371, 
                                              G__19372, G__19373, G__19374);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply() {
  var G__19382 = arguments.length;
  switch(G__19382) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5408__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq19375) {
  var G__19376 = cljs.core.first(seq19375);
  var seq19375__$1 = cljs.core.next(seq19375);
  var G__19377 = cljs.core.first(seq19375__$1);
  var seq19375__$2 = cljs.core.next(seq19375__$1);
  var G__19378 = cljs.core.first(seq19375__$2);
  var seq19375__$3 = cljs.core.next(seq19375__$2);
  var G__19379 = cljs.core.first(seq19375__$3);
  var seq19375__$4 = cljs.core.next(seq19375__$3);
  var G__19380 = cljs.core.first(seq19375__$4);
  var seq19375__$5 = cljs.core.next(seq19375__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__19376, G__19377, G__19378, G__19379, G__19380, seq19375__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta() {
  var G__19392 = arguments.length;
  switch(G__19392) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5408__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__19393 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19393) : f.call(null, G__19393);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__19394 = cljs.core.meta(obj);
    var G__19395 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19394, G__19395) : f.call(null, G__19394, G__19395);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__19396 = cljs.core.meta(obj);
    var G__19397 = a;
    var G__19398 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19396, G__19397, G__19398) : f.call(null, G__19396, G__19397, G__19398);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__19399 = cljs.core.meta(obj);
    var G__19400 = a;
    var G__19401 = b;
    var G__19402 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19399, G__19400, G__19401, G__19402) : f.call(null, G__19399, G__19400, G__19401, G__19402);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__19403 = cljs.core.meta(obj);
    var G__19404 = a;
    var G__19405 = b;
    var G__19406 = c;
    var G__19407 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19403, G__19404, G__19405, G__19406, G__19407) : f.call(null, G__19403, G__19404, G__19405, G__19406, G__19407);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq19384) {
  var G__19385 = cljs.core.first(seq19384);
  var seq19384__$1 = cljs.core.next(seq19384);
  var G__19386 = cljs.core.first(seq19384__$1);
  var seq19384__$2 = cljs.core.next(seq19384__$1);
  var G__19387 = cljs.core.first(seq19384__$2);
  var seq19384__$3 = cljs.core.next(seq19384__$2);
  var G__19388 = cljs.core.first(seq19384__$3);
  var seq19384__$4 = cljs.core.next(seq19384__$3);
  var G__19389 = cljs.core.first(seq19384__$4);
  var seq19384__$5 = cljs.core.next(seq19384__$4);
  var G__19390 = cljs.core.first(seq19384__$5);
  var seq19384__$6 = cljs.core.next(seq19384__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__19385, G__19386, G__19387, G__19388, G__19389, G__19390, seq19384__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_() {
  var G__19413 = arguments.length;
  switch(G__19413) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq19409) {
  var G__19410 = cljs.core.first(seq19409);
  var seq19409__$1 = cljs.core.next(seq19409);
  var G__19411 = cljs.core.first(seq19409__$1);
  var seq19409__$2 = cljs.core.next(seq19409__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__19410, G__19411, seq19409__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t19418 !== "undefined") {
  } else {
    cljs.core.t19418 = function(nil_iter, meta19419) {
      this.nil_iter = nil_iter;
      this.meta19419 = meta19419;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t19418.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t19418.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t19418.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t19418.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19420) {
      var self__ = this;
      var _19420__$1 = this;
      return self__.meta19419;
    };
    cljs.core.t19418.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19420, meta19419__$1) {
      var self__ = this;
      var _19420__$1 = this;
      return new cljs.core.t19418(self__.nil_iter, meta19419__$1);
    };
    cljs.core.t19418.cljs$lang$type = true;
    cljs.core.t19418.cljs$lang$ctorStr = "cljs.core/t19418";
    cljs.core.t19418.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
      return cljs.core._write(writer__4937__auto__, "cljs.core/t19418");
    };
    cljs.core.__GT_t19418 = function cljs$core$nil_iter_$___GT_t19418(nil_iter__$1, meta19419) {
      return new cljs.core.t19418(nil_iter__$1, meta19419);
    };
  }
  return new cljs.core.t19418(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4345__auto__ = !(lt.stepper == null);
      if (and__4345__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4345__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__19421 = lt;
        var G__19422 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__19421, G__19422) : self__.xform.call(null, G__19421, G__19422);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__19423 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__19423) : self__.xform.call(null, G__19423);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__19425 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19425) : xform.call(null, G__19425);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__19427 = cljs.core.next(iters__$1);
        iters__$1 = G__19427;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5242__auto___19428 = self__.iters.length;
  var i_19429 = 0;
  while (true) {
    if (i_19429 < n__5242__auto___19428) {
      self__.nexts[i_19429] = self__.iters[i_19429].next();
      var G__19430 = i_19429 + 1;
      i_19429 = G__19430;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4345__auto__ = !(lt.stepper == null);
      if (and__4345__auto__) {
        return this$.hasNext();
      } else {
        return and__4345__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__19426 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__19426) : self__.xform.call(null, G__19426);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper() {
  var G__19432 = arguments.length;
  switch(G__19432) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(function() {
    var G__19433 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19433) : xform.call(null, G__19433);
  }(), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__19435_19439 = cljs.core.seq(colls);
  var chunk__19436_19440 = null;
  var count__19437_19441 = 0;
  var i__19438_19442 = 0;
  while (true) {
    if (i__19438_19442 < count__19437_19441) {
      var coll_19443 = chunk__19436_19440.cljs$core$IIndexed$_nth$arity$2(null, i__19438_19442);
      iters.push(cljs.core.iter(coll_19443));
      var G__19444 = seq__19435_19439;
      var G__19445 = chunk__19436_19440;
      var G__19446 = count__19437_19441;
      var G__19447 = i__19438_19442 + 1;
      seq__19435_19439 = G__19444;
      chunk__19436_19440 = G__19445;
      count__19437_19441 = G__19446;
      i__19438_19442 = G__19447;
      continue;
    } else {
      var temp__4126__auto___19448 = cljs.core.seq(seq__19435_19439);
      if (temp__4126__auto___19448) {
        var seq__19435_19449__$1 = temp__4126__auto___19448;
        if (cljs.core.chunked_seq_QMARK_(seq__19435_19449__$1)) {
          var c__5142__auto___19450 = cljs.core.chunk_first(seq__19435_19449__$1);
          var G__19451 = cljs.core.chunk_rest(seq__19435_19449__$1);
          var G__19452 = c__5142__auto___19450;
          var G__19453 = cljs.core.count(c__5142__auto___19450);
          var G__19454 = 0;
          seq__19435_19439 = G__19451;
          chunk__19436_19440 = G__19452;
          count__19437_19441 = G__19453;
          i__19438_19442 = G__19454;
          continue;
        } else {
          var coll_19455 = cljs.core.first(seq__19435_19449__$1);
          iters.push(cljs.core.iter(coll_19455));
          var G__19456 = cljs.core.next(seq__19435_19449__$1);
          var G__19457 = null;
          var G__19458 = 0;
          var G__19459 = 0;
          seq__19435_19439 = G__19456;
          chunk__19436_19440 = G__19457;
          count__19437_19441 = G__19458;
          i__19438_19442 = G__19459;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence() {
  var G__19464 = arguments.length;
  switch(G__19464) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4357__auto__ = cljs.core.seq(coll);
    if (or__4357__auto__) {
      return or__4357__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq19460) {
  var G__19461 = cljs.core.first(seq19460);
  var seq19460__$1 = cljs.core.next(seq19460);
  var G__19462 = cljs.core.first(seq19460__$1);
  var seq19460__$2 = cljs.core.next(seq19460__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__19461, G__19462, seq19460__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__19467 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19467) : pred.call(null, G__19467);
      }())) {
        var G__19468 = pred;
        var G__19469 = cljs.core.next(coll);
        pred = G__19468;
        coll = G__19469;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4357__auto__ = function() {
        var G__19473 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19473) : pred.call(null, G__19473);
      }();
      if (cljs.core.truth_(or__4357__auto__)) {
        return or__4357__auto__;
      } else {
        var G__19474 = pred;
        var G__19475 = cljs.core.next(coll);
        pred = G__19474;
        coll = G__19475;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__19482 = null;
    var G__19482__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__19482__1 = function(x) {
      return cljs.core.not(function() {
        var G__19479 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19479) : f.call(null, G__19479);
      }());
    };
    var G__19482__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__19480 = x;
        var G__19481 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19480, G__19481) : f.call(null, G__19480, G__19481);
      }());
    };
    var G__19482__3 = function() {
      var G__19483__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__19483 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__19484__i = 0, G__19484__a = new Array(arguments.length - 2);
          while (G__19484__i < G__19484__a.length) {
            G__19484__a[G__19484__i] = arguments[G__19484__i + 2];
            ++G__19484__i;
          }
          zs = new cljs.core.IndexedSeq(G__19484__a, 0);
        }
        return G__19483__delegate.call(this, x, y, zs);
      };
      G__19483.cljs$lang$maxFixedArity = 2;
      G__19483.cljs$lang$applyTo = function(arglist__19485) {
        var x = cljs.core.first(arglist__19485);
        arglist__19485 = cljs.core.next(arglist__19485);
        var y = cljs.core.first(arglist__19485);
        var zs = cljs.core.rest(arglist__19485);
        return G__19483__delegate(x, y, zs);
      };
      G__19483.cljs$core$IFn$_invoke$arity$variadic = G__19483__delegate;
      return G__19483;
    }();
    G__19482 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__19482__0.call(this);
        case 1:
          return G__19482__1.call(this, x);
        case 2:
          return G__19482__2.call(this, x, y);
        default:
          var G__19486 = null;
          if (arguments.length > 2) {
            var G__19487__i = 0, G__19487__a = new Array(arguments.length - 2);
            while (G__19487__i < G__19487__a.length) {
              G__19487__a[G__19487__i] = arguments[G__19487__i + 2];
              ++G__19487__i;
            }
            G__19486 = new cljs.core.IndexedSeq(G__19487__a, 0);
          }
          return G__19482__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__19486);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19482.cljs$lang$maxFixedArity = 2;
    G__19482.cljs$lang$applyTo = G__19482__3.cljs$lang$applyTo;
    G__19482.cljs$core$IFn$_invoke$arity$0 = G__19482__0;
    G__19482.cljs$core$IFn$_invoke$arity$1 = G__19482__1;
    G__19482.cljs$core$IFn$_invoke$arity$2 = G__19482__2;
    G__19482.cljs$core$IFn$_invoke$arity$variadic = G__19482__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__19482;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__19488__delegate = function(args) {
      return x;
    };
    var G__19488 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__19489__i = 0, G__19489__a = new Array(arguments.length - 0);
        while (G__19489__i < G__19489__a.length) {
          G__19489__a[G__19489__i] = arguments[G__19489__i + 0];
          ++G__19489__i;
        }
        args = new cljs.core.IndexedSeq(G__19489__a, 0);
      }
      return G__19488__delegate.call(this, args);
    };
    G__19488.cljs$lang$maxFixedArity = 0;
    G__19488.cljs$lang$applyTo = function(arglist__19490) {
      var args = cljs.core.seq(arglist__19490);
      return G__19488__delegate(args);
    };
    G__19488.cljs$core$IFn$_invoke$arity$variadic = G__19488__delegate;
    return G__19488;
  }();
};
cljs.core.comp = function cljs$core$comp() {
  var G__19496 = arguments.length;
  switch(G__19496) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5408__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__19525 = null;
    var G__19525__0 = function() {
      var G__19497 = function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19497) : f.call(null, G__19497);
    };
    var G__19525__1 = function(x) {
      var G__19498 = function() {
        var G__19499 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19499) : g.call(null, G__19499);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19498) : f.call(null, G__19498);
    };
    var G__19525__2 = function(x, y) {
      var G__19500 = function() {
        var G__19501 = x;
        var G__19502 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__19501, G__19502) : g.call(null, G__19501, G__19502);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19500) : f.call(null, G__19500);
    };
    var G__19525__3 = function(x, y, z) {
      var G__19503 = function() {
        var G__19504 = x;
        var G__19505 = y;
        var G__19506 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__19504, G__19505, G__19506) : g.call(null, G__19504, G__19505, G__19506);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19503) : f.call(null, G__19503);
    };
    var G__19525__4 = function() {
      var G__19526__delegate = function(x, y, z, args) {
        var G__19507 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19507) : f.call(null, G__19507);
      };
      var G__19526 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19527__i = 0, G__19527__a = new Array(arguments.length - 3);
          while (G__19527__i < G__19527__a.length) {
            G__19527__a[G__19527__i] = arguments[G__19527__i + 3];
            ++G__19527__i;
          }
          args = new cljs.core.IndexedSeq(G__19527__a, 0);
        }
        return G__19526__delegate.call(this, x, y, z, args);
      };
      G__19526.cljs$lang$maxFixedArity = 3;
      G__19526.cljs$lang$applyTo = function(arglist__19528) {
        var x = cljs.core.first(arglist__19528);
        arglist__19528 = cljs.core.next(arglist__19528);
        var y = cljs.core.first(arglist__19528);
        arglist__19528 = cljs.core.next(arglist__19528);
        var z = cljs.core.first(arglist__19528);
        var args = cljs.core.rest(arglist__19528);
        return G__19526__delegate(x, y, z, args);
      };
      G__19526.cljs$core$IFn$_invoke$arity$variadic = G__19526__delegate;
      return G__19526;
    }();
    G__19525 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__19525__0.call(this);
        case 1:
          return G__19525__1.call(this, x);
        case 2:
          return G__19525__2.call(this, x, y);
        case 3:
          return G__19525__3.call(this, x, y, z);
        default:
          var G__19529 = null;
          if (arguments.length > 3) {
            var G__19530__i = 0, G__19530__a = new Array(arguments.length - 3);
            while (G__19530__i < G__19530__a.length) {
              G__19530__a[G__19530__i] = arguments[G__19530__i + 3];
              ++G__19530__i;
            }
            G__19529 = new cljs.core.IndexedSeq(G__19530__a, 0);
          }
          return G__19525__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19529);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19525.cljs$lang$maxFixedArity = 3;
    G__19525.cljs$lang$applyTo = G__19525__4.cljs$lang$applyTo;
    G__19525.cljs$core$IFn$_invoke$arity$0 = G__19525__0;
    G__19525.cljs$core$IFn$_invoke$arity$1 = G__19525__1;
    G__19525.cljs$core$IFn$_invoke$arity$2 = G__19525__2;
    G__19525.cljs$core$IFn$_invoke$arity$3 = G__19525__3;
    G__19525.cljs$core$IFn$_invoke$arity$variadic = G__19525__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19525;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__19531 = null;
    var G__19531__0 = function() {
      var G__19508 = function() {
        var G__19509 = function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19509) : g.call(null, G__19509);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19508) : f.call(null, G__19508);
    };
    var G__19531__1 = function(x) {
      var G__19510 = function() {
        var G__19511 = function() {
          var G__19512 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__19512) : h.call(null, G__19512);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19511) : g.call(null, G__19511);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19510) : f.call(null, G__19510);
    };
    var G__19531__2 = function(x, y) {
      var G__19513 = function() {
        var G__19514 = function() {
          var G__19515 = x;
          var G__19516 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__19515, G__19516) : h.call(null, G__19515, G__19516);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19514) : g.call(null, G__19514);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19513) : f.call(null, G__19513);
    };
    var G__19531__3 = function(x, y, z) {
      var G__19517 = function() {
        var G__19518 = function() {
          var G__19519 = x;
          var G__19520 = y;
          var G__19521 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__19519, G__19520, G__19521) : h.call(null, G__19519, G__19520, G__19521);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19518) : g.call(null, G__19518);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19517) : f.call(null, G__19517);
    };
    var G__19531__4 = function() {
      var G__19532__delegate = function(x, y, z, args) {
        var G__19522 = function() {
          var G__19523 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19523) : g.call(null, G__19523);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19522) : f.call(null, G__19522);
      };
      var G__19532 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19533__i = 0, G__19533__a = new Array(arguments.length - 3);
          while (G__19533__i < G__19533__a.length) {
            G__19533__a[G__19533__i] = arguments[G__19533__i + 3];
            ++G__19533__i;
          }
          args = new cljs.core.IndexedSeq(G__19533__a, 0);
        }
        return G__19532__delegate.call(this, x, y, z, args);
      };
      G__19532.cljs$lang$maxFixedArity = 3;
      G__19532.cljs$lang$applyTo = function(arglist__19534) {
        var x = cljs.core.first(arglist__19534);
        arglist__19534 = cljs.core.next(arglist__19534);
        var y = cljs.core.first(arglist__19534);
        arglist__19534 = cljs.core.next(arglist__19534);
        var z = cljs.core.first(arglist__19534);
        var args = cljs.core.rest(arglist__19534);
        return G__19532__delegate(x, y, z, args);
      };
      G__19532.cljs$core$IFn$_invoke$arity$variadic = G__19532__delegate;
      return G__19532;
    }();
    G__19531 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__19531__0.call(this);
        case 1:
          return G__19531__1.call(this, x);
        case 2:
          return G__19531__2.call(this, x, y);
        case 3:
          return G__19531__3.call(this, x, y, z);
        default:
          var G__19535 = null;
          if (arguments.length > 3) {
            var G__19536__i = 0, G__19536__a = new Array(arguments.length - 3);
            while (G__19536__i < G__19536__a.length) {
              G__19536__a[G__19536__i] = arguments[G__19536__i + 3];
              ++G__19536__i;
            }
            G__19535 = new cljs.core.IndexedSeq(G__19536__a, 0);
          }
          return G__19531__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19535);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19531.cljs$lang$maxFixedArity = 3;
    G__19531.cljs$lang$applyTo = G__19531__4.cljs$lang$applyTo;
    G__19531.cljs$core$IFn$_invoke$arity$0 = G__19531__0;
    G__19531.cljs$core$IFn$_invoke$arity$1 = G__19531__1;
    G__19531.cljs$core$IFn$_invoke$arity$2 = G__19531__2;
    G__19531.cljs$core$IFn$_invoke$arity$3 = G__19531__3;
    G__19531.cljs$core$IFn$_invoke$arity$variadic = G__19531__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19531;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__19537__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__19538 = cljs.core.first(fs__$2).call(null, ret);
            var G__19539 = cljs.core.next(fs__$2);
            ret = G__19538;
            fs__$2 = G__19539;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__19537 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__19540__i = 0, G__19540__a = new Array(arguments.length - 0);
          while (G__19540__i < G__19540__a.length) {
            G__19540__a[G__19540__i] = arguments[G__19540__i + 0];
            ++G__19540__i;
          }
          args = new cljs.core.IndexedSeq(G__19540__a, 0);
        }
        return G__19537__delegate.call(this, args);
      };
      G__19537.cljs$lang$maxFixedArity = 0;
      G__19537.cljs$lang$applyTo = function(arglist__19541) {
        var args = cljs.core.seq(arglist__19541);
        return G__19537__delegate(args);
      };
      G__19537.cljs$core$IFn$_invoke$arity$variadic = G__19537__delegate;
      return G__19537;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq19491) {
  var G__19492 = cljs.core.first(seq19491);
  var seq19491__$1 = cljs.core.next(seq19491);
  var G__19493 = cljs.core.first(seq19491__$1);
  var seq19491__$2 = cljs.core.next(seq19491__$1);
  var G__19494 = cljs.core.first(seq19491__$2);
  var seq19491__$3 = cljs.core.next(seq19491__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__19492, G__19493, G__19494, seq19491__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial() {
  var G__19548 = arguments.length;
  switch(G__19548) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5408__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__19592 = null;
    var G__19592__0 = function() {
      var G__19549 = arg1;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19549) : f.call(null, G__19549);
    };
    var G__19592__1 = function(x) {
      var G__19550 = arg1;
      var G__19551 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19550, G__19551) : f.call(null, G__19550, G__19551);
    };
    var G__19592__2 = function(x, y) {
      var G__19552 = arg1;
      var G__19553 = x;
      var G__19554 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19552, G__19553, G__19554) : f.call(null, G__19552, G__19553, G__19554);
    };
    var G__19592__3 = function(x, y, z) {
      var G__19555 = arg1;
      var G__19556 = x;
      var G__19557 = y;
      var G__19558 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19555, G__19556, G__19557, G__19558) : f.call(null, G__19555, G__19556, G__19557, G__19558);
    };
    var G__19592__4 = function() {
      var G__19593__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__19593 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19594__i = 0, G__19594__a = new Array(arguments.length - 3);
          while (G__19594__i < G__19594__a.length) {
            G__19594__a[G__19594__i] = arguments[G__19594__i + 3];
            ++G__19594__i;
          }
          args = new cljs.core.IndexedSeq(G__19594__a, 0);
        }
        return G__19593__delegate.call(this, x, y, z, args);
      };
      G__19593.cljs$lang$maxFixedArity = 3;
      G__19593.cljs$lang$applyTo = function(arglist__19595) {
        var x = cljs.core.first(arglist__19595);
        arglist__19595 = cljs.core.next(arglist__19595);
        var y = cljs.core.first(arglist__19595);
        arglist__19595 = cljs.core.next(arglist__19595);
        var z = cljs.core.first(arglist__19595);
        var args = cljs.core.rest(arglist__19595);
        return G__19593__delegate(x, y, z, args);
      };
      G__19593.cljs$core$IFn$_invoke$arity$variadic = G__19593__delegate;
      return G__19593;
    }();
    G__19592 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__19592__0.call(this);
        case 1:
          return G__19592__1.call(this, x);
        case 2:
          return G__19592__2.call(this, x, y);
        case 3:
          return G__19592__3.call(this, x, y, z);
        default:
          var G__19596 = null;
          if (arguments.length > 3) {
            var G__19597__i = 0, G__19597__a = new Array(arguments.length - 3);
            while (G__19597__i < G__19597__a.length) {
              G__19597__a[G__19597__i] = arguments[G__19597__i + 3];
              ++G__19597__i;
            }
            G__19596 = new cljs.core.IndexedSeq(G__19597__a, 0);
          }
          return G__19592__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19596);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19592.cljs$lang$maxFixedArity = 3;
    G__19592.cljs$lang$applyTo = G__19592__4.cljs$lang$applyTo;
    G__19592.cljs$core$IFn$_invoke$arity$0 = G__19592__0;
    G__19592.cljs$core$IFn$_invoke$arity$1 = G__19592__1;
    G__19592.cljs$core$IFn$_invoke$arity$2 = G__19592__2;
    G__19592.cljs$core$IFn$_invoke$arity$3 = G__19592__3;
    G__19592.cljs$core$IFn$_invoke$arity$variadic = G__19592__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19592;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__19598 = null;
    var G__19598__0 = function() {
      var G__19559 = arg1;
      var G__19560 = arg2;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19559, G__19560) : f.call(null, G__19559, G__19560);
    };
    var G__19598__1 = function(x) {
      var G__19561 = arg1;
      var G__19562 = arg2;
      var G__19563 = x;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19561, G__19562, G__19563) : f.call(null, G__19561, G__19562, G__19563);
    };
    var G__19598__2 = function(x, y) {
      var G__19564 = arg1;
      var G__19565 = arg2;
      var G__19566 = x;
      var G__19567 = y;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19564, G__19565, G__19566, G__19567) : f.call(null, G__19564, G__19565, G__19566, G__19567);
    };
    var G__19598__3 = function(x, y, z) {
      var G__19568 = arg1;
      var G__19569 = arg2;
      var G__19570 = x;
      var G__19571 = y;
      var G__19572 = z;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19568, G__19569, G__19570, G__19571, G__19572) : f.call(null, G__19568, G__19569, G__19570, G__19571, G__19572);
    };
    var G__19598__4 = function() {
      var G__19599__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__19599 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19600__i = 0, G__19600__a = new Array(arguments.length - 3);
          while (G__19600__i < G__19600__a.length) {
            G__19600__a[G__19600__i] = arguments[G__19600__i + 3];
            ++G__19600__i;
          }
          args = new cljs.core.IndexedSeq(G__19600__a, 0);
        }
        return G__19599__delegate.call(this, x, y, z, args);
      };
      G__19599.cljs$lang$maxFixedArity = 3;
      G__19599.cljs$lang$applyTo = function(arglist__19601) {
        var x = cljs.core.first(arglist__19601);
        arglist__19601 = cljs.core.next(arglist__19601);
        var y = cljs.core.first(arglist__19601);
        arglist__19601 = cljs.core.next(arglist__19601);
        var z = cljs.core.first(arglist__19601);
        var args = cljs.core.rest(arglist__19601);
        return G__19599__delegate(x, y, z, args);
      };
      G__19599.cljs$core$IFn$_invoke$arity$variadic = G__19599__delegate;
      return G__19599;
    }();
    G__19598 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__19598__0.call(this);
        case 1:
          return G__19598__1.call(this, x);
        case 2:
          return G__19598__2.call(this, x, y);
        case 3:
          return G__19598__3.call(this, x, y, z);
        default:
          var G__19602 = null;
          if (arguments.length > 3) {
            var G__19603__i = 0, G__19603__a = new Array(arguments.length - 3);
            while (G__19603__i < G__19603__a.length) {
              G__19603__a[G__19603__i] = arguments[G__19603__i + 3];
              ++G__19603__i;
            }
            G__19602 = new cljs.core.IndexedSeq(G__19603__a, 0);
          }
          return G__19598__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19602);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19598.cljs$lang$maxFixedArity = 3;
    G__19598.cljs$lang$applyTo = G__19598__4.cljs$lang$applyTo;
    G__19598.cljs$core$IFn$_invoke$arity$0 = G__19598__0;
    G__19598.cljs$core$IFn$_invoke$arity$1 = G__19598__1;
    G__19598.cljs$core$IFn$_invoke$arity$2 = G__19598__2;
    G__19598.cljs$core$IFn$_invoke$arity$3 = G__19598__3;
    G__19598.cljs$core$IFn$_invoke$arity$variadic = G__19598__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19598;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__19604 = null;
    var G__19604__0 = function() {
      var G__19573 = arg1;
      var G__19574 = arg2;
      var G__19575 = arg3;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19573, G__19574, G__19575) : f.call(null, G__19573, G__19574, G__19575);
    };
    var G__19604__1 = function(x) {
      var G__19576 = arg1;
      var G__19577 = arg2;
      var G__19578 = arg3;
      var G__19579 = x;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19576, G__19577, G__19578, G__19579) : f.call(null, G__19576, G__19577, G__19578, G__19579);
    };
    var G__19604__2 = function(x, y) {
      var G__19580 = arg1;
      var G__19581 = arg2;
      var G__19582 = arg3;
      var G__19583 = x;
      var G__19584 = y;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19580, G__19581, G__19582, G__19583, G__19584) : f.call(null, G__19580, G__19581, G__19582, G__19583, G__19584);
    };
    var G__19604__3 = function(x, y, z) {
      var G__19585 = arg1;
      var G__19586 = arg2;
      var G__19587 = arg3;
      var G__19588 = x;
      var G__19589 = y;
      var G__19590 = z;
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__19585, G__19586, G__19587, G__19588, G__19589, G__19590) : f.call(null, G__19585, G__19586, G__19587, G__19588, G__19589, G__19590);
    };
    var G__19604__4 = function() {
      var G__19605__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__19605 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19606__i = 0, G__19606__a = new Array(arguments.length - 3);
          while (G__19606__i < G__19606__a.length) {
            G__19606__a[G__19606__i] = arguments[G__19606__i + 3];
            ++G__19606__i;
          }
          args = new cljs.core.IndexedSeq(G__19606__a, 0);
        }
        return G__19605__delegate.call(this, x, y, z, args);
      };
      G__19605.cljs$lang$maxFixedArity = 3;
      G__19605.cljs$lang$applyTo = function(arglist__19607) {
        var x = cljs.core.first(arglist__19607);
        arglist__19607 = cljs.core.next(arglist__19607);
        var y = cljs.core.first(arglist__19607);
        arglist__19607 = cljs.core.next(arglist__19607);
        var z = cljs.core.first(arglist__19607);
        var args = cljs.core.rest(arglist__19607);
        return G__19605__delegate(x, y, z, args);
      };
      G__19605.cljs$core$IFn$_invoke$arity$variadic = G__19605__delegate;
      return G__19605;
    }();
    G__19604 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__19604__0.call(this);
        case 1:
          return G__19604__1.call(this, x);
        case 2:
          return G__19604__2.call(this, x, y);
        case 3:
          return G__19604__3.call(this, x, y, z);
        default:
          var G__19608 = null;
          if (arguments.length > 3) {
            var G__19609__i = 0, G__19609__a = new Array(arguments.length - 3);
            while (G__19609__i < G__19609__a.length) {
              G__19609__a[G__19609__i] = arguments[G__19609__i + 3];
              ++G__19609__i;
            }
            G__19608 = new cljs.core.IndexedSeq(G__19609__a, 0);
          }
          return G__19604__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19608);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19604.cljs$lang$maxFixedArity = 3;
    G__19604.cljs$lang$applyTo = G__19604__4.cljs$lang$applyTo;
    G__19604.cljs$core$IFn$_invoke$arity$0 = G__19604__0;
    G__19604.cljs$core$IFn$_invoke$arity$1 = G__19604__1;
    G__19604.cljs$core$IFn$_invoke$arity$2 = G__19604__2;
    G__19604.cljs$core$IFn$_invoke$arity$3 = G__19604__3;
    G__19604.cljs$core$IFn$_invoke$arity$variadic = G__19604__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19604;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__19610__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__19610 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__19611__i = 0, G__19611__a = new Array(arguments.length - 0);
        while (G__19611__i < G__19611__a.length) {
          G__19611__a[G__19611__i] = arguments[G__19611__i + 0];
          ++G__19611__i;
        }
        args = new cljs.core.IndexedSeq(G__19611__a, 0);
      }
      return G__19610__delegate.call(this, args);
    };
    G__19610.cljs$lang$maxFixedArity = 0;
    G__19610.cljs$lang$applyTo = function(arglist__19612) {
      var args = cljs.core.seq(arglist__19612);
      return G__19610__delegate(args);
    };
    G__19610.cljs$core$IFn$_invoke$arity$variadic = G__19610__delegate;
    return G__19610;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq19542) {
  var G__19543 = cljs.core.first(seq19542);
  var seq19542__$1 = cljs.core.next(seq19542);
  var G__19544 = cljs.core.first(seq19542__$1);
  var seq19542__$2 = cljs.core.next(seq19542__$1);
  var G__19545 = cljs.core.first(seq19542__$2);
  var seq19542__$3 = cljs.core.next(seq19542__$2);
  var G__19546 = cljs.core.first(seq19542__$3);
  var seq19542__$4 = cljs.core.next(seq19542__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__19543, G__19544, G__19545, G__19546, seq19542__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil() {
  var G__19614 = arguments.length;
  switch(G__19614) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__19632 = null;
    var G__19632__1 = function(a) {
      var G__19615 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19615) : f.call(null, G__19615);
    };
    var G__19632__2 = function(a, b) {
      var G__19616 = a == null ? x : a;
      var G__19617 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19616, G__19617) : f.call(null, G__19616, G__19617);
    };
    var G__19632__3 = function(a, b, c) {
      var G__19618 = a == null ? x : a;
      var G__19619 = b;
      var G__19620 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19618, G__19619, G__19620) : f.call(null, G__19618, G__19619, G__19620);
    };
    var G__19632__4 = function() {
      var G__19633__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__19633 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__19634__i = 0, G__19634__a = new Array(arguments.length - 3);
          while (G__19634__i < G__19634__a.length) {
            G__19634__a[G__19634__i] = arguments[G__19634__i + 3];
            ++G__19634__i;
          }
          ds = new cljs.core.IndexedSeq(G__19634__a, 0);
        }
        return G__19633__delegate.call(this, a, b, c, ds);
      };
      G__19633.cljs$lang$maxFixedArity = 3;
      G__19633.cljs$lang$applyTo = function(arglist__19635) {
        var a = cljs.core.first(arglist__19635);
        arglist__19635 = cljs.core.next(arglist__19635);
        var b = cljs.core.first(arglist__19635);
        arglist__19635 = cljs.core.next(arglist__19635);
        var c = cljs.core.first(arglist__19635);
        var ds = cljs.core.rest(arglist__19635);
        return G__19633__delegate(a, b, c, ds);
      };
      G__19633.cljs$core$IFn$_invoke$arity$variadic = G__19633__delegate;
      return G__19633;
    }();
    G__19632 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__19632__1.call(this, a);
        case 2:
          return G__19632__2.call(this, a, b);
        case 3:
          return G__19632__3.call(this, a, b, c);
        default:
          var G__19636 = null;
          if (arguments.length > 3) {
            var G__19637__i = 0, G__19637__a = new Array(arguments.length - 3);
            while (G__19637__i < G__19637__a.length) {
              G__19637__a[G__19637__i] = arguments[G__19637__i + 3];
              ++G__19637__i;
            }
            G__19636 = new cljs.core.IndexedSeq(G__19637__a, 0);
          }
          return G__19632__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__19636);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19632.cljs$lang$maxFixedArity = 3;
    G__19632.cljs$lang$applyTo = G__19632__4.cljs$lang$applyTo;
    G__19632.cljs$core$IFn$_invoke$arity$1 = G__19632__1;
    G__19632.cljs$core$IFn$_invoke$arity$2 = G__19632__2;
    G__19632.cljs$core$IFn$_invoke$arity$3 = G__19632__3;
    G__19632.cljs$core$IFn$_invoke$arity$variadic = G__19632__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19632;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__19638 = null;
    var G__19638__2 = function(a, b) {
      var G__19621 = a == null ? x : a;
      var G__19622 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19621, G__19622) : f.call(null, G__19621, G__19622);
    };
    var G__19638__3 = function(a, b, c) {
      var G__19623 = a == null ? x : a;
      var G__19624 = b == null ? y : b;
      var G__19625 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19623, G__19624, G__19625) : f.call(null, G__19623, G__19624, G__19625);
    };
    var G__19638__4 = function() {
      var G__19639__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__19639 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__19640__i = 0, G__19640__a = new Array(arguments.length - 3);
          while (G__19640__i < G__19640__a.length) {
            G__19640__a[G__19640__i] = arguments[G__19640__i + 3];
            ++G__19640__i;
          }
          ds = new cljs.core.IndexedSeq(G__19640__a, 0);
        }
        return G__19639__delegate.call(this, a, b, c, ds);
      };
      G__19639.cljs$lang$maxFixedArity = 3;
      G__19639.cljs$lang$applyTo = function(arglist__19641) {
        var a = cljs.core.first(arglist__19641);
        arglist__19641 = cljs.core.next(arglist__19641);
        var b = cljs.core.first(arglist__19641);
        arglist__19641 = cljs.core.next(arglist__19641);
        var c = cljs.core.first(arglist__19641);
        var ds = cljs.core.rest(arglist__19641);
        return G__19639__delegate(a, b, c, ds);
      };
      G__19639.cljs$core$IFn$_invoke$arity$variadic = G__19639__delegate;
      return G__19639;
    }();
    G__19638 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__19638__2.call(this, a, b);
        case 3:
          return G__19638__3.call(this, a, b, c);
        default:
          var G__19642 = null;
          if (arguments.length > 3) {
            var G__19643__i = 0, G__19643__a = new Array(arguments.length - 3);
            while (G__19643__i < G__19643__a.length) {
              G__19643__a[G__19643__i] = arguments[G__19643__i + 3];
              ++G__19643__i;
            }
            G__19642 = new cljs.core.IndexedSeq(G__19643__a, 0);
          }
          return G__19638__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__19642);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19638.cljs$lang$maxFixedArity = 3;
    G__19638.cljs$lang$applyTo = G__19638__4.cljs$lang$applyTo;
    G__19638.cljs$core$IFn$_invoke$arity$2 = G__19638__2;
    G__19638.cljs$core$IFn$_invoke$arity$3 = G__19638__3;
    G__19638.cljs$core$IFn$_invoke$arity$variadic = G__19638__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19638;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__19644 = null;
    var G__19644__2 = function(a, b) {
      var G__19626 = a == null ? x : a;
      var G__19627 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19626, G__19627) : f.call(null, G__19626, G__19627);
    };
    var G__19644__3 = function(a, b, c) {
      var G__19628 = a == null ? x : a;
      var G__19629 = b == null ? y : b;
      var G__19630 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19628, G__19629, G__19630) : f.call(null, G__19628, G__19629, G__19630);
    };
    var G__19644__4 = function() {
      var G__19645__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__19645 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__19646__i = 0, G__19646__a = new Array(arguments.length - 3);
          while (G__19646__i < G__19646__a.length) {
            G__19646__a[G__19646__i] = arguments[G__19646__i + 3];
            ++G__19646__i;
          }
          ds = new cljs.core.IndexedSeq(G__19646__a, 0);
        }
        return G__19645__delegate.call(this, a, b, c, ds);
      };
      G__19645.cljs$lang$maxFixedArity = 3;
      G__19645.cljs$lang$applyTo = function(arglist__19647) {
        var a = cljs.core.first(arglist__19647);
        arglist__19647 = cljs.core.next(arglist__19647);
        var b = cljs.core.first(arglist__19647);
        arglist__19647 = cljs.core.next(arglist__19647);
        var c = cljs.core.first(arglist__19647);
        var ds = cljs.core.rest(arglist__19647);
        return G__19645__delegate(a, b, c, ds);
      };
      G__19645.cljs$core$IFn$_invoke$arity$variadic = G__19645__delegate;
      return G__19645;
    }();
    G__19644 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__19644__2.call(this, a, b);
        case 3:
          return G__19644__3.call(this, a, b, c);
        default:
          var G__19648 = null;
          if (arguments.length > 3) {
            var G__19649__i = 0, G__19649__a = new Array(arguments.length - 3);
            while (G__19649__i < G__19649__a.length) {
              G__19649__a[G__19649__i] = arguments[G__19649__i + 3];
              ++G__19649__i;
            }
            G__19648 = new cljs.core.IndexedSeq(G__19649__a, 0);
          }
          return G__19644__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__19648);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19644.cljs$lang$maxFixedArity = 3;
    G__19644.cljs$lang$applyTo = G__19644__4.cljs$lang$applyTo;
    G__19644.cljs$core$IFn$_invoke$arity$2 = G__19644__2;
    G__19644.cljs$core$IFn$_invoke$arity$3 = G__19644__3;
    G__19644.cljs$core$IFn$_invoke$arity$variadic = G__19644__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19644;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed() {
  var G__19651 = arguments.length;
  switch(G__19651) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = function() {
      var G__19652 = -1;
      return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__19652) : cljs.core.volatile_BANG_.call(null, G__19652);
    }();
    return function(i) {
      return function() {
        var G__19683 = null;
        var G__19683__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19683__1 = function(result) {
          var G__19653 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19653) : rf.call(null, G__19653);
        };
        var G__19683__2 = function(result, input) {
          var G__19654 = result;
          var G__19655 = function() {
            var G__19656 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__19657 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19656, G__19657) : f.call(null, G__19656, G__19657);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19654, G__19655) : rf.call(null, G__19654, G__19655);
        };
        G__19683 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19683__0.call(this);
            case 1:
              return G__19683__1.call(this, result);
            case 2:
              return G__19683__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19683.cljs$core$IFn$_invoke$arity$0 = G__19683__0;
        G__19683.cljs$core$IFn$_invoke$arity$1 = G__19683__1;
        G__19683.cljs$core$IFn$_invoke$arity$2 = G__19683__2;
        return G__19683;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5242__auto___19684 = size;
          var i_19685 = 0;
          while (true) {
            if (i_19685 < n__5242__auto___19684) {
              cljs.core.chunk_append(b, function() {
                var G__19678 = idx + i_19685;
                var G__19679 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19685);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19678, G__19679) : f.call(null, G__19678, G__19679);
              }());
              var G__19686 = i_19685 + 1;
              i_19685 = G__19686;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__19680 = idx;
            var G__19681 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19680, G__19681) : f.call(null, G__19680, G__19681);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep() {
  var G__19688 = arguments.length;
  switch(G__19688) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__19696 = null;
      var G__19696__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__19696__1 = function(result) {
        var G__19689 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19689) : rf.call(null, G__19689);
      };
      var G__19696__2 = function(result, input) {
        var v = function() {
          var G__19690 = input;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19690) : f.call(null, G__19690);
        }();
        if (v == null) {
          return result;
        } else {
          var G__19691 = result;
          var G__19692 = v;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19691, G__19692) : rf.call(null, G__19691, G__19692);
        }
      };
      G__19696 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__19696__0.call(this);
          case 1:
            return G__19696__1.call(this, result);
          case 2:
            return G__19696__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19696.cljs$core$IFn$_invoke$arity$0 = G__19696__0;
      G__19696.cljs$core$IFn$_invoke$arity$1 = G__19696__1;
      G__19696.cljs$core$IFn$_invoke$arity$2 = G__19696__2;
      return G__19696;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5242__auto___19697 = size;
        var i_19698 = 0;
        while (true) {
          if (i_19698 < n__5242__auto___19697) {
            var x_19699 = function() {
              var G__19693 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19698);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19693) : f.call(null, G__19693);
            }();
            if (x_19699 == null) {
            } else {
              cljs.core.chunk_append(b, x_19699);
            }
            var G__19700 = i_19698 + 1;
            i_19698 = G__19700;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__19694 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19694) : f.call(null, G__19694);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__19701 = this$__$1;
  return goog.getUid(G__19701);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__19702 = cljs.core.seq(self__.watches);
  var chunk__19703 = null;
  var count__19704 = 0;
  var i__19705 = 0;
  while (true) {
    if (i__19705 < count__19704) {
      var vec__19706 = chunk__19703.cljs$core$IIndexed$_nth$arity$2(null, i__19705);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19706, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19706, 1, null);
      var G__19707_19716 = key;
      var G__19708_19717 = this$__$1;
      var G__19709_19718 = oldval;
      var G__19710_19719 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19707_19716, G__19708_19717, G__19709_19718, G__19710_19719) : f.call(null, G__19707_19716, G__19708_19717, G__19709_19718, G__19710_19719);
      var G__19720 = seq__19702;
      var G__19721 = chunk__19703;
      var G__19722 = count__19704;
      var G__19723 = i__19705 + 1;
      seq__19702 = G__19720;
      chunk__19703 = G__19721;
      count__19704 = G__19722;
      i__19705 = G__19723;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__19702);
      if (temp__4126__auto__) {
        var seq__19702__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__19702__$1)) {
          var c__5142__auto__ = cljs.core.chunk_first(seq__19702__$1);
          var G__19724 = cljs.core.chunk_rest(seq__19702__$1);
          var G__19725 = c__5142__auto__;
          var G__19726 = cljs.core.count(c__5142__auto__);
          var G__19727 = 0;
          seq__19702 = G__19724;
          chunk__19703 = G__19725;
          count__19704 = G__19726;
          i__19705 = G__19727;
          continue;
        } else {
          var vec__19711 = cljs.core.first(seq__19702__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19711, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19711, 1, null);
          var G__19712_19728 = key;
          var G__19713_19729 = this$__$1;
          var G__19714_19730 = oldval;
          var G__19715_19731 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19712_19728, G__19713_19729, G__19714_19730, G__19715_19731) : f.call(null, G__19712_19728, G__19713_19729, G__19714_19730, G__19715_19731);
          var G__19732 = cljs.core.next(seq__19702__$1);
          var G__19733 = null;
          var G__19734 = 0;
          var G__19735 = 0;
          seq__19702 = G__19732;
          chunk__19703 = G__19733;
          count__19704 = G__19734;
          i__19705 = G__19735;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom() {
  var G__19739 = arguments.length;
  switch(G__19739) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5408__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__19740) {
  var map__19741 = p__19740;
  var map__19741__$1 = cljs.core.seq_QMARK_(map__19741) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__19741) : map__19741;
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19741__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19741__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq19736) {
  var G__19737 = cljs.core.first(seq19736);
  var seq19736__$1 = cljs.core.next(seq19736);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__19737, seq19736__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__19745 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__19745) : validate.call(null, G__19745);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__19746 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__19746) : cljs.core.pr_str.call(null, G__19746);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_() {
  var G__19753 = arguments.length;
  switch(G__19753) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5408__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__19754 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19754) : f.call(null, G__19754);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__19755 = a.state;
      var G__19756 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19755, G__19756) : f.call(null, G__19755, G__19756);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__19757 = a.state;
      var G__19758 = x;
      var G__19759 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19757, G__19758, G__19759) : f.call(null, G__19757, G__19758, G__19759);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq19747) {
  var G__19748 = cljs.core.first(seq19747);
  var seq19747__$1 = cljs.core.next(seq19747);
  var G__19749 = cljs.core.first(seq19747__$1);
  var seq19747__$2 = cljs.core.next(seq19747__$1);
  var G__19750 = cljs.core.first(seq19747__$2);
  var seq19747__$3 = cljs.core.next(seq19747__$2);
  var G__19751 = cljs.core.first(seq19747__$3);
  var seq19747__$4 = cljs.core.next(seq19747__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__19748, G__19749, G__19750, G__19751, seq19747__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed() {
  var G__19762 = arguments.length;
  switch(G__19762) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__19797 = null;
        var G__19797__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19797__1 = function(result) {
          var G__19763 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19763) : rf.call(null, G__19763);
        };
        var G__19797__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = function() {
            var G__19764 = i;
            var G__19765 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19764, G__19765) : f.call(null, G__19764, G__19765);
          }();
          if (v == null) {
            return result;
          } else {
            var G__19766 = result;
            var G__19767 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19766, G__19767) : rf.call(null, G__19766, G__19767);
          }
        };
        G__19797 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19797__0.call(this);
            case 1:
              return G__19797__1.call(this, result);
            case 2:
              return G__19797__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19797.cljs$core$IFn$_invoke$arity$0 = G__19797__0;
        G__19797.cljs$core$IFn$_invoke$arity$1 = G__19797__1;
        G__19797.cljs$core$IFn$_invoke$arity$2 = G__19797__2;
        return G__19797;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5242__auto___19798 = size;
          var i_19799 = 0;
          while (true) {
            if (i_19799 < n__5242__auto___19798) {
              var x_19800 = function() {
                var G__19792 = idx + i_19799;
                var G__19793 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19799);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19792, G__19793) : f.call(null, G__19792, G__19793);
              }();
              if (x_19800 == null) {
              } else {
                cljs.core.chunk_append(b, x_19800);
              }
              var G__19801 = i_19799 + 1;
              i_19799 = G__19801;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__19794 = idx;
            var G__19795 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19794, G__19795) : f.call(null, G__19794, G__19795);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred() {
  var G__19813 = arguments.length;
  switch(G__19813) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5408__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(function() {
        var G__19829 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19829) : p.call(null, G__19829);
      }());
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4345__auto__ = function() {
          var G__19831 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19831) : p.call(null, G__19831);
        }();
        if (cljs.core.truth_(and__4345__auto__)) {
          var G__19832 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19832) : p.call(null, G__19832);
        } else {
          return and__4345__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4345__auto__ = function() {
          var G__19834 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19834) : p.call(null, G__19834);
        }();
        if (cljs.core.truth_(and__4345__auto__)) {
          var and__4345__auto____$1 = function() {
            var G__19836 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19836) : p.call(null, G__19836);
          }();
          if (cljs.core.truth_(and__4345__auto____$1)) {
            var G__19837 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19837) : p.call(null, G__19837);
          } else {
            return and__4345__auto____$1;
          }
        } else {
          return and__4345__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__19999__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4345__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4345__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4345__auto__;
          }
        }());
      };
      var G__19999 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__20000__i = 0, G__20000__a = new Array(arguments.length - 3);
          while (G__20000__i < G__20000__a.length) {
            G__20000__a[G__20000__i] = arguments[G__20000__i + 3];
            ++G__20000__i;
          }
          args = new cljs.core.IndexedSeq(G__20000__a, 0);
        }
        return G__19999__delegate.call(this, x, y, z, args);
      };
      G__19999.cljs$lang$maxFixedArity = 3;
      G__19999.cljs$lang$applyTo = function(arglist__20001) {
        var x = cljs.core.first(arglist__20001);
        arglist__20001 = cljs.core.next(arglist__20001);
        var y = cljs.core.first(arglist__20001);
        arglist__20001 = cljs.core.next(arglist__20001);
        var z = cljs.core.first(arglist__20001);
        var args = cljs.core.rest(arglist__20001);
        return G__19999__delegate(x, y, z, args);
      };
      G__19999.cljs$core$IFn$_invoke$arity$variadic = G__19999__delegate;
      return G__19999;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__20002 = null;
          if (arguments.length > 3) {
            var G__20003__i = 0, G__20003__a = new Array(arguments.length - 3);
            while (G__20003__i < G__20003__a.length) {
              G__20003__a[G__20003__i] = arguments[G__20003__i + 3];
              ++G__20003__i;
            }
            G__20002 = new cljs.core.IndexedSeq(G__20003__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20002);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4345__auto__ = function() {
          var G__19869 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19869) : p1.call(null, G__19869);
        }();
        if (cljs.core.truth_(and__4345__auto__)) {
          var G__19870 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19870) : p2.call(null, G__19870);
        } else {
          return and__4345__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4345__auto__ = function() {
          var G__19872 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19872) : p1.call(null, G__19872);
        }();
        if (cljs.core.truth_(and__4345__auto__)) {
          var and__4345__auto____$1 = function() {
            var G__19874 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19874) : p1.call(null, G__19874);
          }();
          if (cljs.core.truth_(and__4345__auto____$1)) {
            var and__4345__auto____$2 = function() {
              var G__19876 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19876) : p2.call(null, G__19876);
            }();
            if (cljs.core.truth_(and__4345__auto____$2)) {
              var G__19877 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19877) : p2.call(null, G__19877);
            } else {
              return and__4345__auto____$2;
            }
          } else {
            return and__4345__auto____$1;
          }
        } else {
          return and__4345__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4345__auto__ = function() {
          var G__19879 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19879) : p1.call(null, G__19879);
        }();
        if (cljs.core.truth_(and__4345__auto__)) {
          var and__4345__auto____$1 = function() {
            var G__19881 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19881) : p1.call(null, G__19881);
          }();
          if (cljs.core.truth_(and__4345__auto____$1)) {
            var and__4345__auto____$2 = function() {
              var G__19883 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19883) : p1.call(null, G__19883);
            }();
            if (cljs.core.truth_(and__4345__auto____$2)) {
              var and__4345__auto____$3 = function() {
                var G__19885 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19885) : p2.call(null, G__19885);
              }();
              if (cljs.core.truth_(and__4345__auto____$3)) {
                var and__4345__auto____$4 = function() {
                  var G__19887 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19887) : p2.call(null, G__19887);
                }();
                if (cljs.core.truth_(and__4345__auto____$4)) {
                  var G__19888 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19888) : p2.call(null, G__19888);
                } else {
                  return and__4345__auto____$4;
                }
              } else {
                return and__4345__auto____$3;
              }
            } else {
              return and__4345__auto____$2;
            }
          } else {
            return and__4345__auto____$1;
          }
        } else {
          return and__4345__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__20004__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4345__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4345__auto__)) {
            return cljs.core.every_QMARK_(function(and__4345__auto__) {
              return function(p1__19802_SHARP_) {
                var and__4345__auto____$1 = function() {
                  var G__19890 = p1__19802_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19890) : p1.call(null, G__19890);
                }();
                if (cljs.core.truth_(and__4345__auto____$1)) {
                  var G__19891 = p1__19802_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19891) : p2.call(null, G__19891);
                } else {
                  return and__4345__auto____$1;
                }
              };
            }(and__4345__auto__), args);
          } else {
            return and__4345__auto__;
          }
        }());
      };
      var G__20004 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__20005__i = 0, G__20005__a = new Array(arguments.length - 3);
          while (G__20005__i < G__20005__a.length) {
            G__20005__a[G__20005__i] = arguments[G__20005__i + 3];
            ++G__20005__i;
          }
          args = new cljs.core.IndexedSeq(G__20005__a, 0);
        }
        return G__20004__delegate.call(this, x, y, z, args);
      };
      G__20004.cljs$lang$maxFixedArity = 3;
      G__20004.cljs$lang$applyTo = function(arglist__20006) {
        var x = cljs.core.first(arglist__20006);
        arglist__20006 = cljs.core.next(arglist__20006);
        var y = cljs.core.first(arglist__20006);
        arglist__20006 = cljs.core.next(arglist__20006);
        var z = cljs.core.first(arglist__20006);
        var args = cljs.core.rest(arglist__20006);
        return G__20004__delegate(x, y, z, args);
      };
      G__20004.cljs$core$IFn$_invoke$arity$variadic = G__20004__delegate;
      return G__20004;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__20007 = null;
          if (arguments.length > 3) {
            var G__20008__i = 0, G__20008__a = new Array(arguments.length - 3);
            while (G__20008__i < G__20008__a.length) {
              G__20008__a[G__20008__i] = arguments[G__20008__i + 3];
              ++G__20008__i;
            }
            G__20007 = new cljs.core.IndexedSeq(G__20008__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20007);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4345__auto__ = function() {
          var G__19937 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19937) : p1.call(null, G__19937);
        }();
        if (cljs.core.truth_(and__4345__auto__)) {
          var and__4345__auto____$1 = function() {
            var G__19939 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19939) : p2.call(null, G__19939);
          }();
          if (cljs.core.truth_(and__4345__auto____$1)) {
            var G__19940 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19940) : p3.call(null, G__19940);
          } else {
            return and__4345__auto____$1;
          }
        } else {
          return and__4345__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4345__auto__ = function() {
          var G__19942 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19942) : p1.call(null, G__19942);
        }();
        if (cljs.core.truth_(and__4345__auto__)) {
          var and__4345__auto____$1 = function() {
            var G__19944 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19944) : p2.call(null, G__19944);
          }();
          if (cljs.core.truth_(and__4345__auto____$1)) {
            var and__4345__auto____$2 = function() {
              var G__19946 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19946) : p3.call(null, G__19946);
            }();
            if (cljs.core.truth_(and__4345__auto____$2)) {
              var and__4345__auto____$3 = function() {
                var G__19948 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19948) : p1.call(null, G__19948);
              }();
              if (cljs.core.truth_(and__4345__auto____$3)) {
                var and__4345__auto____$4 = function() {
                  var G__19950 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19950) : p2.call(null, G__19950);
                }();
                if (cljs.core.truth_(and__4345__auto____$4)) {
                  var G__19951 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19951) : p3.call(null, G__19951);
                } else {
                  return and__4345__auto____$4;
                }
              } else {
                return and__4345__auto____$3;
              }
            } else {
              return and__4345__auto____$2;
            }
          } else {
            return and__4345__auto____$1;
          }
        } else {
          return and__4345__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4345__auto__ = function() {
          var G__19953 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19953) : p1.call(null, G__19953);
        }();
        if (cljs.core.truth_(and__4345__auto__)) {
          var and__4345__auto____$1 = function() {
            var G__19955 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19955) : p2.call(null, G__19955);
          }();
          if (cljs.core.truth_(and__4345__auto____$1)) {
            var and__4345__auto____$2 = function() {
              var G__19957 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19957) : p3.call(null, G__19957);
            }();
            if (cljs.core.truth_(and__4345__auto____$2)) {
              var and__4345__auto____$3 = function() {
                var G__19959 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19959) : p1.call(null, G__19959);
              }();
              if (cljs.core.truth_(and__4345__auto____$3)) {
                var and__4345__auto____$4 = function() {
                  var G__19961 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19961) : p2.call(null, G__19961);
                }();
                if (cljs.core.truth_(and__4345__auto____$4)) {
                  var and__4345__auto____$5 = function() {
                    var G__19963 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19963) : p3.call(null, G__19963);
                  }();
                  if (cljs.core.truth_(and__4345__auto____$5)) {
                    var and__4345__auto____$6 = function() {
                      var G__19965 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19965) : p1.call(null, G__19965);
                    }();
                    if (cljs.core.truth_(and__4345__auto____$6)) {
                      var and__4345__auto____$7 = function() {
                        var G__19967 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19967) : p2.call(null, G__19967);
                      }();
                      if (cljs.core.truth_(and__4345__auto____$7)) {
                        var G__19968 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19968) : p3.call(null, G__19968);
                      } else {
                        return and__4345__auto____$7;
                      }
                    } else {
                      return and__4345__auto____$6;
                    }
                  } else {
                    return and__4345__auto____$5;
                  }
                } else {
                  return and__4345__auto____$4;
                }
              } else {
                return and__4345__auto____$3;
              }
            } else {
              return and__4345__auto____$2;
            }
          } else {
            return and__4345__auto____$1;
          }
        } else {
          return and__4345__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__20009__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4345__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4345__auto__)) {
            return cljs.core.every_QMARK_(function(and__4345__auto__) {
              return function(p1__19803_SHARP_) {
                var and__4345__auto____$1 = function() {
                  var G__19970 = p1__19803_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19970) : p1.call(null, G__19970);
                }();
                if (cljs.core.truth_(and__4345__auto____$1)) {
                  var and__4345__auto____$2 = function() {
                    var G__19972 = p1__19803_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19972) : p2.call(null, G__19972);
                  }();
                  if (cljs.core.truth_(and__4345__auto____$2)) {
                    var G__19973 = p1__19803_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19973) : p3.call(null, G__19973);
                  } else {
                    return and__4345__auto____$2;
                  }
                } else {
                  return and__4345__auto____$1;
                }
              };
            }(and__4345__auto__), args);
          } else {
            return and__4345__auto__;
          }
        }());
      };
      var G__20009 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__20010__i = 0, G__20010__a = new Array(arguments.length - 3);
          while (G__20010__i < G__20010__a.length) {
            G__20010__a[G__20010__i] = arguments[G__20010__i + 3];
            ++G__20010__i;
          }
          args = new cljs.core.IndexedSeq(G__20010__a, 0);
        }
        return G__20009__delegate.call(this, x, y, z, args);
      };
      G__20009.cljs$lang$maxFixedArity = 3;
      G__20009.cljs$lang$applyTo = function(arglist__20011) {
        var x = cljs.core.first(arglist__20011);
        arglist__20011 = cljs.core.next(arglist__20011);
        var y = cljs.core.first(arglist__20011);
        arglist__20011 = cljs.core.next(arglist__20011);
        var z = cljs.core.first(arglist__20011);
        var args = cljs.core.rest(arglist__20011);
        return G__20009__delegate(x, y, z, args);
      };
      G__20009.cljs$core$IFn$_invoke$arity$variadic = G__20009__delegate;
      return G__20009;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__20012 = null;
          if (arguments.length > 3) {
            var G__20013__i = 0, G__20013__a = new Array(arguments.length - 3);
            while (G__20013__i < G__20013__a.length) {
              G__20013__a[G__20013__i] = arguments[G__20013__i + 3];
              ++G__20013__i;
            }
            G__20012 = new cljs.core.IndexedSeq(G__20013__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20012);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__19804_SHARP_) {
            var G__19989 = x;
            return p1__19804_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19804_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19989) : p1__19804_SHARP_.call(null, G__19989);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__19805_SHARP_) {
            var and__4345__auto__ = function() {
              var G__19991 = x;
              return p1__19805_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19805_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19991) : p1__19805_SHARP_.call(null, G__19991);
            }();
            if (cljs.core.truth_(and__4345__auto__)) {
              var G__19992 = y;
              return p1__19805_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19805_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19992) : p1__19805_SHARP_.call(null, G__19992);
            } else {
              return and__4345__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__19806_SHARP_) {
            var and__4345__auto__ = function() {
              var G__19994 = x;
              return p1__19806_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19806_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19994) : p1__19806_SHARP_.call(null, G__19994);
            }();
            if (cljs.core.truth_(and__4345__auto__)) {
              var and__4345__auto____$1 = function() {
                var G__19996 = y;
                return p1__19806_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19806_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19996) : p1__19806_SHARP_.call(null, G__19996);
              }();
              if (cljs.core.truth_(and__4345__auto____$1)) {
                var G__19997 = z;
                return p1__19806_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19806_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19997) : p1__19806_SHARP_.call(null, G__19997);
              } else {
                return and__4345__auto____$1;
              }
            } else {
              return and__4345__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__20014__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4345__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4345__auto__)) {
              return cljs.core.every_QMARK_(function(and__4345__auto__, ps__$1) {
                return function(p1__19807_SHARP_) {
                  return cljs.core.every_QMARK_(p1__19807_SHARP_, args);
                };
              }(and__4345__auto__, ps__$1), ps__$1);
            } else {
              return and__4345__auto__;
            }
          }());
        };
        var G__20014 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20015__i = 0, G__20015__a = new Array(arguments.length - 3);
            while (G__20015__i < G__20015__a.length) {
              G__20015__a[G__20015__i] = arguments[G__20015__i + 3];
              ++G__20015__i;
            }
            args = new cljs.core.IndexedSeq(G__20015__a, 0);
          }
          return G__20014__delegate.call(this, x, y, z, args);
        };
        G__20014.cljs$lang$maxFixedArity = 3;
        G__20014.cljs$lang$applyTo = function(arglist__20016) {
          var x = cljs.core.first(arglist__20016);
          arglist__20016 = cljs.core.next(arglist__20016);
          var y = cljs.core.first(arglist__20016);
          arglist__20016 = cljs.core.next(arglist__20016);
          var z = cljs.core.first(arglist__20016);
          var args = cljs.core.rest(arglist__20016);
          return G__20014__delegate(x, y, z, args);
        };
        G__20014.cljs$core$IFn$_invoke$arity$variadic = G__20014__delegate;
        return G__20014;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__20017 = null;
            if (arguments.length > 3) {
              var G__20018__i = 0, G__20018__a = new Array(arguments.length - 3);
              while (G__20018__i < G__20018__a.length) {
                G__20018__a[G__20018__i] = arguments[G__20018__i + 3];
                ++G__20018__i;
              }
              G__20017 = new cljs.core.IndexedSeq(G__20018__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20017);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq19808) {
  var G__19809 = cljs.core.first(seq19808);
  var seq19808__$1 = cljs.core.next(seq19808);
  var G__19810 = cljs.core.first(seq19808__$1);
  var seq19808__$2 = cljs.core.next(seq19808__$1);
  var G__19811 = cljs.core.first(seq19808__$2);
  var seq19808__$3 = cljs.core.next(seq19808__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__19809, G__19810, G__19811, seq19808__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn() {
  var G__20030 = arguments.length;
  switch(G__20030) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5408__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      var G__20046 = x;
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20046) : p.call(null, G__20046);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4357__auto__ = function() {
        var G__20048 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20048) : p.call(null, G__20048);
      }();
      if (cljs.core.truth_(or__4357__auto__)) {
        return or__4357__auto__;
      } else {
        var G__20049 = y;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20049) : p.call(null, G__20049);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4357__auto__ = function() {
        var G__20051 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20051) : p.call(null, G__20051);
      }();
      if (cljs.core.truth_(or__4357__auto__)) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = function() {
          var G__20053 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20053) : p.call(null, G__20053);
        }();
        if (cljs.core.truth_(or__4357__auto____$1)) {
          return or__4357__auto____$1;
        } else {
          var G__20054 = z;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20054) : p.call(null, G__20054);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__20216__delegate = function(x, y, z, args) {
        var or__4357__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4357__auto__)) {
          return or__4357__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__20216 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__20217__i = 0, G__20217__a = new Array(arguments.length - 3);
          while (G__20217__i < G__20217__a.length) {
            G__20217__a[G__20217__i] = arguments[G__20217__i + 3];
            ++G__20217__i;
          }
          args = new cljs.core.IndexedSeq(G__20217__a, 0);
        }
        return G__20216__delegate.call(this, x, y, z, args);
      };
      G__20216.cljs$lang$maxFixedArity = 3;
      G__20216.cljs$lang$applyTo = function(arglist__20218) {
        var x = cljs.core.first(arglist__20218);
        arglist__20218 = cljs.core.next(arglist__20218);
        var y = cljs.core.first(arglist__20218);
        arglist__20218 = cljs.core.next(arglist__20218);
        var z = cljs.core.first(arglist__20218);
        var args = cljs.core.rest(arglist__20218);
        return G__20216__delegate(x, y, z, args);
      };
      G__20216.cljs$core$IFn$_invoke$arity$variadic = G__20216__delegate;
      return G__20216;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__20219 = null;
          if (arguments.length > 3) {
            var G__20220__i = 0, G__20220__a = new Array(arguments.length - 3);
            while (G__20220__i < G__20220__a.length) {
              G__20220__a[G__20220__i] = arguments[G__20220__i + 3];
              ++G__20220__i;
            }
            G__20219 = new cljs.core.IndexedSeq(G__20220__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20219);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4357__auto__ = function() {
        var G__20086 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20086) : p1.call(null, G__20086);
      }();
      if (cljs.core.truth_(or__4357__auto__)) {
        return or__4357__auto__;
      } else {
        var G__20087 = x;
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20087) : p2.call(null, G__20087);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4357__auto__ = function() {
        var G__20089 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20089) : p1.call(null, G__20089);
      }();
      if (cljs.core.truth_(or__4357__auto__)) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = function() {
          var G__20091 = y;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20091) : p1.call(null, G__20091);
        }();
        if (cljs.core.truth_(or__4357__auto____$1)) {
          return or__4357__auto____$1;
        } else {
          var or__4357__auto____$2 = function() {
            var G__20093 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20093) : p2.call(null, G__20093);
          }();
          if (cljs.core.truth_(or__4357__auto____$2)) {
            return or__4357__auto____$2;
          } else {
            var G__20094 = y;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20094) : p2.call(null, G__20094);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4357__auto__ = function() {
        var G__20096 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20096) : p1.call(null, G__20096);
      }();
      if (cljs.core.truth_(or__4357__auto__)) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = function() {
          var G__20098 = y;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20098) : p1.call(null, G__20098);
        }();
        if (cljs.core.truth_(or__4357__auto____$1)) {
          return or__4357__auto____$1;
        } else {
          var or__4357__auto____$2 = function() {
            var G__20100 = z;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20100) : p1.call(null, G__20100);
          }();
          if (cljs.core.truth_(or__4357__auto____$2)) {
            return or__4357__auto____$2;
          } else {
            var or__4357__auto____$3 = function() {
              var G__20102 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20102) : p2.call(null, G__20102);
            }();
            if (cljs.core.truth_(or__4357__auto____$3)) {
              return or__4357__auto____$3;
            } else {
              var or__4357__auto____$4 = function() {
                var G__20104 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20104) : p2.call(null, G__20104);
              }();
              if (cljs.core.truth_(or__4357__auto____$4)) {
                return or__4357__auto____$4;
              } else {
                var G__20105 = z;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20105) : p2.call(null, G__20105);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__20221__delegate = function(x, y, z, args) {
        var or__4357__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4357__auto__)) {
          return or__4357__auto__;
        } else {
          return cljs.core.some(function(or__4357__auto__) {
            return function(p1__20019_SHARP_) {
              var or__4357__auto____$1 = function() {
                var G__20107 = p1__20019_SHARP_;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20107) : p1.call(null, G__20107);
              }();
              if (cljs.core.truth_(or__4357__auto____$1)) {
                return or__4357__auto____$1;
              } else {
                var G__20108 = p1__20019_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20108) : p2.call(null, G__20108);
              }
            };
          }(or__4357__auto__), args);
        }
      };
      var G__20221 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__20222__i = 0, G__20222__a = new Array(arguments.length - 3);
          while (G__20222__i < G__20222__a.length) {
            G__20222__a[G__20222__i] = arguments[G__20222__i + 3];
            ++G__20222__i;
          }
          args = new cljs.core.IndexedSeq(G__20222__a, 0);
        }
        return G__20221__delegate.call(this, x, y, z, args);
      };
      G__20221.cljs$lang$maxFixedArity = 3;
      G__20221.cljs$lang$applyTo = function(arglist__20223) {
        var x = cljs.core.first(arglist__20223);
        arglist__20223 = cljs.core.next(arglist__20223);
        var y = cljs.core.first(arglist__20223);
        arglist__20223 = cljs.core.next(arglist__20223);
        var z = cljs.core.first(arglist__20223);
        var args = cljs.core.rest(arglist__20223);
        return G__20221__delegate(x, y, z, args);
      };
      G__20221.cljs$core$IFn$_invoke$arity$variadic = G__20221__delegate;
      return G__20221;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__20224 = null;
          if (arguments.length > 3) {
            var G__20225__i = 0, G__20225__a = new Array(arguments.length - 3);
            while (G__20225__i < G__20225__a.length) {
              G__20225__a[G__20225__i] = arguments[G__20225__i + 3];
              ++G__20225__i;
            }
            G__20224 = new cljs.core.IndexedSeq(G__20225__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20224);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4357__auto__ = function() {
        var G__20154 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20154) : p1.call(null, G__20154);
      }();
      if (cljs.core.truth_(or__4357__auto__)) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = function() {
          var G__20156 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20156) : p2.call(null, G__20156);
        }();
        if (cljs.core.truth_(or__4357__auto____$1)) {
          return or__4357__auto____$1;
        } else {
          var G__20157 = x;
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20157) : p3.call(null, G__20157);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4357__auto__ = function() {
        var G__20159 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20159) : p1.call(null, G__20159);
      }();
      if (cljs.core.truth_(or__4357__auto__)) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = function() {
          var G__20161 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20161) : p2.call(null, G__20161);
        }();
        if (cljs.core.truth_(or__4357__auto____$1)) {
          return or__4357__auto____$1;
        } else {
          var or__4357__auto____$2 = function() {
            var G__20163 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20163) : p3.call(null, G__20163);
          }();
          if (cljs.core.truth_(or__4357__auto____$2)) {
            return or__4357__auto____$2;
          } else {
            var or__4357__auto____$3 = function() {
              var G__20165 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20165) : p1.call(null, G__20165);
            }();
            if (cljs.core.truth_(or__4357__auto____$3)) {
              return or__4357__auto____$3;
            } else {
              var or__4357__auto____$4 = function() {
                var G__20167 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20167) : p2.call(null, G__20167);
              }();
              if (cljs.core.truth_(or__4357__auto____$4)) {
                return or__4357__auto____$4;
              } else {
                var G__20168 = y;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20168) : p3.call(null, G__20168);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4357__auto__ = function() {
        var G__20170 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20170) : p1.call(null, G__20170);
      }();
      if (cljs.core.truth_(or__4357__auto__)) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = function() {
          var G__20172 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20172) : p2.call(null, G__20172);
        }();
        if (cljs.core.truth_(or__4357__auto____$1)) {
          return or__4357__auto____$1;
        } else {
          var or__4357__auto____$2 = function() {
            var G__20174 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20174) : p3.call(null, G__20174);
          }();
          if (cljs.core.truth_(or__4357__auto____$2)) {
            return or__4357__auto____$2;
          } else {
            var or__4357__auto____$3 = function() {
              var G__20176 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20176) : p1.call(null, G__20176);
            }();
            if (cljs.core.truth_(or__4357__auto____$3)) {
              return or__4357__auto____$3;
            } else {
              var or__4357__auto____$4 = function() {
                var G__20178 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20178) : p2.call(null, G__20178);
              }();
              if (cljs.core.truth_(or__4357__auto____$4)) {
                return or__4357__auto____$4;
              } else {
                var or__4357__auto____$5 = function() {
                  var G__20180 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20180) : p3.call(null, G__20180);
                }();
                if (cljs.core.truth_(or__4357__auto____$5)) {
                  return or__4357__auto____$5;
                } else {
                  var or__4357__auto____$6 = function() {
                    var G__20182 = z;
                    return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20182) : p1.call(null, G__20182);
                  }();
                  if (cljs.core.truth_(or__4357__auto____$6)) {
                    return or__4357__auto____$6;
                  } else {
                    var or__4357__auto____$7 = function() {
                      var G__20184 = z;
                      return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20184) : p2.call(null, G__20184);
                    }();
                    if (cljs.core.truth_(or__4357__auto____$7)) {
                      return or__4357__auto____$7;
                    } else {
                      var G__20185 = z;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20185) : p3.call(null, G__20185);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__20226__delegate = function(x, y, z, args) {
        var or__4357__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4357__auto__)) {
          return or__4357__auto__;
        } else {
          return cljs.core.some(function(or__4357__auto__) {
            return function(p1__20020_SHARP_) {
              var or__4357__auto____$1 = function() {
                var G__20187 = p1__20020_SHARP_;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20187) : p1.call(null, G__20187);
              }();
              if (cljs.core.truth_(or__4357__auto____$1)) {
                return or__4357__auto____$1;
              } else {
                var or__4357__auto____$2 = function() {
                  var G__20189 = p1__20020_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20189) : p2.call(null, G__20189);
                }();
                if (cljs.core.truth_(or__4357__auto____$2)) {
                  return or__4357__auto____$2;
                } else {
                  var G__20190 = p1__20020_SHARP_;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20190) : p3.call(null, G__20190);
                }
              }
            };
          }(or__4357__auto__), args);
        }
      };
      var G__20226 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__20227__i = 0, G__20227__a = new Array(arguments.length - 3);
          while (G__20227__i < G__20227__a.length) {
            G__20227__a[G__20227__i] = arguments[G__20227__i + 3];
            ++G__20227__i;
          }
          args = new cljs.core.IndexedSeq(G__20227__a, 0);
        }
        return G__20226__delegate.call(this, x, y, z, args);
      };
      G__20226.cljs$lang$maxFixedArity = 3;
      G__20226.cljs$lang$applyTo = function(arglist__20228) {
        var x = cljs.core.first(arglist__20228);
        arglist__20228 = cljs.core.next(arglist__20228);
        var y = cljs.core.first(arglist__20228);
        arglist__20228 = cljs.core.next(arglist__20228);
        var z = cljs.core.first(arglist__20228);
        var args = cljs.core.rest(arglist__20228);
        return G__20226__delegate(x, y, z, args);
      };
      G__20226.cljs$core$IFn$_invoke$arity$variadic = G__20226__delegate;
      return G__20226;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__20229 = null;
          if (arguments.length > 3) {
            var G__20230__i = 0, G__20230__a = new Array(arguments.length - 3);
            while (G__20230__i < G__20230__a.length) {
              G__20230__a[G__20230__i] = arguments[G__20230__i + 3];
              ++G__20230__i;
            }
            G__20229 = new cljs.core.IndexedSeq(G__20230__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20229);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__20021_SHARP_) {
            var G__20206 = x;
            return p1__20021_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20021_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20206) : p1__20021_SHARP_.call(null, G__20206);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__20022_SHARP_) {
            var or__4357__auto__ = function() {
              var G__20208 = x;
              return p1__20022_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20022_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20208) : p1__20022_SHARP_.call(null, G__20208);
            }();
            if (cljs.core.truth_(or__4357__auto__)) {
              return or__4357__auto__;
            } else {
              var G__20209 = y;
              return p1__20022_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20022_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20209) : p1__20022_SHARP_.call(null, G__20209);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__20023_SHARP_) {
            var or__4357__auto__ = function() {
              var G__20211 = x;
              return p1__20023_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20023_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20211) : p1__20023_SHARP_.call(null, G__20211);
            }();
            if (cljs.core.truth_(or__4357__auto__)) {
              return or__4357__auto__;
            } else {
              var or__4357__auto____$1 = function() {
                var G__20213 = y;
                return p1__20023_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20023_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20213) : p1__20023_SHARP_.call(null, G__20213);
              }();
              if (cljs.core.truth_(or__4357__auto____$1)) {
                return or__4357__auto____$1;
              } else {
                var G__20214 = z;
                return p1__20023_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20023_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20214) : p1__20023_SHARP_.call(null, G__20214);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__20231__delegate = function(x, y, z, args) {
          var or__4357__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4357__auto__)) {
            return or__4357__auto__;
          } else {
            return cljs.core.some(function(or__4357__auto__, ps__$1) {
              return function(p1__20024_SHARP_) {
                return cljs.core.some(p1__20024_SHARP_, args);
              };
            }(or__4357__auto__, ps__$1), ps__$1);
          }
        };
        var G__20231 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20232__i = 0, G__20232__a = new Array(arguments.length - 3);
            while (G__20232__i < G__20232__a.length) {
              G__20232__a[G__20232__i] = arguments[G__20232__i + 3];
              ++G__20232__i;
            }
            args = new cljs.core.IndexedSeq(G__20232__a, 0);
          }
          return G__20231__delegate.call(this, x, y, z, args);
        };
        G__20231.cljs$lang$maxFixedArity = 3;
        G__20231.cljs$lang$applyTo = function(arglist__20233) {
          var x = cljs.core.first(arglist__20233);
          arglist__20233 = cljs.core.next(arglist__20233);
          var y = cljs.core.first(arglist__20233);
          arglist__20233 = cljs.core.next(arglist__20233);
          var z = cljs.core.first(arglist__20233);
          var args = cljs.core.rest(arglist__20233);
          return G__20231__delegate(x, y, z, args);
        };
        G__20231.cljs$core$IFn$_invoke$arity$variadic = G__20231__delegate;
        return G__20231;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__20234 = null;
            if (arguments.length > 3) {
              var G__20235__i = 0, G__20235__a = new Array(arguments.length - 3);
              while (G__20235__i < G__20235__a.length) {
                G__20235__a[G__20235__i] = arguments[G__20235__i + 3];
                ++G__20235__i;
              }
              G__20234 = new cljs.core.IndexedSeq(G__20235__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20234);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq20025) {
  var G__20026 = cljs.core.first(seq20025);
  var seq20025__$1 = cljs.core.next(seq20025);
  var G__20027 = cljs.core.first(seq20025__$1);
  var seq20025__$2 = cljs.core.next(seq20025__$1);
  var G__20028 = cljs.core.first(seq20025__$2);
  var seq20025__$3 = cljs.core.next(seq20025__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__20026, G__20027, G__20028, seq20025__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map() {
  var G__20243 = arguments.length;
  switch(G__20243) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5408__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__20259 = null;
      var G__20259__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__20259__1 = function(result) {
        var G__20244 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20244) : rf.call(null, G__20244);
      };
      var G__20259__2 = function(result, input) {
        var G__20245 = result;
        var G__20246 = function() {
          var G__20247 = input;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20247) : f.call(null, G__20247);
        }();
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20245, G__20246) : rf.call(null, G__20245, G__20246);
      };
      var G__20259__3 = function() {
        var G__20260__delegate = function(result, input, inputs) {
          var G__20248 = result;
          var G__20249 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20248, G__20249) : rf.call(null, G__20248, G__20249);
        };
        var G__20260 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__20261__i = 0, G__20261__a = new Array(arguments.length - 2);
            while (G__20261__i < G__20261__a.length) {
              G__20261__a[G__20261__i] = arguments[G__20261__i + 2];
              ++G__20261__i;
            }
            inputs = new cljs.core.IndexedSeq(G__20261__a, 0);
          }
          return G__20260__delegate.call(this, result, input, inputs);
        };
        G__20260.cljs$lang$maxFixedArity = 2;
        G__20260.cljs$lang$applyTo = function(arglist__20262) {
          var result = cljs.core.first(arglist__20262);
          arglist__20262 = cljs.core.next(arglist__20262);
          var input = cljs.core.first(arglist__20262);
          var inputs = cljs.core.rest(arglist__20262);
          return G__20260__delegate(result, input, inputs);
        };
        G__20260.cljs$core$IFn$_invoke$arity$variadic = G__20260__delegate;
        return G__20260;
      }();
      G__20259 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__20259__0.call(this);
          case 1:
            return G__20259__1.call(this, result);
          case 2:
            return G__20259__2.call(this, result, input);
          default:
            var G__20263 = null;
            if (arguments.length > 2) {
              var G__20264__i = 0, G__20264__a = new Array(arguments.length - 2);
              while (G__20264__i < G__20264__a.length) {
                G__20264__a[G__20264__i] = arguments[G__20264__i + 2];
                ++G__20264__i;
              }
              G__20263 = new cljs.core.IndexedSeq(G__20264__a, 0);
            }
            return G__20259__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__20263);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20259.cljs$lang$maxFixedArity = 2;
      G__20259.cljs$lang$applyTo = G__20259__3.cljs$lang$applyTo;
      G__20259.cljs$core$IFn$_invoke$arity$0 = G__20259__0;
      G__20259.cljs$core$IFn$_invoke$arity$1 = G__20259__1;
      G__20259.cljs$core$IFn$_invoke$arity$2 = G__20259__2;
      G__20259.cljs$core$IFn$_invoke$arity$variadic = G__20259__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__20259;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5242__auto___20265 = size;
        var i_20266 = 0;
        while (true) {
          if (i_20266 < n__5242__auto___20265) {
            cljs.core.chunk_append(b, function() {
              var G__20250 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_20266);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20250) : f.call(null, G__20250);
            }());
            var G__20267 = i_20266 + 1;
            i_20266 = G__20267;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__20251 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20251) : f.call(null, G__20251);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__20252 = cljs.core.first(s1);
        var G__20253 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20252, G__20253) : f.call(null, G__20252, G__20253);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__20254 = cljs.core.first(s1);
        var G__20255 = cljs.core.first(s2);
        var G__20256 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20254, G__20255, G__20256) : f.call(null, G__20254, G__20255, G__20256);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__20236_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__20236_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq20237) {
  var G__20238 = cljs.core.first(seq20237);
  var seq20237__$1 = cljs.core.next(seq20237);
  var G__20239 = cljs.core.first(seq20237__$1);
  var seq20237__$2 = cljs.core.next(seq20237__$1);
  var G__20240 = cljs.core.first(seq20237__$2);
  var seq20237__$3 = cljs.core.next(seq20237__$2);
  var G__20241 = cljs.core.first(seq20237__$3);
  var seq20237__$4 = cljs.core.next(seq20237__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__20238, G__20239, G__20240, G__20241, seq20237__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take() {
  var G__20269 = arguments.length;
  switch(G__20269) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__20274 = null;
        var G__20274__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20274__1 = function(result) {
          var G__20270 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20270) : rf.call(null, G__20270);
        };
        var G__20274__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? function() {
            var G__20271 = result;
            var G__20272 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20271, G__20272) : rf.call(null, G__20271, G__20272);
          }() : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__20274 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20274__0.call(this);
            case 1:
              return G__20274__1.call(this, result);
            case 2:
              return G__20274__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20274.cljs$core$IFn$_invoke$arity$0 = G__20274__0;
        G__20274.cljs$core$IFn$_invoke$arity$1 = G__20274__1;
        G__20274.cljs$core$IFn$_invoke$arity$2 = G__20274__2;
        return G__20274;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop() {
  var G__20276 = arguments.length;
  switch(G__20276) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__20281 = null;
        var G__20281__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20281__1 = function(result) {
          var G__20277 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20277) : rf.call(null, G__20277);
        };
        var G__20281__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            var G__20278 = result;
            var G__20279 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20278, G__20279) : rf.call(null, G__20278, G__20279);
          }
        };
        G__20281 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20281__0.call(this);
            case 1:
              return G__20281__1.call(this, result);
            case 2:
              return G__20281__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20281.cljs$core$IFn$_invoke$arity$0 = G__20281__0;
        G__20281.cljs$core$IFn$_invoke$arity$1 = G__20281__1;
        G__20281.cljs$core$IFn$_invoke$arity$2 = G__20281__2;
        return G__20281;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__20282 = n__$1 - 1;
        var G__20283 = cljs.core.rest(s);
        n__$1 = G__20282;
        coll__$1 = G__20283;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last() {
  var G__20285 = arguments.length;
  switch(G__20285) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__20287 = cljs.core.next(s);
      var G__20288 = cljs.core.next(lead);
      s = G__20287;
      lead = G__20288;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while() {
  var G__20290 = arguments.length;
  switch(G__20290) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__20298 = null;
        var G__20298__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20298__1 = function(result) {
          var G__20291 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20291) : rf.call(null, G__20291);
        };
        var G__20298__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4345__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4345__auto__)) {
              var G__20292 = input;
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20292) : pred.call(null, G__20292);
            } else {
              return and__4345__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            var G__20293 = result;
            var G__20294 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20293, G__20294) : rf.call(null, G__20293, G__20294);
          }
        };
        G__20298 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20298__0.call(this);
            case 1:
              return G__20298__1.call(this, result);
            case 2:
              return G__20298__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20298.cljs$core$IFn$_invoke$arity$0 = G__20298__0;
        G__20298.cljs$core$IFn$_invoke$arity$1 = G__20298__1;
        G__20298.cljs$core$IFn$_invoke$arity$2 = G__20298__2;
        return G__20298;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4345__auto__ = s;
        if (and__4345__auto__) {
          var G__20296 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__20296) : pred__$1.call(null, G__20296);
        } else {
          return and__4345__auto__;
        }
      }())) {
        var G__20299 = pred__$1;
        var G__20300 = cljs.core.rest(s);
        pred__$1 = G__20299;
        coll__$1 = G__20300;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat() {
  var G__20303 = arguments.length;
  switch(G__20303) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly() {
  var G__20306 = arguments.length;
  switch(G__20306) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, function() {
      var G__20311 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20311) : f.call(null, G__20311);
    }());
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave() {
  var G__20316 = arguments.length;
  switch(G__20316) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5408__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq20312) {
  var G__20313 = cljs.core.first(seq20312);
  var seq20312__$1 = cljs.core.next(seq20312);
  var G__20314 = cljs.core.first(seq20312__$1);
  var seq20312__$2 = cljs.core.next(seq20312__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__20313, G__20314, seq20312__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose() {
  var G__20319 = arguments.length;
  switch(G__20319) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__20328 = null;
        var G__20328__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20328__1 = function(result) {
          var G__20320 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20320) : rf.call(null, G__20320);
        };
        var G__20328__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = function() {
              var G__20321 = result;
              var G__20322 = sep;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20321, G__20322) : rf.call(null, G__20321, G__20322);
            }();
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              var G__20323 = sepr;
              var G__20324 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20323, G__20324) : rf.call(null, G__20323, G__20324);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            var G__20325 = result;
            var G__20326 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20325, G__20326) : rf.call(null, G__20325, G__20326);
          }
        };
        G__20328 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20328__0.call(this);
            case 1:
              return G__20328__1.call(this, result);
            case 2:
              return G__20328__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20328.cljs$core$IFn$_invoke$arity$0 = G__20328__0;
        G__20328.cljs$core$IFn$_invoke$arity$1 = G__20328__1;
        G__20328.cljs$core$IFn$_invoke$arity$2 = G__20328__2;
        return G__20328;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat() {
  var G__20340 = arguments.length;
  switch(G__20340) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5408__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq20337) {
  var G__20338 = cljs.core.first(seq20337);
  var seq20337__$1 = cljs.core.next(seq20337);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__20338, seq20337__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter() {
  var G__20343 = arguments.length;
  switch(G__20343) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__20351 = null;
      var G__20351__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__20351__1 = function(result) {
        var G__20344 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20344) : rf.call(null, G__20344);
      };
      var G__20351__2 = function(result, input) {
        if (cljs.core.truth_(function() {
          var G__20345 = input;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20345) : pred.call(null, G__20345);
        }())) {
          var G__20346 = result;
          var G__20347 = input;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20346, G__20347) : rf.call(null, G__20346, G__20347);
        } else {
          return result;
        }
      };
      G__20351 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__20351__0.call(this);
          case 1:
            return G__20351__1.call(this, result);
          case 2:
            return G__20351__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20351.cljs$core$IFn$_invoke$arity$0 = G__20351__0;
      G__20351.cljs$core$IFn$_invoke$arity$1 = G__20351__1;
      G__20351.cljs$core$IFn$_invoke$arity$2 = G__20351__2;
      return G__20351;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5242__auto___20352 = size;
        var i_20353 = 0;
        while (true) {
          if (i_20353 < n__5242__auto___20352) {
            if (cljs.core.truth_(function() {
              var G__20348 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_20353);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20348) : pred.call(null, G__20348);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_20353));
            } else {
            }
            var G__20354 = i_20353 + 1;
            i_20353 = G__20354;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(function() {
          var G__20349 = f;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20349) : pred.call(null, G__20349);
        }())) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove() {
  var G__20356 = arguments.length;
  switch(G__20356) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__20364 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__20364) : branch_QMARK_.call(null, G__20364);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([function() {
        var G__20365 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__20365) : children.call(null, G__20365);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__20366_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__20366_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into() {
  var G__20368 = arguments.length;
  switch(G__20368) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__20369 = to;
      if (G__20369) {
        var bit__5024__auto__ = G__20369.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__5024__auto__ || G__20369.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (function() {
    var G__20370 = to;
    if (G__20370) {
      var bit__5024__auto__ = G__20370.cljs$lang$protocol_mask$partition1$ & 4;
      if (bit__5024__auto__ || G__20370.cljs$core$IEditableCollection$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv() {
  var G__20378 = arguments.length;
  switch(G__20378) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5408__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
      var G__20379 = o;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20379) : f.call(null, G__20379);
    }());
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq20372) {
  var G__20373 = cljs.core.first(seq20372);
  var seq20372__$1 = cljs.core.next(seq20372);
  var G__20374 = cljs.core.first(seq20372__$1);
  var seq20372__$2 = cljs.core.next(seq20372__$1);
  var G__20375 = cljs.core.first(seq20372__$2);
  var seq20372__$3 = cljs.core.next(seq20372__$2);
  var G__20376 = cljs.core.first(seq20372__$3);
  var seq20372__$4 = cljs.core.next(seq20372__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__20373, G__20374, G__20375, G__20376, seq20372__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__20382 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20382) : pred.call(null, G__20382);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition() {
  var G__20384 = arguments.length;
  switch(G__20384) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in() {
  var G__20387 = arguments.length;
  switch(G__20387) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!function() {
        var G__20388 = m__$1;
        if (G__20388) {
          var bit__5031__auto__ = G__20388.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__5031__auto__ || G__20388.cljs$core$ILookup$) {
            return true;
          } else {
            if (!G__20388.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__20388);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__20388);
        }
      }()) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__20390 = sentinel;
          var G__20391 = m__$2;
          var G__20392 = cljs.core.next(ks__$1);
          sentinel = G__20390;
          m__$1 = G__20391;
          ks__$1 = G__20392;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__20393, v) {
  var vec__20398 = p__20393;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20398, 0, null);
  var ks = cljs.core.nthnext(vec__20398, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in() {
  var G__20407 = arguments.length;
  switch(G__20407) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5408__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__20408, f) {
  var vec__20409 = p__20408;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20409, 0, null);
  var ks = cljs.core.nthnext(vec__20409, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__20410 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20410) : f.call(null, G__20410);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__20411, f, a) {
  var vec__20412 = p__20411;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20412, 0, null);
  var ks = cljs.core.nthnext(vec__20412, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__20413 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__20414 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20413, G__20414) : f.call(null, G__20413, G__20414);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__20415, f, a, b) {
  var vec__20416 = p__20415;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20416, 0, null);
  var ks = cljs.core.nthnext(vec__20416, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__20417 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__20418 = a;
      var G__20419 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20417, G__20418, G__20419) : f.call(null, G__20417, G__20418, G__20419);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__20420, f, a, b, c) {
  var vec__20421 = p__20420;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20421, 0, null);
  var ks = cljs.core.nthnext(vec__20421, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__20422 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__20423 = a;
      var G__20424 = b;
      var G__20425 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20422, G__20423, G__20424, G__20425) : f.call(null, G__20422, G__20423, G__20424, G__20425);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__20426, f, a, b, c, args) {
  var vec__20427 = p__20426;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20427, 0, null);
  var ks = cljs.core.nthnext(vec__20427, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq20399) {
  var G__20400 = cljs.core.first(seq20399);
  var seq20399__$1 = cljs.core.next(seq20399);
  var G__20401 = cljs.core.first(seq20399__$1);
  var seq20399__$2 = cljs.core.next(seq20399__$1);
  var G__20402 = cljs.core.first(seq20399__$2);
  var seq20399__$3 = cljs.core.next(seq20399__$2);
  var G__20403 = cljs.core.first(seq20399__$3);
  var seq20399__$4 = cljs.core.next(seq20399__$3);
  var G__20404 = cljs.core.first(seq20399__$4);
  var seq20399__$5 = cljs.core.next(seq20399__$4);
  var G__20405 = cljs.core.first(seq20399__$5);
  var seq20399__$6 = cljs.core.next(seq20399__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__20400, G__20401, G__20402, G__20403, G__20404, G__20405, seq20399__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update() {
  var G__20437 = arguments.length;
  switch(G__20437) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5408__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__20438 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20438) : f.call(null, G__20438);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__20439 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__20440 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20439, G__20440) : f.call(null, G__20439, G__20440);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__20441 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__20442 = x;
    var G__20443 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20441, G__20442, G__20443) : f.call(null, G__20441, G__20442, G__20443);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__20444 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__20445 = x;
    var G__20446 = y;
    var G__20447 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20444, G__20445, G__20446, G__20447) : f.call(null, G__20444, G__20445, G__20446, G__20447);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq20429) {
  var G__20430 = cljs.core.first(seq20429);
  var seq20429__$1 = cljs.core.next(seq20429);
  var G__20431 = cljs.core.first(seq20429__$1);
  var seq20429__$2 = cljs.core.next(seq20429__$1);
  var G__20432 = cljs.core.first(seq20429__$2);
  var seq20429__$3 = cljs.core.next(seq20429__$2);
  var G__20433 = cljs.core.first(seq20429__$3);
  var seq20429__$4 = cljs.core.next(seq20429__$3);
  var G__20434 = cljs.core.first(seq20429__$4);
  var seq20429__$5 = cljs.core.next(seq20429__$4);
  var G__20435 = cljs.core.first(seq20429__$5);
  var seq20429__$6 = cljs.core.next(seq20429__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__20430, G__20431, G__20432, G__20433, G__20434, G__20435, seq20429__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__20449 = ll - 5;
      var G__20450 = r;
      ll = G__20449;
      ret = G__20450;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__20455 = cljs.core.pv_aget(node, 0);
      var G__20456 = level - 5;
      node = G__20455;
      level = G__20456;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__20457 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__20458 = level - 5;
        node = G__20457;
        level = G__20458;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__20468 = init__$2;
              var G__20469 = j + i;
              var G__20470 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20468, G__20469, G__20470) : f.call(null, G__20468, G__20469, G__20470);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__20481 = j + 1;
              var G__20482 = init__$3;
              j = G__20481;
              init__$2 = G__20482;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__20471 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20471) : cljs.core.deref.call(null, G__20471);
      } else {
        var G__20483 = i + len;
        var G__20484 = init__$2;
        i = G__20483;
        init__$1 = G__20484;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__20472 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__20472) : cljs.core.tv_editable_root.call(null, G__20472);
  }(), function() {
    var G__20473 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__20473) : cljs.core.tv_editable_tail.call(null, G__20473);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__20474 = init__$2;
              var G__20475 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20474, G__20475) : f.call(null, G__20474, G__20475);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__20485 = j + 1;
              var G__20486 = init__$3;
              j = G__20485;
              init__$2 = G__20486;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__20476 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20476) : cljs.core.deref.call(null, G__20476);
      } else {
        var G__20487 = i + len;
        var G__20488 = init__$2;
        i = G__20487;
        init__$1 = G__20488;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__20477 = coll__$1;
      var G__20478 = cljs.core.first_array_for_longvec(coll__$1);
      var G__20479 = 0;
      var G__20480 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20477, G__20478, G__20479, G__20480) : cljs.core.chunked_seq.call(null, G__20477, G__20478, G__20479, G__20480);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5242__auto___20489 = len;
    var i_20490 = 0;
    while (true) {
      if (i_20490 < n__5242__auto___20489) {
        new_tail[i_20490] = self__.tail[i_20490];
        var G__20491 = i_20490 + 1;
        i_20490 = G__20491;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__20492 = null;
  var G__20492__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__20492__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__20492 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20492__2.call(this, self__, k);
      case 3:
        return G__20492__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20492.cljs$core$IFn$_invoke$arity$2 = G__20492__2;
  G__20492.cljs$core$IFn$_invoke$arity$3 = G__20492__3;
  return G__20492;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args20467) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20467)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__20493 = i + 1;
        var G__20494 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__20493;
        out = G__20494;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector() {
  var argseq__5397__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5397__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq20495) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20495));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__20496 = self__.vec;
      var G__20497 = self__.node;
      var G__20498 = self__.i;
      var G__20499 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20496, G__20497, G__20498, G__20499) : cljs.core.chunked_seq.call(null, G__20496, G__20497, G__20498, G__20499);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__20500 = self__.vec;
    var G__20501 = self__.i + self__.off;
    var G__20502 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__20500, G__20501, G__20502) : cljs.core.subvec.call(null, G__20500, G__20501, G__20502);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__20503 = self__.vec;
    var G__20504 = self__.i + self__.off;
    var G__20505 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__20503, G__20504, G__20505) : cljs.core.subvec.call(null, G__20503, G__20504, G__20505);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__20506 = self__.vec;
      var G__20507 = self__.node;
      var G__20508 = self__.i;
      var G__20509 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20506, G__20507, G__20508, G__20509) : cljs.core.chunked_seq.call(null, G__20506, G__20507, G__20508, G__20509);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__20510 = self__.vec;
    var G__20511 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__20512 = end;
    var G__20513 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20510, G__20511, G__20512, G__20513) : cljs.core.chunked_seq.call(null, G__20510, G__20511, G__20512, G__20513);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__20514 = self__.vec;
  var G__20515 = self__.node;
  var G__20516 = self__.i;
  var G__20517 = self__.off;
  var G__20518 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__20514, G__20515, G__20516, G__20517, G__20518) : cljs.core.chunked_seq.call(null, G__20514, G__20515, G__20516, G__20517, G__20518);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__20519 = self__.vec;
    var G__20520 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__20521 = end;
    var G__20522 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20519, G__20520, G__20521, G__20522) : cljs.core.chunked_seq.call(null, G__20519, G__20520, G__20521, G__20522);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq() {
  var G__20524 = arguments.length;
  switch(G__20524) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__20527 = init__$1;
        var G__20528 = j;
        var G__20529 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20527, G__20528, G__20529) : f.call(null, G__20527, G__20528, G__20529);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__20530 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20530) : cljs.core.deref.call(null, G__20530);
      } else {
        var G__20552 = i + 1;
        var G__20553 = j + 1;
        var G__20554 = init__$2;
        i = G__20552;
        j = G__20553;
        init__$1 = G__20554;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__20531 = self__.meta;
  var G__20532 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__20533 = self__.start;
  var G__20534 = function() {
    var x__4669__auto__ = self__.end;
    var y__4670__auto__ = v_pos + 1;
    return x__4669__auto__ > y__4670__auto__ ? x__4669__auto__ : y__4670__auto__;
  }();
  var G__20535 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__20531, G__20532, G__20533, G__20534, G__20535) : cljs.core.build_subvec.call(null, G__20531, G__20532, G__20533, G__20534, G__20535);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__20536 = self__.meta;
    var G__20537 = self__.v;
    var G__20538 = self__.start;
    var G__20539 = self__.end - 1;
    var G__20540 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__20536, G__20537, G__20538, G__20539, G__20540) : cljs.core.build_subvec.call(null, G__20536, G__20537, G__20538, G__20539, G__20540);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__20542 = meta__$1;
  var G__20543 = self__.v;
  var G__20544 = self__.start;
  var G__20545 = self__.end;
  var G__20546 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__20542, G__20543, G__20544, G__20545, G__20546) : cljs.core.build_subvec.call(null, G__20542, G__20543, G__20544, G__20545, G__20546);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__20547 = self__.meta;
  var G__20548 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__20549 = self__.start;
  var G__20550 = self__.end + 1;
  var G__20551 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__20547, G__20548, G__20549, G__20550, G__20551) : cljs.core.build_subvec.call(null, G__20547, G__20548, G__20549, G__20550, G__20551);
};
cljs.core.Subvec.prototype.call = function() {
  var G__20555 = null;
  var G__20555__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__20555__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__20555 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20555__2.call(this, self__, k);
      case 3:
        return G__20555__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20555.cljs$core$IFn$_invoke$arity$2 = G__20555__2;
  G__20555.cljs$core$IFn$_invoke$arity$3 = G__20555__3;
  return G__20555;
}();
cljs.core.Subvec.prototype.apply = function(self__, args20526) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20526)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__20556 = meta;
      var G__20557 = v.v;
      var G__20558 = v.start + start;
      var G__20559 = v.start + end;
      var G__20560 = __hash;
      meta = G__20556;
      v = G__20557;
      start = G__20558;
      end = G__20559;
      __hash = G__20560;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec() {
  var G__20562 = arguments.length;
  switch(G__20562) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj20567 = {};
    return obj20567;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__20575 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__20576 = level - 5;
        node = G__20575;
        level = G__20576;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__20580 = null;
  var G__20580__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20580__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20580 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20580__2.call(this, self__, k);
      case 3:
        return G__20580__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20580.cljs$core$IFn$_invoke$arity$2 = G__20580__2;
  G__20580.cljs$core$IFn$_invoke$arity$3 = G__20580__3;
  return G__20580;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args20577) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20577)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4357__auto__ = self__.front;
    if (cljs.core.truth_(or__4357__auto__)) {
      return or__4357__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4357__auto__ = self__.rear;
      if (cljs.core.truth_(or__4357__auto__)) {
        return or__4357__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__20581 = i + incr;
        i = G__20581;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__20582 = i + 1;
      var G__20583 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__20582;
      out = G__20583;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = function() {
    var obj20587 = {};
    return obj20587;
  }();
  var l = ks.length;
  var i_20588 = 0;
  while (true) {
    if (i_20588 < l) {
      var k_20589 = ks[i_20588];
      new_obj[k_20589] = obj[k_20589];
      var G__20590 = i_20588 + 1;
      i_20588 = G__20590;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4345__auto__ = function() {
      var G__20594 = k;
      return goog.isString(G__20594);
    }();
    if (cljs.core.truth_(and__4345__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4345__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__20595 = init__$1;
        var G__20596 = k;
        var G__20597 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20595, G__20596, G__20597) : f.call(null, G__20595, G__20596, G__20597);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__20598 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20598) : cljs.core.deref.call(null, G__20598);
      } else {
        var G__20604 = cljs.core.rest(keys__$1);
        var G__20605 = init__$2;
        keys__$1 = G__20604;
        init__$1 = G__20605;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4345__auto__ = function() {
      var G__20600 = k;
      return goog.isString(G__20600);
    }();
    if (cljs.core.truth_(and__4345__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4345__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__20601 = k;
    return goog.isString(G__20601);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4345__auto__ = function() {
      var G__20603 = k;
      return goog.isString(G__20603);
    }();
    if (cljs.core.truth_(and__4345__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4345__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__20591_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20591_SHARP_, self__.strobj[p1__20591_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__20606 = null;
  var G__20606__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20606__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20606 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20606__2.call(this, self__, k);
      case 3:
        return G__20606__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20606.cljs$core$IFn$_invoke$arity$2 = G__20606__2;
  G__20606.cljs$core$IFn$_invoke$arity$3 = G__20606__3;
  return G__20606;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args20592) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20592)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj20608 = {};
  return obj20608;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__20609 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20609, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20609, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__20610 = i + 2;
        i = G__20610;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__20611 = i + 2;
        i = G__20611;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__20612 = i + 2;
        i = G__20612;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__20613 = i + 2;
        i = G__20613;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__20614 = i + 2;
        i = G__20614;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__4357__auto__ = function() {
        var G__20618 = k;
        return goog.isString(G__20618);
      }();
      if (cljs.core.truth_(or__4357__auto__)) {
        return or__4357__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_20619 = 0;
  while (true) {
    if (i_20619 < l) {
      narr[i_20619] = arr[i_20619];
      var G__20620 = i_20619 + 1;
      i_20619 = G__20620;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20622 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__20622) : cljs.core.keys.call(null, G__20622);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20623 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__20623) : cljs.core.vals.call(null, G__20623);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20624 = cljs.core.seq(coll);
  var chunk__20625 = null;
  var count__20626 = 0;
  var i__20627 = 0;
  while (true) {
    if (i__20627 < count__20626) {
      var vec__20628 = chunk__20625.cljs$core$IIndexed$_nth$arity$2(null, i__20627);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20628, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20628, 1, null);
      var G__20629_20642 = v;
      var G__20630_20643 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20629_20642, G__20630_20643) : f.call(null, G__20629_20642, G__20630_20643);
      var G__20644 = seq__20624;
      var G__20645 = chunk__20625;
      var G__20646 = count__20626;
      var G__20647 = i__20627 + 1;
      seq__20624 = G__20644;
      chunk__20625 = G__20645;
      count__20626 = G__20646;
      i__20627 = G__20647;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20624);
      if (temp__4126__auto__) {
        var seq__20624__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20624__$1)) {
          var c__5142__auto__ = cljs.core.chunk_first(seq__20624__$1);
          var G__20648 = cljs.core.chunk_rest(seq__20624__$1);
          var G__20649 = c__5142__auto__;
          var G__20650 = cljs.core.count(c__5142__auto__);
          var G__20651 = 0;
          seq__20624 = G__20648;
          chunk__20625 = G__20649;
          count__20626 = G__20650;
          i__20627 = G__20651;
          continue;
        } else {
          var vec__20631 = cljs.core.first(seq__20624__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20631, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20631, 1, null);
          var G__20632_20652 = v;
          var G__20633_20653 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20632_20652, G__20633_20653) : f.call(null, G__20632_20652, G__20633_20653);
          var G__20654 = cljs.core.next(seq__20624__$1);
          var G__20655 = null;
          var G__20656 = 0;
          var G__20657 = 0;
          seq__20624 = G__20654;
          chunk__20625 = G__20655;
          count__20626 = G__20656;
          i__20627 = G__20657;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__20634 = init__$1;
        var G__20635 = self__.arr[i];
        var G__20636 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20634, G__20635, G__20636) : f.call(null, G__20634, G__20635, G__20636);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__20637 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20637) : cljs.core.deref.call(null, G__20637);
      } else {
        var G__20658 = i + 2;
        var G__20659 = init__$2;
        i = G__20658;
        init__$1 = G__20659;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__20638 = other;
    if (G__20638) {
      var bit__5024__auto__ = G__20638.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__5024__auto__ || G__20638.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__20660 = i + 2;
              i = G__20660;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj20640 = {};
    return obj20640;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__20661 = s + 2;
            var G__20662 = d;
            s = G__20661;
            d = G__20662;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__20663 = s + 2;
            var G__20664 = d + 2;
            s = G__20663;
            d = G__20664;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__20641 = cljs.core.aclone(self__.arr);
        G__20641[idx + 1] = v;
        return G__20641;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20665 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20666 = cljs.core.next(es);
          ret = G__20665;
          es = G__20666;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__20667 = null;
  var G__20667__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20667__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20667 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20667__2.call(this, self__, k);
      case 3:
        return G__20667__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20667.cljs$core$IFn$_invoke$arity$2 = G__20667__2;
  G__20667.cljs$core$IFn$_invoke$arity$3 = G__20667__3;
  return G__20667;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args20621) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20621)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_20668 = 0;
    while (true) {
      if (i_20668 < arr__$1.length) {
        var k_20669 = arr__$1[i_20668];
        var v_20670 = arr__$1[i_20668 + 1];
        var idx_20671 = cljs.core.array_index_of(ret, k_20669);
        if (idx_20671 === -1) {
          ret.push(k_20669);
          ret.push(v_20670);
        } else {
        }
        var G__20672 = i_20668 + 2;
        i_20668 = G__20672;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__20673_20681 = self__.arr;
      G__20673_20681.pop();
      G__20673_20681.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__20674 = self__.len;
          var G__20675 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__20674, G__20675) : cljs.core.array__GT_transient_hash_map.call(null, G__20674, G__20675);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__20676 = o;
      if (G__20676) {
        var bit__5031__auto__ = G__20676.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__5031__auto__ || G__20676.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__20676.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20676);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20676);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__20677 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20677) : cljs.core.key.call(null, G__20677);
      }(), function() {
        var G__20678 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20678) : cljs.core.val.call(null, G__20678);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__20682 = cljs.core.next(es);
          var G__20683 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__20679 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20679) : cljs.core.key.call(null, G__20679);
          }(), function() {
            var G__20680 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20680) : cljs.core.val.call(null, G__20680);
          }());
          es = G__20682;
          tcoll__$2 = G__20683;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__20684 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__20685 = i + 2;
      out = G__20684;
      i = G__20685;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set() {
  var G__20687 = arguments.length;
  switch(G__20687) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__20688 = cljs.core.aclone(arr);
  G__20688[i] = a;
  return G__20688;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__20689 = cljs.core.aclone(arr);
  G__20689[i] = a;
  G__20689[j] = b;
  return G__20689;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set() {
  var G__20692 = arguments.length;
  switch(G__20692) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__20698 = init__$1;
          var G__20699 = k;
          var G__20700 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20698, G__20699, G__20700) : f.call(null, G__20698, G__20699, G__20700);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__20701 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20701) : cljs.core.deref.call(null, G__20701);
      } else {
        var G__20702 = i + 2;
        var G__20703 = init__$2;
        i = G__20702;
        init__$1 = G__20703;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__20704 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__20704) : cljs.core.create_inode_seq.call(null, G__20704);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_20718 = 0;
        var j_20719 = 0;
        while (true) {
          if (i_20718 < 32) {
            if ((self__.bitmap >>> i_20718 & 1) === 0) {
              var G__20720 = i_20718 + 1;
              var G__20721 = j_20719;
              i_20718 = G__20720;
              j_20719 = G__20721;
              continue;
            } else {
              nodes[i_20718] = !(self__.arr[j_20719] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_20719]), self__.arr[j_20719], self__.arr[j_20719 + 1], added_leaf_QMARK_) : self__.arr[j_20719 + 1];
              var G__20722 = i_20718 + 1;
              var G__20723 = j_20719 + 2;
              i_20718 = G__20722;
              j_20719 = G__20723;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__20705 = edit__$1;
          var G__20706 = shift + 5;
          var G__20707 = key_or_nil;
          var G__20708 = val_or_node;
          var G__20709 = hash;
          var G__20710 = key;
          var G__20711 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__20705, G__20706, G__20707, G__20708, G__20709, G__20710, G__20711) : cljs.core.create_node.call(null, G__20705, G__20706, G__20707, G__20708, G__20709, G__20710, G__20711);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_20724 = 0;
      var j_20725 = 0;
      while (true) {
        if (i_20724 < 32) {
          if ((self__.bitmap >>> i_20724 & 1) === 0) {
            var G__20726 = i_20724 + 1;
            var G__20727 = j_20725;
            i_20724 = G__20726;
            j_20725 = G__20727;
            continue;
          } else {
            nodes[i_20724] = !(self__.arr[j_20725] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_20725]), self__.arr[j_20725], self__.arr[j_20725 + 1], added_leaf_QMARK_) : self__.arr[j_20725 + 1];
            var G__20728 = i_20724 + 1;
            var G__20729 = j_20725 + 2;
            i_20724 = G__20728;
            j_20725 = G__20729;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__20712 = shift + 5;
          var G__20713 = key_or_nil;
          var G__20714 = val_or_node;
          var G__20715 = hash;
          var G__20716 = key;
          var G__20717 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__20712, G__20713, G__20714, G__20715, G__20716, G__20717) : cljs.core.create_node.call(null, G__20712, G__20713, G__20714, G__20715, G__20716, G__20717);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__20730 = i + 1;
        var G__20731 = j + 2;
        var G__20732 = bitmap | 1 << i;
        i = G__20730;
        j = G__20731;
        bitmap = G__20732;
        continue;
      } else {
        var G__20733 = i + 1;
        var G__20734 = j;
        var G__20735 = bitmap;
        i = G__20733;
        j = G__20734;
        bitmap = G__20735;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__20736 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__20736) : cljs.core.create_array_node_seq.call(null, G__20736);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__20737 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20737) : cljs.core.deref.call(null, G__20737);
        } else {
          var G__20738 = i + 1;
          var G__20739 = init__$2;
          i = G__20738;
          init__$1 = G__20739;
          continue;
        }
      } else {
        var G__20740 = i + 1;
        var G__20741 = init__$1;
        i = G__20740;
        init__$1 = G__20741;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__20742 = i + 2;
        i = G__20742;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__20743 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__20743) : cljs.core.create_inode_seq.call(null, G__20743);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node() {
  var G__20745 = arguments.length;
  switch(G__20745) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__20747 = self__.nodes;
    var G__20748 = self__.i + 2;
    var G__20749 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__20747, G__20748, G__20749) : cljs.core.create_inode_seq.call(null, G__20747, G__20748, G__20749);
  } else {
    var G__20750 = self__.nodes;
    var G__20751 = self__.i;
    var G__20752 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__20750, G__20751, G__20752) : cljs.core.create_inode_seq.call(null, G__20750, G__20751, G__20752);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq() {
  var G__20754 = arguments.length;
  switch(G__20754) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4124__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var node = temp__4124__auto__;
            var temp__4124__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var node_seq = temp__4124__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__20756 = j + 2;
              j = G__20756;
              continue;
            }
          } else {
            var G__20757 = j + 2;
            j = G__20757;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__20758 = null;
  var G__20759 = self__.nodes;
  var G__20760 = self__.i;
  var G__20761 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__20758, G__20759, G__20760, G__20761) : cljs.core.create_array_node_seq.call(null, G__20758, G__20759, G__20760, G__20761);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq() {
  var G__20763 = arguments.length;
  switch(G__20763) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4124__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4124__auto__)) {
          var nj = temp__4124__auto__;
          var temp__4124__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4124__auto____$1)) {
            var ns = temp__4124__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__20765 = j + 1;
            j = G__20765;
            continue;
          }
        } else {
          var G__20766 = j + 1;
          j = G__20766;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20768 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__20768) : cljs.core.keys.call(null, G__20768);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20769 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__20769) : cljs.core.vals.call(null, G__20769);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20770 = cljs.core.seq(coll);
  var chunk__20771 = null;
  var count__20772 = 0;
  var i__20773 = 0;
  while (true) {
    if (i__20773 < count__20772) {
      var vec__20774 = chunk__20771.cljs$core$IIndexed$_nth$arity$2(null, i__20773);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20774, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20774, 1, null);
      var G__20775_20786 = v;
      var G__20776_20787 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20775_20786, G__20776_20787) : f.call(null, G__20775_20786, G__20776_20787);
      var G__20788 = seq__20770;
      var G__20789 = chunk__20771;
      var G__20790 = count__20772;
      var G__20791 = i__20773 + 1;
      seq__20770 = G__20788;
      chunk__20771 = G__20789;
      count__20772 = G__20790;
      i__20773 = G__20791;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20770);
      if (temp__4126__auto__) {
        var seq__20770__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20770__$1)) {
          var c__5142__auto__ = cljs.core.chunk_first(seq__20770__$1);
          var G__20792 = cljs.core.chunk_rest(seq__20770__$1);
          var G__20793 = c__5142__auto__;
          var G__20794 = cljs.core.count(c__5142__auto__);
          var G__20795 = 0;
          seq__20770 = G__20792;
          chunk__20771 = G__20793;
          count__20772 = G__20794;
          i__20773 = G__20795;
          continue;
        } else {
          var vec__20777 = cljs.core.first(seq__20770__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20777, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20777, 1, null);
          var G__20778_20796 = v;
          var G__20779_20797 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20778_20796, G__20779_20797) : f.call(null, G__20778_20796, G__20779_20797);
          var G__20798 = cljs.core.next(seq__20770__$1);
          var G__20799 = null;
          var G__20800 = 0;
          var G__20801 = 0;
          seq__20770 = G__20798;
          chunk__20771 = G__20799;
          count__20772 = G__20800;
          i__20773 = G__20801;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__20780 = init;
    var G__20781 = null;
    var G__20782 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20780, G__20781, G__20782) : f.call(null, G__20780, G__20781, G__20782);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__20783 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20783) : cljs.core.deref.call(null, G__20783);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj20785 = {};
    return obj20785;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20802 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20803 = cljs.core.next(es);
          ret = G__20802;
          es = G__20803;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__20804 = null;
  var G__20804__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20804__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20804 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20804__2.call(this, self__, k);
      case 3:
        return G__20804__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20804.cljs$core$IFn$_invoke$arity$2 = G__20804__2;
  G__20804.cljs$core$IFn$_invoke$arity$3 = G__20804__3;
  return G__20804;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args20767) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20767)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__20805 = i + 2;
      var G__20806 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__20805;
      ret = G__20806;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__20807 = i + 1;
      var G__20808 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__20807;
      out = G__20808;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__20809 = o;
      if (G__20809) {
        var bit__5031__auto__ = G__20809.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__5031__auto__ || G__20809.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__20809.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20809);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20809);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__20810 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20810) : cljs.core.key.call(null, G__20810);
      }(), function() {
        var G__20811 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20811) : cljs.core.val.call(null, G__20811);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__20814 = cljs.core.next(es);
          var G__20815 = tcoll__$1.assoc_BANG_(function() {
            var G__20812 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20812) : cljs.core.key.call(null, G__20812);
          }(), function() {
            var G__20813 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20813) : cljs.core.val.call(null, G__20813);
          }());
          es = G__20814;
          tcoll__$1 = G__20815;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__20816 = ascending_QMARK_ ? t.left : t.right;
      var G__20817 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__20816;
      stack__$1 = G__20817;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__20830 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20830) : cljs.core.deref.call(null, G__20830);
  } else {
    var init__$2 = function() {
      var G__20831 = init__$1;
      var G__20832 = node.key;
      var G__20833 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20831, G__20832, G__20833) : f.call(null, G__20831, G__20832, G__20833);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__20834 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20834) : cljs.core.deref.call(null, G__20834);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__20835 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20835) : cljs.core.deref.call(null, G__20835);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__20837 = null;
  var G__20837__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20837__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20837 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20837__2.call(this, self__, k);
      case 3:
        return G__20837__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20837.cljs$core$IFn$_invoke$arity$2 = G__20837__2;
  G__20837.cljs$core$IFn$_invoke$arity$3 = G__20837__3;
  return G__20837;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args20836) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20836)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__20839 = null;
  var G__20839__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20839__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20839 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20839__2.call(this, self__, k);
      case 3:
        return G__20839__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20839.cljs$core$IFn$_invoke$arity$2 = G__20839__2;
  G__20839.cljs$core$IFn$_invoke$arity$3 = G__20839__3;
  return G__20839;
}();
cljs.core.RedNode.prototype.apply = function(self__, args20838) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20838)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__20852 = k;
      var G__20853 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20852, G__20853) : comp.call(null, G__20852, G__20853);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__20872 = k;
      var G__20873 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20872, G__20873) : comp.call(null, G__20872, G__20873);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__20884 = k;
    var G__20885 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20884, G__20885) : comp.call(null, G__20884, G__20885);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20887 = cljs.core.seq(coll);
  var chunk__20888 = null;
  var count__20889 = 0;
  var i__20890 = 0;
  while (true) {
    if (i__20890 < count__20889) {
      var vec__20891 = chunk__20888.cljs$core$IIndexed$_nth$arity$2(null, i__20890);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20891, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20891, 1, null);
      var G__20892_20904 = v;
      var G__20893_20905 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20892_20904, G__20893_20905) : f.call(null, G__20892_20904, G__20893_20905);
      var G__20906 = seq__20887;
      var G__20907 = chunk__20888;
      var G__20908 = count__20889;
      var G__20909 = i__20890 + 1;
      seq__20887 = G__20906;
      chunk__20888 = G__20907;
      count__20889 = G__20908;
      i__20890 = G__20909;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20887);
      if (temp__4126__auto__) {
        var seq__20887__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20887__$1)) {
          var c__5142__auto__ = cljs.core.chunk_first(seq__20887__$1);
          var G__20910 = cljs.core.chunk_rest(seq__20887__$1);
          var G__20911 = c__5142__auto__;
          var G__20912 = cljs.core.count(c__5142__auto__);
          var G__20913 = 0;
          seq__20887 = G__20910;
          chunk__20888 = G__20911;
          count__20889 = G__20912;
          i__20890 = G__20913;
          continue;
        } else {
          var vec__20894 = cljs.core.first(seq__20887__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20894, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20894, 1, null);
          var G__20895_20914 = v;
          var G__20896_20915 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20895_20914, G__20896_20915) : f.call(null, G__20895_20914, G__20896_20915);
          var G__20916 = cljs.core.next(seq__20887__$1);
          var G__20917 = null;
          var G__20918 = 0;
          var G__20919 = 0;
          seq__20887 = G__20916;
          chunk__20888 = G__20917;
          count__20889 = G__20918;
          i__20890 = G__20919;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20897 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__20897) : cljs.core.keys.call(null, G__20897);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20898 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__20898) : cljs.core.vals.call(null, G__20898);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__20899 = k;
        var G__20900 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__20899, G__20900) : self__.comp.call(null, G__20899, G__20900);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__20920 = t.left;
          t = G__20920;
          continue;
        } else {
          var G__20921 = t.right;
          t = G__20921;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20922 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20923 = cljs.core.next(es);
          ret = G__20922;
          es = G__20923;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__20924 = null;
  var G__20924__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20924__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20924 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20924__2.call(this, self__, k);
      case 3:
        return G__20924__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20924.cljs$core$IFn$_invoke$arity$2 = G__20924__2;
  G__20924.cljs$core$IFn$_invoke$arity$3 = G__20924__3;
  return G__20924;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args20886) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20886)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__20901 = k;
          var G__20902 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__20901, G__20902) : self__.comp.call(null, G__20901, G__20902);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__20925 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__20926 = t.left;
              stack = G__20925;
              t = G__20926;
              continue;
            } else {
              var G__20927 = stack;
              var G__20928 = t.right;
              stack = G__20927;
              t = G__20928;
              continue;
            }
          } else {
            if (c > 0) {
              var G__20929 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__20930 = t.right;
              stack = G__20929;
              t = G__20930;
              continue;
            } else {
              var G__20931 = stack;
              var G__20932 = t.left;
              stack = G__20931;
              t = G__20932;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__20903 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20903) : cljs.core.key.call(null, G__20903);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map() {
  var argseq__5397__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5397__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__20934 = cljs.core.nnext(in$);
      var G__20935 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__20934;
      out = G__20935;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq20933) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20933));
};
cljs.core.array_map = function cljs$core$array_map() {
  var argseq__5397__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5397__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq20936) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20936));
};
cljs.core.obj_map = function cljs$core$obj_map() {
  var argseq__5397__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5397__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = function() {
    var obj20939 = {};
    return obj20939;
  }();
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__20940 = cljs.core.nnext(kvs);
      kvs = G__20940;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq20937) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20937));
};
cljs.core.sorted_map = function cljs$core$sorted_map() {
  var argseq__5397__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5397__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__20942 = cljs.core.nnext(in$);
      var G__20943 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__20942;
      out = G__20943;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq20941) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20941));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by() {
  var argseq__5397__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5397__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__20946 = cljs.core.nnext(in$);
      var G__20947 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__20946;
      out = G__20947;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq20944) {
  var G__20945 = cljs.core.first(seq20944);
  var seq20944__$1 = cljs.core.next(seq20944);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__20945, seq20944__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20948 = self__.mseq;
    if (G__20948) {
      var bit__5031__auto__ = G__20948.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__5031__auto__ || G__20948.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20948.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20948);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20948);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20949 = self__.mseq;
    if (G__20949) {
      var bit__5031__auto__ = G__20949.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__5031__auto__ || G__20949.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20949.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20949);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20949);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20950 = self__.mseq;
    if (G__20950) {
      var bit__5031__auto__ = G__20950.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__5031__auto__ || G__20950.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20950.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20950);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20950);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20951 = self__.mseq;
    if (G__20951) {
      var bit__5031__auto__ = G__20951.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__5031__auto__ || G__20951.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20951.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20951);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20951);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge() {
  var argseq__5397__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5397__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__20952_SHARP_, p2__20953_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4357__auto__ = p1__20952_SHARP_;
        if (cljs.core.truth_(or__4357__auto__)) {
          return or__4357__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__20953_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq20954) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20954));
};
cljs.core.merge_with = function cljs$core$merge_with() {
  var argseq__5397__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5397__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__20957 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__20958 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20957, G__20958) : f.call(null, G__20957, G__20958);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4357__auto__ = m1;
          if (cljs.core.truth_(or__4357__auto__)) {
            return or__4357__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq20955) {
  var G__20956 = cljs.core.first(seq20955);
  var seq20955__$1 = cljs.core.next(seq20955);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__20956, seq20955__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__20959 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__20960 = cljs.core.next(keys);
      ret = G__20959;
      keys = G__20960;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20963 = cljs.core.seq(coll);
  var chunk__20964 = null;
  var count__20965 = 0;
  var i__20966 = 0;
  while (true) {
    if (i__20966 < count__20965) {
      var vec__20967 = chunk__20964.cljs$core$IIndexed$_nth$arity$2(null, i__20966);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20967, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20967, 1, null);
      var G__20968_20973 = v;
      var G__20969_20974 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20968_20973, G__20969_20974) : f.call(null, G__20968_20973, G__20969_20974);
      var G__20975 = seq__20963;
      var G__20976 = chunk__20964;
      var G__20977 = count__20965;
      var G__20978 = i__20966 + 1;
      seq__20963 = G__20975;
      chunk__20964 = G__20976;
      count__20965 = G__20977;
      i__20966 = G__20978;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20963);
      if (temp__4126__auto__) {
        var seq__20963__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20963__$1)) {
          var c__5142__auto__ = cljs.core.chunk_first(seq__20963__$1);
          var G__20979 = cljs.core.chunk_rest(seq__20963__$1);
          var G__20980 = c__5142__auto__;
          var G__20981 = cljs.core.count(c__5142__auto__);
          var G__20982 = 0;
          seq__20963 = G__20979;
          chunk__20964 = G__20980;
          count__20965 = G__20981;
          i__20966 = G__20982;
          continue;
        } else {
          var vec__20970 = cljs.core.first(seq__20963__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20970, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20970, 1, null);
          var G__20971_20983 = v;
          var G__20972_20984 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20971_20983, G__20972_20984) : f.call(null, G__20971_20983, G__20972_20984);
          var G__20985 = cljs.core.next(seq__20963__$1);
          var G__20986 = null;
          var G__20987 = 0;
          var G__20988 = 0;
          seq__20963 = G__20985;
          chunk__20964 = G__20986;
          count__20965 = G__20987;
          i__20966 = G__20988;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__20961_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__20961_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__20989 = null;
  var G__20989__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20989__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20989 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20989__2.call(this, self__, k);
      case 3:
        return G__20989__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20989.cljs$core$IFn$_invoke$arity$2 = G__20989__2;
  G__20989.cljs$core$IFn$_invoke$arity$3 = G__20989__3;
  return G__20989;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args20962) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20962)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__20990 = i + 1;
        var G__20991 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__20990;
        out = G__20991;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__20992 = i + 1;
        var G__20993 = cljs.core._conj_BANG_(out, items[i]);
        i = G__20992;
        out = G__20993;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__20995 = null;
  var G__20995__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__20995__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__20995 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20995__2.call(this, self__, k);
      case 3:
        return G__20995__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20995.cljs$core$IFn$_invoke$arity$2 = G__20995__2;
  G__20995.cljs$core$IFn$_invoke$arity$3 = G__20995__3;
  return G__20995;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args20994) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20994)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20998 = cljs.core.seq(coll);
  var chunk__20999 = null;
  var count__21000 = 0;
  var i__21001 = 0;
  while (true) {
    if (i__21001 < count__21000) {
      var vec__21002 = chunk__20999.cljs$core$IIndexed$_nth$arity$2(null, i__21001);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21002, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21002, 1, null);
      var G__21003_21008 = v;
      var G__21004_21009 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21003_21008, G__21004_21009) : f.call(null, G__21003_21008, G__21004_21009);
      var G__21010 = seq__20998;
      var G__21011 = chunk__20999;
      var G__21012 = count__21000;
      var G__21013 = i__21001 + 1;
      seq__20998 = G__21010;
      chunk__20999 = G__21011;
      count__21000 = G__21012;
      i__21001 = G__21013;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20998);
      if (temp__4126__auto__) {
        var seq__20998__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20998__$1)) {
          var c__5142__auto__ = cljs.core.chunk_first(seq__20998__$1);
          var G__21014 = cljs.core.chunk_rest(seq__20998__$1);
          var G__21015 = c__5142__auto__;
          var G__21016 = cljs.core.count(c__5142__auto__);
          var G__21017 = 0;
          seq__20998 = G__21014;
          chunk__20999 = G__21015;
          count__21000 = G__21016;
          i__21001 = G__21017;
          continue;
        } else {
          var vec__21005 = cljs.core.first(seq__20998__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21005, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21005, 1, null);
          var G__21006_21018 = v;
          var G__21007_21019 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21006_21018, G__21007_21019) : f.call(null, G__21006_21018, G__21007_21019);
          var G__21020 = cljs.core.next(seq__20998__$1);
          var G__21021 = null;
          var G__21022 = 0;
          var G__21023 = 0;
          seq__20998 = G__21020;
          chunk__20999 = G__21021;
          count__21000 = G__21022;
          i__21001 = G__21023;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__20996_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__20996_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__21024 = null;
  var G__21024__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21024__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21024 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21024__2.call(this, self__, k);
      case 3:
        return G__21024__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21024.cljs$core$IFn$_invoke$arity$2 = G__21024__2;
  G__21024.cljs$core$IFn$_invoke$arity$3 = G__21024__3;
  return G__21024;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args20997) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20997)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5236__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5236__auto__.length) {
        var G__21025 = i + 1;
        var G__21026 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__21025;
        res = G__21026;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__21027 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__21028 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__21027;
          out = G__21028;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set() {
  var G__21031 = arguments.length;
  switch(G__21031) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5408__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq21029) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq21029));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set() {
  var argseq__5397__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5397__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq21033) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq21033));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by() {
  var argseq__5397__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5397__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq21034) {
  var G__21035 = cljs.core.first(seq21034);
  var seq21034__$1 = cljs.core.next(seq21034);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__21035, seq21034__$1);
};
cljs.core.replace = function cljs$core$replace() {
  var G__21039 = arguments.length;
  switch(G__21039) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__21036_SHARP_) {
    var temp__4124__auto__ = cljs.core.find(smap, p1__21036_SHARP_);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var e = temp__4124__auto__;
      return cljs.core.val(e);
    } else {
      return p1__21036_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__21037_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__21037_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.second(e);
      } else {
        return p1__21037_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct() {
  var G__21042 = arguments.length;
  switch(G__21042) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__21054 = null;
        var G__21054__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__21054__1 = function(result) {
          var G__21043 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21043) : rf.call(null, G__21043);
        };
        var G__21054__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(function() {
            var G__21044 = seen;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21044) : cljs.core.deref.call(null, G__21044);
          }(), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            var G__21045 = result;
            var G__21046 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21045, G__21046) : rf.call(null, G__21045, G__21046);
          }
        };
        G__21054 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__21054__0.call(this);
            case 1:
              return G__21054__1.call(this, result);
            case 2:
              return G__21054__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__21054.cljs$core$IFn$_invoke$arity$0 = G__21054__0;
        G__21054.cljs$core$IFn$_invoke$arity$1 = G__21054__1;
        G__21054.cljs$core$IFn$_invoke$arity$2 = G__21054__2;
        return G__21054;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__21051, seen__$1) {
        while (true) {
          var vec__21052 = p__21051;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21052, 0, null);
          var xs__$1 = vec__21052;
          var temp__4126__auto__ = cljs.core.seq(xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__21055 = cljs.core.rest(s);
              var G__21056 = seen__$1;
              p__21051 = G__21055;
              seen__$1 = G__21056;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__21057 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__21058 = cljs.core.next(s__$1);
      ret = G__21057;
      s__$1 = G__21058;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (function() {
    var G__21060 = x;
    if (G__21060) {
      var bit__5024__auto__ = G__21060.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__5024__auto__ || G__21060.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__21061 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__21062 = cljs.core.next(ks);
      var G__21063 = cljs.core.next(vs);
      map = G__21061;
      ks = G__21062;
      vs = G__21063;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key() {
  var G__21071 = arguments.length;
  switch(G__21071) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5408__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if (function() {
    var G__21072 = x;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__21072) : k.call(null, G__21072);
  }() > function() {
    var G__21073 = y;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__21073) : k.call(null, G__21073);
  }()) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__21064_SHARP_, p2__21065_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__21064_SHARP_, p2__21065_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq21066) {
  var G__21067 = cljs.core.first(seq21066);
  var seq21066__$1 = cljs.core.next(seq21066);
  var G__21068 = cljs.core.first(seq21066__$1);
  var seq21066__$2 = cljs.core.next(seq21066__$1);
  var G__21069 = cljs.core.first(seq21066__$2);
  var seq21066__$3 = cljs.core.next(seq21066__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__21067, G__21068, G__21069, seq21066__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key() {
  var G__21082 = arguments.length;
  switch(G__21082) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5408__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if (function() {
    var G__21083 = x;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__21083) : k.call(null, G__21083);
  }() < function() {
    var G__21084 = y;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__21084) : k.call(null, G__21084);
  }()) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__21075_SHARP_, p2__21076_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__21075_SHARP_, p2__21076_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq21077) {
  var G__21078 = cljs.core.first(seq21077);
  var seq21077__$1 = cljs.core.next(seq21077);
  var G__21079 = cljs.core.first(seq21077__$1);
  var seq21077__$2 = cljs.core.next(seq21077__$1);
  var G__21080 = cljs.core.first(seq21077__$2);
  var seq21077__$3 = cljs.core.next(seq21077__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__21078, G__21079, G__21080, seq21077__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all() {
  var G__21087 = arguments.length;
  switch(G__21087) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__21094 = null;
        var G__21094__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__21094__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(function() {
              var G__21088 = result;
              var G__21089 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21088, G__21089) : rf.call(null, G__21088, G__21089);
            }());
          }();
          var G__21090 = result__$1;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21090) : rf.call(null, G__21090);
        };
        var G__21094__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var G__21091 = result;
            var G__21092 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21091, G__21092) : rf.call(null, G__21091, G__21092);
          } else {
            return result;
          }
        };
        G__21094 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__21094__0.call(this);
            case 1:
              return G__21094__1.call(this, result);
            case 2:
              return G__21094__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__21094.cljs$core$IFn$_invoke$arity$0 = G__21094__0;
        G__21094.cljs$core$IFn$_invoke$arity$1 = G__21094__1;
        G__21094.cljs$core$IFn$_invoke$arity$2 = G__21094__2;
        return G__21094;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while() {
  var G__21096 = arguments.length;
  switch(G__21096) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__21103 = null;
      var G__21103__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__21103__1 = function(result) {
        var G__21097 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21097) : rf.call(null, G__21097);
      };
      var G__21103__2 = function(result, input) {
        if (cljs.core.truth_(function() {
          var G__21098 = input;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21098) : pred.call(null, G__21098);
        }())) {
          var G__21099 = result;
          var G__21100 = input;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21099, G__21100) : rf.call(null, G__21099, G__21100);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__21103 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__21103__0.call(this);
          case 1:
            return G__21103__1.call(this, result);
          case 2:
            return G__21103__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21103.cljs$core$IFn$_invoke$arity$0 = G__21103__0;
      G__21103.cljs$core$IFn$_invoke$arity$1 = G__21103__1;
      G__21103.cljs$core$IFn$_invoke$arity$2 = G__21103__2;
      return G__21103;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.truth_(function() {
        var G__21101 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21101) : pred.call(null, G__21101);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__21108 = function() {
      var G__21110 = cljs.core._entry_key(sc, e);
      var G__21111 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21110, G__21111) : comp.call(null, G__21110, G__21111);
    }();
    var G__21109 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__21108, G__21109) : test.call(null, G__21108, G__21109);
  };
};
cljs.core.subseq = function cljs$core$subseq() {
  var G__21113 = arguments.length;
  switch(G__21113) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__21114 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21114, 0, null);
      var s = vec__21114;
      if (cljs.core.truth_(function() {
        var G__21115 = e;
        return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__21115) : include.call(null, G__21115);
      }())) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var vec__21116 = temp__4126__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21116, 0, null);
    var s = vec__21116;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq() {
  var G__21119 = arguments.length;
  switch(G__21119) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__21120 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21120, 0, null);
      var s = vec__21120;
      if (cljs.core.truth_(function() {
        var G__21121 = e;
        return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__21121) : include.call(null, G__21121);
      }())) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var vec__21122 = temp__4126__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21122, 0, null);
    var s = vec__21122;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__21124 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__21124) : Math.ceil.call(null, G__21124);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__21125 = ret;
        var G__21126 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21125, G__21126) : f.call(null, G__21125, G__21126);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__21127 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21127) : cljs.core.deref.call(null, G__21127);
      } else {
        var G__21128 = i + self__.step;
        var G__21129 = ret__$1;
        i = G__21128;
        ret = G__21129;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.range = function cljs$core$range() {
  var G__21131 = arguments.length;
  switch(G__21131) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth() {
  var G__21134 = arguments.length;
  switch(G__21134) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__21139 = null;
        var G__21139__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__21139__1 = function(result) {
          var G__21135 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21135) : rf.call(null, G__21135);
        };
        var G__21139__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            var G__21136 = result;
            var G__21137 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21136, G__21137) : rf.call(null, G__21136, G__21137);
          } else {
            return result;
          }
        };
        G__21139 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__21139__0.call(this);
            case 1:
              return G__21139__1.call(this, result);
            case 2:
              return G__21139__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__21139.cljs$core$IFn$_invoke$arity$0 = G__21139__0;
        G__21139.cljs$core$IFn$_invoke$arity$1 = G__21139__1;
        G__21139.cljs$core$IFn$_invoke$arity$2 = G__21139__2;
        return G__21139;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by() {
  var G__21142 = arguments.length;
  switch(G__21142) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__21153 = null;
        var G__21153__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__21153__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(function() {
              var G__21143 = result;
              var G__21144 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21143, G__21144) : rf.call(null, G__21143, G__21144);
            }());
          }();
          var G__21145 = result__$1;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21145) : rf.call(null, G__21145);
        };
        var G__21153__2 = function(result, input) {
          var pval = function() {
            var G__21146 = pa;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21146) : cljs.core.deref.call(null, G__21146);
          }();
          var val = function() {
            var G__21147 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21147) : f.call(null, G__21147);
          }();
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = function() {
              var G__21148 = result;
              var G__21149 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21148, G__21149) : rf.call(null, G__21148, G__21149);
            }();
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__21153 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__21153__0.call(this);
            case 1:
              return G__21153__1.call(this, result);
            case 2:
              return G__21153__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__21153.cljs$core$IFn$_invoke$arity$0 = G__21153__0;
        G__21153.cljs$core$IFn$_invoke$arity$1 = G__21153__1;
        G__21153.cljs$core$IFn$_invoke$arity$2 = G__21153__2;
        return G__21153;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      var fst = cljs.core.first(s);
      var fv = function() {
        var G__21150 = fst;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21150) : f.call(null, G__21150);
      }();
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
        return function(p1__21140_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
            var G__21151 = p1__21140_SHARP_;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21151) : f.call(null, G__21151);
          }());
        };
      }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions() {
  var G__21155 = arguments.length;
  switch(G__21155) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__21156 = init;
        var G__21157 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21156, G__21157) : f.call(null, G__21156, G__21157);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt() {
  var G__21174 = arguments.length;
  switch(G__21174) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5408__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__21218 = null;
    var G__21218__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }()], null);
    };
    var G__21218__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__21175 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21175) : f.call(null, G__21175);
      }()], null);
    };
    var G__21218__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__21176 = x;
        var G__21177 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21176, G__21177) : f.call(null, G__21176, G__21177);
      }()], null);
    };
    var G__21218__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__21178 = x;
        var G__21179 = y;
        var G__21180 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21178, G__21179, G__21180) : f.call(null, G__21178, G__21179, G__21180);
      }()], null);
    };
    var G__21218__4 = function() {
      var G__21219__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__21219 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21220__i = 0, G__21220__a = new Array(arguments.length - 3);
          while (G__21220__i < G__21220__a.length) {
            G__21220__a[G__21220__i] = arguments[G__21220__i + 3];
            ++G__21220__i;
          }
          args = new cljs.core.IndexedSeq(G__21220__a, 0);
        }
        return G__21219__delegate.call(this, x, y, z, args);
      };
      G__21219.cljs$lang$maxFixedArity = 3;
      G__21219.cljs$lang$applyTo = function(arglist__21221) {
        var x = cljs.core.first(arglist__21221);
        arglist__21221 = cljs.core.next(arglist__21221);
        var y = cljs.core.first(arglist__21221);
        arglist__21221 = cljs.core.next(arglist__21221);
        var z = cljs.core.first(arglist__21221);
        var args = cljs.core.rest(arglist__21221);
        return G__21219__delegate(x, y, z, args);
      };
      G__21219.cljs$core$IFn$_invoke$arity$variadic = G__21219__delegate;
      return G__21219;
    }();
    G__21218 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__21218__0.call(this);
        case 1:
          return G__21218__1.call(this, x);
        case 2:
          return G__21218__2.call(this, x, y);
        case 3:
          return G__21218__3.call(this, x, y, z);
        default:
          var G__21222 = null;
          if (arguments.length > 3) {
            var G__21223__i = 0, G__21223__a = new Array(arguments.length - 3);
            while (G__21223__i < G__21223__a.length) {
              G__21223__a[G__21223__i] = arguments[G__21223__i + 3];
              ++G__21223__i;
            }
            G__21222 = new cljs.core.IndexedSeq(G__21223__a, 0);
          }
          return G__21218__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21222);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21218.cljs$lang$maxFixedArity = 3;
    G__21218.cljs$lang$applyTo = G__21218__4.cljs$lang$applyTo;
    G__21218.cljs$core$IFn$_invoke$arity$0 = G__21218__0;
    G__21218.cljs$core$IFn$_invoke$arity$1 = G__21218__1;
    G__21218.cljs$core$IFn$_invoke$arity$2 = G__21218__2;
    G__21218.cljs$core$IFn$_invoke$arity$3 = G__21218__3;
    G__21218.cljs$core$IFn$_invoke$arity$variadic = G__21218__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__21218;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__21224 = null;
    var G__21224__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }()], null);
    };
    var G__21224__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__21181 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21181) : f.call(null, G__21181);
      }(), function() {
        var G__21182 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21182) : g.call(null, G__21182);
      }()], null);
    };
    var G__21224__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__21183 = x;
        var G__21184 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21183, G__21184) : f.call(null, G__21183, G__21184);
      }(), function() {
        var G__21185 = x;
        var G__21186 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__21185, G__21186) : g.call(null, G__21185, G__21186);
      }()], null);
    };
    var G__21224__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__21187 = x;
        var G__21188 = y;
        var G__21189 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21187, G__21188, G__21189) : f.call(null, G__21187, G__21188, G__21189);
      }(), function() {
        var G__21190 = x;
        var G__21191 = y;
        var G__21192 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__21190, G__21191, G__21192) : g.call(null, G__21190, G__21191, G__21192);
      }()], null);
    };
    var G__21224__4 = function() {
      var G__21225__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__21225 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21226__i = 0, G__21226__a = new Array(arguments.length - 3);
          while (G__21226__i < G__21226__a.length) {
            G__21226__a[G__21226__i] = arguments[G__21226__i + 3];
            ++G__21226__i;
          }
          args = new cljs.core.IndexedSeq(G__21226__a, 0);
        }
        return G__21225__delegate.call(this, x, y, z, args);
      };
      G__21225.cljs$lang$maxFixedArity = 3;
      G__21225.cljs$lang$applyTo = function(arglist__21227) {
        var x = cljs.core.first(arglist__21227);
        arglist__21227 = cljs.core.next(arglist__21227);
        var y = cljs.core.first(arglist__21227);
        arglist__21227 = cljs.core.next(arglist__21227);
        var z = cljs.core.first(arglist__21227);
        var args = cljs.core.rest(arglist__21227);
        return G__21225__delegate(x, y, z, args);
      };
      G__21225.cljs$core$IFn$_invoke$arity$variadic = G__21225__delegate;
      return G__21225;
    }();
    G__21224 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__21224__0.call(this);
        case 1:
          return G__21224__1.call(this, x);
        case 2:
          return G__21224__2.call(this, x, y);
        case 3:
          return G__21224__3.call(this, x, y, z);
        default:
          var G__21228 = null;
          if (arguments.length > 3) {
            var G__21229__i = 0, G__21229__a = new Array(arguments.length - 3);
            while (G__21229__i < G__21229__a.length) {
              G__21229__a[G__21229__i] = arguments[G__21229__i + 3];
              ++G__21229__i;
            }
            G__21228 = new cljs.core.IndexedSeq(G__21229__a, 0);
          }
          return G__21224__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21228);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21224.cljs$lang$maxFixedArity = 3;
    G__21224.cljs$lang$applyTo = G__21224__4.cljs$lang$applyTo;
    G__21224.cljs$core$IFn$_invoke$arity$0 = G__21224__0;
    G__21224.cljs$core$IFn$_invoke$arity$1 = G__21224__1;
    G__21224.cljs$core$IFn$_invoke$arity$2 = G__21224__2;
    G__21224.cljs$core$IFn$_invoke$arity$3 = G__21224__3;
    G__21224.cljs$core$IFn$_invoke$arity$variadic = G__21224__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__21224;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__21230 = null;
    var G__21230__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }(), function() {
        return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
      }()], null);
    };
    var G__21230__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__21193 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21193) : f.call(null, G__21193);
      }(), function() {
        var G__21194 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21194) : g.call(null, G__21194);
      }(), function() {
        var G__21195 = x;
        return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__21195) : h.call(null, G__21195);
      }()], null);
    };
    var G__21230__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__21196 = x;
        var G__21197 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21196, G__21197) : f.call(null, G__21196, G__21197);
      }(), function() {
        var G__21198 = x;
        var G__21199 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__21198, G__21199) : g.call(null, G__21198, G__21199);
      }(), function() {
        var G__21200 = x;
        var G__21201 = y;
        return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__21200, G__21201) : h.call(null, G__21200, G__21201);
      }()], null);
    };
    var G__21230__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__21202 = x;
        var G__21203 = y;
        var G__21204 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21202, G__21203, G__21204) : f.call(null, G__21202, G__21203, G__21204);
      }(), function() {
        var G__21205 = x;
        var G__21206 = y;
        var G__21207 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__21205, G__21206, G__21207) : g.call(null, G__21205, G__21206, G__21207);
      }(), function() {
        var G__21208 = x;
        var G__21209 = y;
        var G__21210 = z;
        return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__21208, G__21209, G__21210) : h.call(null, G__21208, G__21209, G__21210);
      }()], null);
    };
    var G__21230__4 = function() {
      var G__21231__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__21231 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21232__i = 0, G__21232__a = new Array(arguments.length - 3);
          while (G__21232__i < G__21232__a.length) {
            G__21232__a[G__21232__i] = arguments[G__21232__i + 3];
            ++G__21232__i;
          }
          args = new cljs.core.IndexedSeq(G__21232__a, 0);
        }
        return G__21231__delegate.call(this, x, y, z, args);
      };
      G__21231.cljs$lang$maxFixedArity = 3;
      G__21231.cljs$lang$applyTo = function(arglist__21233) {
        var x = cljs.core.first(arglist__21233);
        arglist__21233 = cljs.core.next(arglist__21233);
        var y = cljs.core.first(arglist__21233);
        arglist__21233 = cljs.core.next(arglist__21233);
        var z = cljs.core.first(arglist__21233);
        var args = cljs.core.rest(arglist__21233);
        return G__21231__delegate(x, y, z, args);
      };
      G__21231.cljs$core$IFn$_invoke$arity$variadic = G__21231__delegate;
      return G__21231;
    }();
    G__21230 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__21230__0.call(this);
        case 1:
          return G__21230__1.call(this, x);
        case 2:
          return G__21230__2.call(this, x, y);
        case 3:
          return G__21230__3.call(this, x, y, z);
        default:
          var G__21234 = null;
          if (arguments.length > 3) {
            var G__21235__i = 0, G__21235__a = new Array(arguments.length - 3);
            while (G__21235__i < G__21235__a.length) {
              G__21235__a[G__21235__i] = arguments[G__21235__i + 3];
              ++G__21235__i;
            }
            G__21234 = new cljs.core.IndexedSeq(G__21235__a, 0);
          }
          return G__21230__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21234);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21230.cljs$lang$maxFixedArity = 3;
    G__21230.cljs$lang$applyTo = G__21230__4.cljs$lang$applyTo;
    G__21230.cljs$core$IFn$_invoke$arity$0 = G__21230__0;
    G__21230.cljs$core$IFn$_invoke$arity$1 = G__21230__1;
    G__21230.cljs$core$IFn$_invoke$arity$2 = G__21230__2;
    G__21230.cljs$core$IFn$_invoke$arity$3 = G__21230__3;
    G__21230.cljs$core$IFn$_invoke$arity$variadic = G__21230__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__21230;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__21236 = null;
      var G__21236__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__21159_SHARP_, p2__21160_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__21159_SHARP_, function() {
              return p2__21160_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__21160_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__21160_SHARP_.call(null);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__21236__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__21161_SHARP_, p2__21162_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__21161_SHARP_, function() {
              var G__21211 = x;
              return p2__21162_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__21162_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21211) : p2__21162_SHARP_.call(null, G__21211);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__21236__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__21163_SHARP_, p2__21164_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__21163_SHARP_, function() {
              var G__21212 = x;
              var G__21213 = y;
              return p2__21164_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__21164_SHARP_.cljs$core$IFn$_invoke$arity$2(G__21212, G__21213) : p2__21164_SHARP_.call(null, G__21212, G__21213);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__21236__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__21165_SHARP_, p2__21166_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__21165_SHARP_, function() {
              var G__21214 = x;
              var G__21215 = y;
              var G__21216 = z;
              return p2__21166_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__21166_SHARP_.cljs$core$IFn$_invoke$arity$3(G__21214, G__21215, G__21216) : p2__21166_SHARP_.call(null, G__21214, G__21215, G__21216);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__21236__4 = function() {
        var G__21237__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__21167_SHARP_, p2__21168_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__21167_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__21168_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__21237 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__21238__i = 0, G__21238__a = new Array(arguments.length - 3);
            while (G__21238__i < G__21238__a.length) {
              G__21238__a[G__21238__i] = arguments[G__21238__i + 3];
              ++G__21238__i;
            }
            args = new cljs.core.IndexedSeq(G__21238__a, 0);
          }
          return G__21237__delegate.call(this, x, y, z, args);
        };
        G__21237.cljs$lang$maxFixedArity = 3;
        G__21237.cljs$lang$applyTo = function(arglist__21239) {
          var x = cljs.core.first(arglist__21239);
          arglist__21239 = cljs.core.next(arglist__21239);
          var y = cljs.core.first(arglist__21239);
          arglist__21239 = cljs.core.next(arglist__21239);
          var z = cljs.core.first(arglist__21239);
          var args = cljs.core.rest(arglist__21239);
          return G__21237__delegate(x, y, z, args);
        };
        G__21237.cljs$core$IFn$_invoke$arity$variadic = G__21237__delegate;
        return G__21237;
      }();
      G__21236 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__21236__0.call(this);
          case 1:
            return G__21236__1.call(this, x);
          case 2:
            return G__21236__2.call(this, x, y);
          case 3:
            return G__21236__3.call(this, x, y, z);
          default:
            var G__21240 = null;
            if (arguments.length > 3) {
              var G__21241__i = 0, G__21241__a = new Array(arguments.length - 3);
              while (G__21241__i < G__21241__a.length) {
                G__21241__a[G__21241__i] = arguments[G__21241__i + 3];
                ++G__21241__i;
              }
              G__21240 = new cljs.core.IndexedSeq(G__21241__a, 0);
            }
            return G__21236__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21240);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21236.cljs$lang$maxFixedArity = 3;
      G__21236.cljs$lang$applyTo = G__21236__4.cljs$lang$applyTo;
      G__21236.cljs$core$IFn$_invoke$arity$0 = G__21236__0;
      G__21236.cljs$core$IFn$_invoke$arity$1 = G__21236__1;
      G__21236.cljs$core$IFn$_invoke$arity$2 = G__21236__2;
      G__21236.cljs$core$IFn$_invoke$arity$3 = G__21236__3;
      G__21236.cljs$core$IFn$_invoke$arity$variadic = G__21236__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__21236;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq21169) {
  var G__21170 = cljs.core.first(seq21169);
  var seq21169__$1 = cljs.core.next(seq21169);
  var G__21171 = cljs.core.first(seq21169__$1);
  var seq21169__$2 = cljs.core.next(seq21169__$1);
  var G__21172 = cljs.core.first(seq21169__$2);
  var seq21169__$3 = cljs.core.next(seq21169__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__21170, G__21171, G__21172, seq21169__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun() {
  var G__21243 = arguments.length;
  switch(G__21243) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__21245 = cljs.core.next(coll);
      coll = G__21245;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__21246 = n - 1;
      var G__21247 = cljs.core.next(coll);
      n = G__21246;
      coll = G__21247;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall() {
  var G__21249 = arguments.length;
  switch(G__21249) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__21254 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21254, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21254, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4357__auto__ = flags;
      if (cljs.core.truth_(or__4357__auto__)) {
        return or__4357__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_21262 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4357__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4357__auto__)) {
              return or__4357__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__21263_21269 = cljs.core.first(coll);
          var G__21264_21270 = writer;
          var G__21265_21271 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__21263_21269, G__21264_21270, G__21265_21271) : print_one.call(null, G__21263_21269, G__21264_21270, G__21265_21271);
        } else {
        }
        var coll_21272__$1 = cljs.core.next(coll);
        var n_21273 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_21272__$1 && (n_21273 == null || !(n_21273 === 0))) {
            cljs.core._write(writer, sep);
            var G__21266_21274 = cljs.core.first(coll_21272__$1);
            var G__21267_21275 = writer;
            var G__21268_21276 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__21266_21274, G__21267_21275, G__21268_21276) : print_one.call(null, G__21266_21274, G__21267_21275, G__21268_21276);
            var G__21277 = cljs.core.next(coll_21272__$1);
            var G__21278 = n_21273 - 1;
            coll_21272__$1 = G__21277;
            n_21273 = G__21278;
            continue;
          } else {
            if (cljs.core.seq(coll_21272__$1) && n_21273 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4357__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4357__auto__)) {
                  return or__4357__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_21262;
  }
};
cljs.core.write_all = function cljs$core$write_all() {
  var argseq__5397__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5397__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__21281 = cljs.core.seq(ss);
  var chunk__21282 = null;
  var count__21283 = 0;
  var i__21284 = 0;
  while (true) {
    if (i__21284 < count__21283) {
      var s = chunk__21282.cljs$core$IIndexed$_nth$arity$2(null, i__21284);
      cljs.core._write(writer, s);
      var G__21285 = seq__21281;
      var G__21286 = chunk__21282;
      var G__21287 = count__21283;
      var G__21288 = i__21284 + 1;
      seq__21281 = G__21285;
      chunk__21282 = G__21286;
      count__21283 = G__21287;
      i__21284 = G__21288;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__21281);
      if (temp__4126__auto__) {
        var seq__21281__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__21281__$1)) {
          var c__5142__auto__ = cljs.core.chunk_first(seq__21281__$1);
          var G__21289 = cljs.core.chunk_rest(seq__21281__$1);
          var G__21290 = c__5142__auto__;
          var G__21291 = cljs.core.count(c__5142__auto__);
          var G__21292 = 0;
          seq__21281 = G__21289;
          chunk__21282 = G__21290;
          count__21283 = G__21291;
          i__21284 = G__21292;
          continue;
        } else {
          var s = cljs.core.first(seq__21281__$1);
          cljs.core._write(writer, s);
          var G__21293 = cljs.core.next(seq__21281__$1);
          var G__21294 = null;
          var G__21295 = 0;
          var G__21296 = 0;
          seq__21281 = G__21293;
          chunk__21282 = G__21294;
          count__21283 = G__21295;
          i__21284 = G__21296;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq21279) {
  var G__21280 = cljs.core.first(seq21279);
  var seq21279__$1 = cljs.core.next(seq21279);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__21280, seq21279__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj21298 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj21298;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__21301 = '[\\\\"\b\f\n\r\t]';
    var G__21302 = "g";
    return RegExp(G__21301, G__21302);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__4345__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__4345__auto__)) {
          var and__4345__auto____$1 = function() {
            var G__21316 = obj;
            if (G__21316) {
              var bit__5031__auto__ = G__21316.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__5031__auto__ || G__21316.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__21316.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__21316);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__21316);
            }
          }();
          if (and__4345__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__4345__auto____$1;
          }
        } else {
          return and__4345__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__21317_21327 = cljs.core.meta(obj);
        var G__21318_21328 = writer;
        var G__21319_21329 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__21317_21327, G__21318_21328, G__21319_21329) : cljs.core.pr_writer.call(null, G__21317_21327, G__21318_21328, G__21319_21329);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__21320 = obj;
            if (G__21320) {
              var bit__5024__auto__ = G__21320.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__5024__auto__ || G__21320.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__21321 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__21322 = cljs.core.pr_writer;
                var G__21323 = writer;
                var G__21324 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__21321, G__21322, G__21323, G__21324) : cljs.core.print_map.call(null, G__21321, G__21322, G__21323, G__21324);
              } else {
                if (cljs.core.array_QMARK_(obj)) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__21325 = obj;
                    return goog.isString(G__21325);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__21330 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__21330;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.truth_(cljs.core.regexp_QMARK_(obj))) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__21326 = obj;
                            if (G__21326) {
                              var bit__5031__auto__ = G__21326.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__5031__auto__ || G__21326.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__21326.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__21326);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__21326);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4124__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var alt_impl = temp__4124__auto__;
    var G__21334 = obj;
    var G__21335 = writer;
    var G__21336 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__21334, G__21335, G__21336) : alt_impl.call(null, G__21334, G__21335, G__21336);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__21341 = cljs.core.seq(cljs.core.next(objs));
  var chunk__21342 = null;
  var count__21343 = 0;
  var i__21344 = 0;
  while (true) {
    if (i__21344 < count__21343) {
      var obj = chunk__21342.cljs$core$IIndexed$_nth$arity$2(null, i__21344);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__21345 = seq__21341;
      var G__21346 = chunk__21342;
      var G__21347 = count__21343;
      var G__21348 = i__21344 + 1;
      seq__21341 = G__21345;
      chunk__21342 = G__21346;
      count__21343 = G__21347;
      i__21344 = G__21348;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__21341);
      if (temp__4126__auto__) {
        var seq__21341__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__21341__$1)) {
          var c__5142__auto__ = cljs.core.chunk_first(seq__21341__$1);
          var G__21349 = cljs.core.chunk_rest(seq__21341__$1);
          var G__21350 = c__5142__auto__;
          var G__21351 = cljs.core.count(c__5142__auto__);
          var G__21352 = 0;
          seq__21341 = G__21349;
          chunk__21342 = G__21350;
          count__21343 = G__21351;
          i__21344 = G__21352;
          continue;
        } else {
          var obj = cljs.core.first(seq__21341__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__21353 = cljs.core.next(seq__21341__$1);
          var G__21354 = null;
          var G__21355 = 0;
          var G__21356 = 0;
          seq__21341 = G__21353;
          chunk__21342 = G__21354;
          count__21343 = G__21355;
          i__21344 = G__21356;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function cljs$core$pr_str() {
  var argseq__5397__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5397__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq21357) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq21357));
};
cljs.core.prn_str = function cljs$core$prn_str() {
  var argseq__5397__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5397__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq21358) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq21358));
};
cljs.core.pr = function cljs$core$pr() {
  var argseq__5397__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5397__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq21359) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq21359));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__21360__i = 0, G__21360__a = new Array(arguments.length - 0);
      while (G__21360__i < G__21360__a.length) {
        G__21360__a[G__21360__i] = arguments[G__21360__i + 0];
        ++G__21360__i;
      }
      objs = new cljs.core.IndexedSeq(G__21360__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__21361) {
    var objs = cljs.core.seq(arglist__21361);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str() {
  var argseq__5397__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5397__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq21362) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq21362));
};
cljs.core.println = function cljs$core$println() {
  var argseq__5397__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5397__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq21363) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq21363));
};
cljs.core.println_str = function cljs$core$println_str() {
  var argseq__5397__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5397__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq21364) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq21364));
};
cljs.core.prn = function cljs$core$prn() {
  var argseq__5397__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5397__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq21365) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq21365));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__21372_21378 = cljs.core.key(e);
    var G__21373_21379 = w;
    var G__21374_21380 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__21372_21378, G__21373_21379, G__21374_21380) : print_one.call(null, G__21372_21378, G__21373_21379, G__21374_21380);
    cljs.core._write(w, " ");
    var G__21375 = cljs.core.val(e);
    var G__21376 = w;
    var G__21377 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__21375, G__21376, G__21377) : print_one.call(null, G__21375, G__21376, G__21377);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_() {
  var argseq__5397__auto__ = 2 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5397__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq21381) {
  var G__21382 = cljs.core.first(seq21381);
  var seq21381__$1 = cljs.core.next(seq21381);
  var G__21383 = cljs.core.first(seq21381__$1);
  var seq21381__$2 = cljs.core.next(seq21381__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__21382, G__21383, seq21381__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym() {
  var G__21385 = arguments.length;
  switch(G__21385) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = function() {
      var G__21386 = 0;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__21386) : cljs.core.atom.call(null, G__21386);
    }();
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__21389 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21389) : cljs.core.deref.call(null, G__21389);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__21390_SHARP_, p2__21391_SHARP_) {
    var ret = function() {
      var G__21394 = p1__21390_SHARP_;
      var G__21395 = p2__21391_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21394, G__21395) : rf.call(null, G__21394, G__21395);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__21398 = null;
      var G__21398__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__21398__1 = function(result) {
        var G__21397 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21397) : rf.call(null, G__21397);
      };
      var G__21398__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__21398 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__21398__0.call(this);
          case 1:
            return G__21398__1.call(this, result);
          case 2:
            return G__21398__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21398.cljs$core$IFn$_invoke$arity$0 = G__21398__0;
      G__21398.cljs$core$IFn$_invoke$arity$1 = G__21398__1;
      G__21398.cljs$core$IFn$_invoke$arity$2 = G__21398__2;
      return G__21398;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe() {
  var G__21400 = arguments.length;
  switch(G__21400) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__21406 = null;
        var G__21406__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__21406__1 = function(result) {
          var G__21401 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21401) : rf.call(null, G__21401);
        };
        var G__21406__2 = function(result, input) {
          var prior = function() {
            var G__21402 = pa;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21402) : cljs.core.deref.call(null, G__21402);
          }();
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            var G__21403 = result;
            var G__21404 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21403, G__21404) : rf.call(null, G__21403, G__21404);
          }
        };
        G__21406 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__21406__0.call(this);
            case 1:
              return G__21406__1.call(this, result);
            case 2:
              return G__21406__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__21406.cljs$core$IFn$_invoke$arity$0 = G__21406__0;
        G__21406.cljs$core$IFn$_invoke$arity$1 = G__21406__1;
        G__21406.cljs$core$IFn$_invoke$arity$2 = G__21406__2;
        return G__21406;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample() {
  var G__21408 = arguments.length;
  switch(G__21408) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return function() {
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
    }() < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return function() {
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
    }() < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5333__auto__ = this;
  return cljs.core.es6_iterator(this__5333__auto__);
};
cljs.core.eduction = function cljs$core$eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__21411_SHARP_, p2__21410_SHARP_) {
    var G__21413 = p2__21410_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__21413) : proc.call(null, G__21413);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj21415 = {};
  return obj21415;
}();
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (function() {
    var and__4345__auto__ = x;
    if (and__4345__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4993__auto__ = x == null ? null : x;
    return function() {
      var or__4357__auto__ = cljs.core._clj__GT_js[function() {
        var G__21419 = x__4993__auto__;
        return goog.typeOf(G__21419);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (function() {
    var and__4345__auto__ = x;
    if (and__4345__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4993__auto__ = x == null ? null : x;
    return function() {
      var or__4357__auto__ = cljs.core._key__GT_js[function() {
        var G__21423 = x__4993__auto__;
        return goog.typeOf(G__21423);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (function() {
    var G__21426 = k;
    if (G__21426) {
      var bit__5031__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4357__auto__ = bit__5031__auto__;
        if (cljs.core.truth_(or__4357__auto__)) {
          return or__4357__auto__;
        } else {
          return G__21426.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__21426.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__21426);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__21426);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__21427 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__21427) : cljs.core.clj__GT_js.call(null, G__21427);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__21443 = x;
      if (G__21443) {
        var bit__5031__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__4357__auto__ = bit__5031__auto__;
          if (cljs.core.truth_(or__4357__auto__)) {
            return or__4357__auto__;
          } else {
            return G__21443.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__21443.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__21443);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__21443);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj21445 = {};
              return obj21445;
            }();
            var seq__21446_21456 = cljs.core.seq(x);
            var chunk__21447_21457 = null;
            var count__21448_21458 = 0;
            var i__21449_21459 = 0;
            while (true) {
              if (i__21449_21459 < count__21448_21458) {
                var vec__21450_21460 = chunk__21447_21457.cljs$core$IIndexed$_nth$arity$2(null, i__21449_21459);
                var k_21461 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21450_21460, 0, null);
                var v_21462 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21450_21460, 1, null);
                m[cljs.core.key__GT_js(k_21461)] = cljs$core$clj__GT_js(v_21462);
                var G__21463 = seq__21446_21456;
                var G__21464 = chunk__21447_21457;
                var G__21465 = count__21448_21458;
                var G__21466 = i__21449_21459 + 1;
                seq__21446_21456 = G__21463;
                chunk__21447_21457 = G__21464;
                count__21448_21458 = G__21465;
                i__21449_21459 = G__21466;
                continue;
              } else {
                var temp__4126__auto___21467 = cljs.core.seq(seq__21446_21456);
                if (temp__4126__auto___21467) {
                  var seq__21446_21468__$1 = temp__4126__auto___21467;
                  if (cljs.core.chunked_seq_QMARK_(seq__21446_21468__$1)) {
                    var c__5142__auto___21469 = cljs.core.chunk_first(seq__21446_21468__$1);
                    var G__21470 = cljs.core.chunk_rest(seq__21446_21468__$1);
                    var G__21471 = c__5142__auto___21469;
                    var G__21472 = cljs.core.count(c__5142__auto___21469);
                    var G__21473 = 0;
                    seq__21446_21456 = G__21470;
                    chunk__21447_21457 = G__21471;
                    count__21448_21458 = G__21472;
                    i__21449_21459 = G__21473;
                    continue;
                  } else {
                    var vec__21451_21474 = cljs.core.first(seq__21446_21468__$1);
                    var k_21475 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21451_21474, 0, null);
                    var v_21476 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21451_21474, 1, null);
                    m[cljs.core.key__GT_js(k_21475)] = cljs$core$clj__GT_js(v_21476);
                    var G__21477 = cljs.core.next(seq__21446_21468__$1);
                    var G__21478 = null;
                    var G__21479 = 0;
                    var G__21480 = 0;
                    seq__21446_21456 = G__21477;
                    chunk__21447_21457 = G__21478;
                    count__21448_21458 = G__21479;
                    i__21449_21459 = G__21480;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__21452_21481 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__21453_21482 = null;
              var count__21454_21483 = 0;
              var i__21455_21484 = 0;
              while (true) {
                if (i__21455_21484 < count__21454_21483) {
                  var x_21485__$1 = chunk__21453_21482.cljs$core$IIndexed$_nth$arity$2(null, i__21455_21484);
                  arr.push(x_21485__$1);
                  var G__21486 = seq__21452_21481;
                  var G__21487 = chunk__21453_21482;
                  var G__21488 = count__21454_21483;
                  var G__21489 = i__21455_21484 + 1;
                  seq__21452_21481 = G__21486;
                  chunk__21453_21482 = G__21487;
                  count__21454_21483 = G__21488;
                  i__21455_21484 = G__21489;
                  continue;
                } else {
                  var temp__4126__auto___21490 = cljs.core.seq(seq__21452_21481);
                  if (temp__4126__auto___21490) {
                    var seq__21452_21491__$1 = temp__4126__auto___21490;
                    if (cljs.core.chunked_seq_QMARK_(seq__21452_21491__$1)) {
                      var c__5142__auto___21492 = cljs.core.chunk_first(seq__21452_21491__$1);
                      var G__21493 = cljs.core.chunk_rest(seq__21452_21491__$1);
                      var G__21494 = c__5142__auto___21492;
                      var G__21495 = cljs.core.count(c__5142__auto___21492);
                      var G__21496 = 0;
                      seq__21452_21481 = G__21493;
                      chunk__21453_21482 = G__21494;
                      count__21454_21483 = G__21495;
                      i__21455_21484 = G__21496;
                      continue;
                    } else {
                      var x_21497__$1 = cljs.core.first(seq__21452_21491__$1);
                      arr.push(x_21497__$1);
                      var G__21498 = cljs.core.next(seq__21452_21491__$1);
                      var G__21499 = null;
                      var G__21500 = 0;
                      var G__21501 = 0;
                      seq__21452_21481 = G__21498;
                      chunk__21453_21482 = G__21499;
                      count__21454_21483 = G__21500;
                      i__21455_21484 = G__21501;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj21503 = {};
  return obj21503;
}();
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (function() {
    var and__4345__auto__ = x;
    if (and__4345__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4993__auto__ = x == null ? null : x;
    return function() {
      var or__4357__auto__ = cljs.core._js__GT_clj[function() {
        var G__21507 = x__4993__auto__;
        return goog.typeOf(G__21507);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj() {
  var G__21511 = arguments.length;
  switch(G__21511) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5408__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__21512 = opts;
  var map__21512__$1 = cljs.core.seq_QMARK_(map__21512) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__21512) : map__21512;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21512__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__21512, map__21512__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (function() {
        var G__21528 = x__$1;
        if (G__21528) {
          var bit__5031__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__4357__auto__ = bit__5031__auto__;
            if (cljs.core.truth_(or__4357__auto__)) {
              return or__4357__auto__;
            } else {
              return G__21528.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__21528.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__21528);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__21528);
        }
      }()) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__5111__auto__ = function(map__21512, map__21512__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__21529(s__21530) {
                      return new cljs.core.LazySeq(null, function(map__21512, map__21512__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__21530__$1 = s__21530;
                          while (true) {
                            var temp__4126__auto__ = cljs.core.seq(s__21530__$1);
                            if (temp__4126__auto__) {
                              var s__21530__$2 = temp__4126__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__21530__$2)) {
                                var c__5109__auto__ = cljs.core.chunk_first(s__21530__$2);
                                var size__5110__auto__ = cljs.core.count(c__5109__auto__);
                                var b__21532 = cljs.core.chunk_buffer(size__5110__auto__);
                                if (function() {
                                  var i__21531 = 0;
                                  while (true) {
                                    if (i__21531 < size__5110__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5109__auto__, i__21531);
                                      cljs.core.chunk_append(b__21532, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                        var G__21537 = k;
                                        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__21537) : keyfn.call(null, G__21537);
                                      }(), cljs$core$thisfn(x__$1[k])], null));
                                      var G__21540 = i__21531 + 1;
                                      i__21531 = G__21540;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__21532), cljs$core$thisfn_$_iter__21529(cljs.core.chunk_rest(s__21530__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__21532), null);
                                }
                              } else {
                                var k = cljs.core.first(s__21530__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                  var G__21538 = k;
                                  return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__21538) : keyfn.call(null, G__21538);
                                }(), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__21529(cljs.core.rest(s__21530__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__21512, map__21512__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__21512, map__21512__$1, keywordize_keys, keyfn);
                  return iter__5111__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__21512, map__21512__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq21508) {
  var G__21509 = cljs.core.first(seq21508);
  var seq21508__$1 = cljs.core.next(seq21508);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__21509, seq21508__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__21543 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__21543) : cljs.core.atom.call(null, G__21543);
  }();
  return function(mem) {
    return function() {
      var G__21545__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__21544 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21544) : cljs.core.deref.call(null, G__21544);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__21545 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__21546__i = 0, G__21546__a = new Array(arguments.length - 0);
          while (G__21546__i < G__21546__a.length) {
            G__21546__a[G__21546__i] = arguments[G__21546__i + 0];
            ++G__21546__i;
          }
          args = new cljs.core.IndexedSeq(G__21546__a, 0);
        }
        return G__21545__delegate.call(this, args);
      };
      G__21545.cljs$lang$maxFixedArity = 0;
      G__21545.cljs$lang$applyTo = function(arglist__21547) {
        var args = cljs.core.seq(arglist__21547);
        return G__21545__delegate(args);
      };
      G__21545.cljs$core$IFn$_invoke$arity$variadic = G__21545__delegate;
      return G__21545;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline() {
  var G__21551 = arguments.length;
  switch(G__21551) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5408__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5408__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }();
    if (cljs.core.fn_QMARK_(ret)) {
      var G__21553 = ret;
      f = G__21553;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq21548) {
  var G__21549 = cljs.core.first(seq21548);
  var seq21548__$1 = cljs.core.next(seq21548);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__21549, seq21548__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand() {
  var G__21555 = arguments.length;
  switch(G__21555) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__21558 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__21558) : Math.floor.call(null, G__21558);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__21560 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21560) : f.call(null, G__21560);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__21562 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__21562) : cljs.core.atom.call(null, G__21562);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_() {
  var argseq__5397__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5397__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq21563) {
  var G__21564 = cljs.core.first(seq21563);
  var seq21563__$1 = cljs.core.next(seq21563);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__21564, seq21563__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_() {
  var G__21566 = arguments.length;
  switch(G__21566) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__21567 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21567) : cljs.core.deref.call(null, G__21567);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4357__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4357__auto__) {
    return or__4357__auto__;
  } else {
    var or__4357__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4357__auto____$1) {
      return or__4357__auto____$1;
    } else {
      var and__4345__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4345__auto__) {
        var and__4345__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4345__auto____$1) {
          var and__4345__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4345__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__21593 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                  var G__21590 = i;
                  return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__21590) : child.call(null, G__21590);
                }(), function() {
                  var G__21591 = i;
                  return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__21591) : parent.call(null, G__21591);
                }());
                var G__21594 = i + 1;
                ret = G__21593;
                i = G__21594;
                continue;
              }
              break;
            }
          } else {
            return and__4345__auto____$2;
          }
        } else {
          return and__4345__auto____$1;
        }
      } else {
        return and__4345__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents() {
  var G__21596 = arguments.length;
  switch(G__21596) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__21597 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21597) : cljs.core.deref.call(null, G__21597);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors() {
  var G__21600 = arguments.length;
  switch(G__21600) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__21601 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21601) : cljs.core.deref.call(null, G__21601);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants() {
  var G__21604 = arguments.length;
  switch(G__21604) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__21605 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21605) : cljs.core.deref.call(null, G__21605);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive() {
  var G__21608 = arguments.length;
  switch(G__21608) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
            var G__21609 = target;
            return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__21609) : targets.call(null, G__21609);
          }())));
        };
      }(tp, td, ta), m, cljs.core.cons(source, function() {
        var G__21610 = source;
        return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__21610) : sources.call(null, G__21610);
      }()));
    };
  }(tp, td, ta);
  var or__4357__auto__ = cljs.core.contains_QMARK_(function() {
    var G__21614 = tag;
    return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__21614) : tp.call(null, G__21614);
  }(), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(function() {
      var G__21615 = tag;
      return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__21615) : ta.call(null, G__21615);
    }(), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(function() {
      var G__21616 = parent;
      return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__21616) : ta.call(null, G__21616);
    }(), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4357__auto__)) {
    return or__4357__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive() {
  var G__21622 = arguments.length;
  switch(G__21622) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(function() {
    var G__21623 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__21623) : parentMap.call(null, G__21623);
  }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
    var G__21624 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__21624) : parentMap.call(null, G__21624);
  }(), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__21618_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__21618_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__21618_SHARP_), cljs.core.second(p1__21618_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(function() {
    var G__21625 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__21625) : parentMap.call(null, G__21625);
  }(), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__21619_SHARP_, p2__21620_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__21619_SHARP_, p2__21620_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__21629 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21629) : cljs.core.deref.call(null, G__21629);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__21630 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21630) : cljs.core.deref.call(null, G__21630);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__21646 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21646) : cljs.core.deref.call(null, G__21646);
  }().call(null, x);
  var or__4357__auto__ = cljs.core.truth_(function() {
    var and__4345__auto__ = xprefs;
    if (cljs.core.truth_(and__4345__auto__)) {
      var G__21648 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__21648) : xprefs.call(null, G__21648);
    } else {
      return and__4345__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4357__auto__)) {
    return or__4357__auto__;
  } else {
    var or__4357__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__21649 = cljs.core.rest(ps);
          ps = G__21649;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4357__auto____$1)) {
      return or__4357__auto____$1;
    } else {
      var or__4357__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__21650 = cljs.core.rest(ps);
            ps = G__21650;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4357__auto____$2)) {
        return or__4357__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4357__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4357__auto__)) {
    return or__4357__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__21664) {
    var vec__21665 = p__21664;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21665, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21665, 1, null);
    var e = vec__21665;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__21666 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21666) : cljs.core.deref.call(null, G__21666);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4357__auto__ = be == null;
        if (or__4357__auto__) {
          return or__4357__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__21667 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21667) : cljs.core.deref.call(null, G__21667);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__21668 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21668) : cljs.core.deref.call(null, G__21668);
    }(), function() {
      var G__21669 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21669) : cljs.core.deref.call(null, G__21669);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj21671 = {};
  return obj21671;
}();
cljs.core._reset = function cljs$core$_reset(mf) {
  if (function() {
    var and__4345__auto__ = mf;
    if (and__4345__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4993__auto__ = mf == null ? null : mf;
    return function() {
      var or__4357__auto__ = cljs.core._reset[function() {
        var G__21675 = x__4993__auto__;
        return goog.typeOf(G__21675);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._reset["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (function() {
    var and__4345__auto__ = mf;
    if (and__4345__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4993__auto__ = mf == null ? null : mf;
    return function() {
      var or__4357__auto__ = cljs.core._add_method[function() {
        var G__21679 = x__4993__auto__;
        return goog.typeOf(G__21679);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._add_method["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (function() {
    var and__4345__auto__ = mf;
    if (and__4345__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4993__auto__ = mf == null ? null : mf;
    return function() {
      var or__4357__auto__ = cljs.core._remove_method[function() {
        var G__21683 = x__4993__auto__;
        return goog.typeOf(G__21683);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._remove_method["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__4345__auto__ = mf;
    if (and__4345__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4993__auto__ = mf == null ? null : mf;
    return function() {
      var or__4357__auto__ = cljs.core._prefer_method[function() {
        var G__21687 = x__4993__auto__;
        return goog.typeOf(G__21687);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._prefer_method["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (function() {
    var and__4345__auto__ = mf;
    if (and__4345__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4993__auto__ = mf == null ? null : mf;
    return function() {
      var or__4357__auto__ = cljs.core._get_method[function() {
        var G__21691 = x__4993__auto__;
        return goog.typeOf(G__21691);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._get_method["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (function() {
    var and__4345__auto__ = mf;
    if (and__4345__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4993__auto__ = mf == null ? null : mf;
    return function() {
      var or__4357__auto__ = cljs.core._methods[function() {
        var G__21695 = x__4993__auto__;
        return goog.typeOf(G__21695);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._methods["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (function() {
    var and__4345__auto__ = mf;
    if (and__4345__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4993__auto__ = mf == null ? null : mf;
    return function() {
      var or__4357__auto__ = cljs.core._prefers[function() {
        var G__21699 = x__4993__auto__;
        return goog.typeOf(G__21699);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._prefers["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (function() {
    var and__4345__auto__ = mf;
    if (and__4345__auto__) {
      return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__4993__auto__ = mf == null ? null : mf;
    return function() {
      var or__4357__auto__ = cljs.core._default_dispatch_val[function() {
        var G__21703 = x__4993__auto__;
        return goog.typeOf(G__21703);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._default_dispatch_val["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (function() {
    var and__4345__auto__ = mf;
    if (and__4345__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__4993__auto__ = mf == null ? null : mf;
    return function() {
      var or__4357__auto__ = cljs.core._dispatch_fn[function() {
        var G__21707 = x__4993__auto__;
        return goog.typeOf(G__21707);
      }()];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core._dispatch_fn["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__21709 = this$__$1;
  return goog.getUid(G__21709);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__21710 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21710) : cljs.core.deref.call(null, G__21710);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__21711 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21711) : cljs.core.deref.call(null, G__21711);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__21712 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21712) : cljs.core.deref.call(null, G__21712);
  }(), function() {
    var G__21713 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21713) : cljs.core.deref.call(null, G__21713);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__21714 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21714) : cljs.core.deref.call(null, G__21714);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__21715 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21715) : cljs.core.deref.call(null, G__21715);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.call = function() {
  var G__22556 = null;
  var G__22556__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__22556__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21716 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__21716) : self__.dispatch_fn.call(null, G__21716);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21717 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__21717) : target_fn.call(null, G__21717);
  };
  var G__22556__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21718 = a;
      var G__21719 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__21718, G__21719) : self__.dispatch_fn.call(null, G__21718, G__21719);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21720 = a;
    var G__21721 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__21720, G__21721) : target_fn.call(null, G__21720, G__21721);
  };
  var G__22556__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21722 = a;
      var G__21723 = b;
      var G__21724 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__21722, G__21723, G__21724) : self__.dispatch_fn.call(null, G__21722, G__21723, G__21724);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21725 = a;
    var G__21726 = b;
    var G__21727 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__21725, G__21726, G__21727) : target_fn.call(null, G__21725, G__21726, G__21727);
  };
  var G__22556__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21728 = a;
      var G__21729 = b;
      var G__21730 = c;
      var G__21731 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__21728, G__21729, G__21730, G__21731) : self__.dispatch_fn.call(null, G__21728, G__21729, G__21730, G__21731);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21732 = a;
    var G__21733 = b;
    var G__21734 = c;
    var G__21735 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__21732, G__21733, G__21734, G__21735) : target_fn.call(null, G__21732, G__21733, G__21734, G__21735);
  };
  var G__22556__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21736 = a;
      var G__21737 = b;
      var G__21738 = c;
      var G__21739 = d;
      var G__21740 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__21736, G__21737, G__21738, G__21739, G__21740) : self__.dispatch_fn.call(null, G__21736, G__21737, G__21738, G__21739, G__21740);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21741 = a;
    var G__21742 = b;
    var G__21743 = c;
    var G__21744 = d;
    var G__21745 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__21741, G__21742, G__21743, G__21744, G__21745) : target_fn.call(null, G__21741, G__21742, G__21743, G__21744, G__21745);
  };
  var G__22556__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21746 = a;
      var G__21747 = b;
      var G__21748 = c;
      var G__21749 = d;
      var G__21750 = e;
      var G__21751 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__21746, G__21747, G__21748, G__21749, G__21750, G__21751) : self__.dispatch_fn.call(null, G__21746, G__21747, G__21748, G__21749, G__21750, G__21751);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21752 = a;
    var G__21753 = b;
    var G__21754 = c;
    var G__21755 = d;
    var G__21756 = e;
    var G__21757 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__21752, G__21753, G__21754, G__21755, G__21756, G__21757) : target_fn.call(null, G__21752, G__21753, G__21754, G__21755, G__21756, G__21757);
  };
  var G__22556__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21758 = a;
      var G__21759 = b;
      var G__21760 = c;
      var G__21761 = d;
      var G__21762 = e;
      var G__21763 = f;
      var G__21764 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__21758, G__21759, G__21760, G__21761, G__21762, G__21763, G__21764) : self__.dispatch_fn.call(null, G__21758, G__21759, G__21760, G__21761, G__21762, G__21763, G__21764);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21765 = a;
    var G__21766 = b;
    var G__21767 = c;
    var G__21768 = d;
    var G__21769 = e;
    var G__21770 = f;
    var G__21771 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__21765, G__21766, G__21767, G__21768, G__21769, G__21770, G__21771) : target_fn.call(null, G__21765, G__21766, G__21767, G__21768, G__21769, G__21770, G__21771);
  };
  var G__22556__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21772 = a;
      var G__21773 = b;
      var G__21774 = c;
      var G__21775 = d;
      var G__21776 = e;
      var G__21777 = f;
      var G__21778 = g;
      var G__21779 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__21772, G__21773, G__21774, G__21775, G__21776, G__21777, G__21778, G__21779) : self__.dispatch_fn.call(null, G__21772, G__21773, G__21774, G__21775, G__21776, G__21777, G__21778, G__21779);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21780 = a;
    var G__21781 = b;
    var G__21782 = c;
    var G__21783 = d;
    var G__21784 = e;
    var G__21785 = f;
    var G__21786 = g;
    var G__21787 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__21780, G__21781, G__21782, G__21783, G__21784, G__21785, G__21786, G__21787) : target_fn.call(null, G__21780, G__21781, G__21782, G__21783, G__21784, G__21785, G__21786, G__21787);
  };
  var G__22556__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21788 = a;
      var G__21789 = b;
      var G__21790 = c;
      var G__21791 = d;
      var G__21792 = e;
      var G__21793 = f;
      var G__21794 = g;
      var G__21795 = h;
      var G__21796 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__21788, G__21789, G__21790, G__21791, G__21792, G__21793, G__21794, G__21795, G__21796) : self__.dispatch_fn.call(null, G__21788, G__21789, G__21790, G__21791, G__21792, G__21793, G__21794, G__21795, G__21796);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21797 = a;
    var G__21798 = b;
    var G__21799 = c;
    var G__21800 = d;
    var G__21801 = e;
    var G__21802 = f;
    var G__21803 = g;
    var G__21804 = h;
    var G__21805 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__21797, G__21798, G__21799, G__21800, G__21801, G__21802, G__21803, G__21804, G__21805) : target_fn.call(null, G__21797, G__21798, G__21799, G__21800, G__21801, G__21802, G__21803, G__21804, G__21805);
  };
  var G__22556__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21806 = a;
      var G__21807 = b;
      var G__21808 = c;
      var G__21809 = d;
      var G__21810 = e;
      var G__21811 = f;
      var G__21812 = g;
      var G__21813 = h;
      var G__21814 = i;
      var G__21815 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__21806, G__21807, G__21808, G__21809, G__21810, G__21811, G__21812, G__21813, G__21814, G__21815) : self__.dispatch_fn.call(null, G__21806, G__21807, G__21808, G__21809, G__21810, G__21811, G__21812, G__21813, G__21814, G__21815);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21816 = a;
    var G__21817 = b;
    var G__21818 = c;
    var G__21819 = d;
    var G__21820 = e;
    var G__21821 = f;
    var G__21822 = g;
    var G__21823 = h;
    var G__21824 = i;
    var G__21825 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__21816, G__21817, G__21818, G__21819, G__21820, G__21821, G__21822, G__21823, G__21824, G__21825) : target_fn.call(null, G__21816, G__21817, G__21818, G__21819, G__21820, G__21821, G__21822, G__21823, G__21824, G__21825);
  };
  var G__22556__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21826 = a;
      var G__21827 = b;
      var G__21828 = c;
      var G__21829 = d;
      var G__21830 = e;
      var G__21831 = f;
      var G__21832 = g;
      var G__21833 = h;
      var G__21834 = i;
      var G__21835 = j;
      var G__21836 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__21826, G__21827, G__21828, G__21829, G__21830, G__21831, G__21832, G__21833, G__21834, G__21835, G__21836) : self__.dispatch_fn.call(null, G__21826, G__21827, G__21828, G__21829, G__21830, G__21831, G__21832, G__21833, G__21834, G__21835, G__21836);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21837 = a;
    var G__21838 = b;
    var G__21839 = c;
    var G__21840 = d;
    var G__21841 = e;
    var G__21842 = f;
    var G__21843 = g;
    var G__21844 = h;
    var G__21845 = i;
    var G__21846 = j;
    var G__21847 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__21837, G__21838, G__21839, G__21840, G__21841, G__21842, G__21843, G__21844, G__21845, G__21846, G__21847) : target_fn.call(null, G__21837, G__21838, G__21839, G__21840, G__21841, G__21842, G__21843, G__21844, G__21845, G__21846, G__21847);
  };
  var G__22556__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21848 = a;
      var G__21849 = b;
      var G__21850 = c;
      var G__21851 = d;
      var G__21852 = e;
      var G__21853 = f;
      var G__21854 = g;
      var G__21855 = h;
      var G__21856 = i;
      var G__21857 = j;
      var G__21858 = k;
      var G__21859 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__21848, G__21849, G__21850, G__21851, G__21852, G__21853, G__21854, G__21855, G__21856, G__21857, G__21858, G__21859) : self__.dispatch_fn.call(null, G__21848, G__21849, G__21850, G__21851, G__21852, G__21853, G__21854, G__21855, G__21856, G__21857, G__21858, G__21859);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21860 = a;
    var G__21861 = b;
    var G__21862 = c;
    var G__21863 = d;
    var G__21864 = e;
    var G__21865 = f;
    var G__21866 = g;
    var G__21867 = h;
    var G__21868 = i;
    var G__21869 = j;
    var G__21870 = k;
    var G__21871 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__21860, G__21861, G__21862, G__21863, G__21864, G__21865, G__21866, G__21867, G__21868, G__21869, G__21870, G__21871) : target_fn.call(null, G__21860, G__21861, G__21862, G__21863, G__21864, G__21865, G__21866, G__21867, G__21868, G__21869, G__21870, G__21871);
  };
  var G__22556__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21872 = a;
      var G__21873 = b;
      var G__21874 = c;
      var G__21875 = d;
      var G__21876 = e;
      var G__21877 = f;
      var G__21878 = g;
      var G__21879 = h;
      var G__21880 = i;
      var G__21881 = j;
      var G__21882 = k;
      var G__21883 = l;
      var G__21884 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__21872, G__21873, G__21874, G__21875, G__21876, G__21877, G__21878, G__21879, G__21880, G__21881, G__21882, G__21883, G__21884) : self__.dispatch_fn.call(null, G__21872, G__21873, G__21874, G__21875, G__21876, G__21877, G__21878, G__21879, G__21880, G__21881, G__21882, G__21883, G__21884);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21885 = a;
    var G__21886 = b;
    var G__21887 = c;
    var G__21888 = d;
    var G__21889 = e;
    var G__21890 = f;
    var G__21891 = g;
    var G__21892 = h;
    var G__21893 = i;
    var G__21894 = j;
    var G__21895 = k;
    var G__21896 = l;
    var G__21897 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__21885, G__21886, G__21887, G__21888, G__21889, G__21890, G__21891, G__21892, G__21893, G__21894, G__21895, G__21896, G__21897) : target_fn.call(null, G__21885, G__21886, G__21887, G__21888, G__21889, G__21890, G__21891, G__21892, G__21893, G__21894, G__21895, G__21896, G__21897);
  };
  var G__22556__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21898 = a;
      var G__21899 = b;
      var G__21900 = c;
      var G__21901 = d;
      var G__21902 = e;
      var G__21903 = f;
      var G__21904 = g;
      var G__21905 = h;
      var G__21906 = i;
      var G__21907 = j;
      var G__21908 = k;
      var G__21909 = l;
      var G__21910 = m;
      var G__21911 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__21898, G__21899, G__21900, G__21901, G__21902, G__21903, G__21904, G__21905, G__21906, G__21907, G__21908, G__21909, G__21910, G__21911) : self__.dispatch_fn.call(null, G__21898, G__21899, G__21900, G__21901, G__21902, G__21903, G__21904, G__21905, G__21906, G__21907, G__21908, G__21909, G__21910, G__21911);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21912 = a;
    var G__21913 = b;
    var G__21914 = c;
    var G__21915 = d;
    var G__21916 = e;
    var G__21917 = f;
    var G__21918 = g;
    var G__21919 = h;
    var G__21920 = i;
    var G__21921 = j;
    var G__21922 = k;
    var G__21923 = l;
    var G__21924 = m;
    var G__21925 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__21912, G__21913, G__21914, G__21915, G__21916, G__21917, G__21918, G__21919, G__21920, G__21921, G__21922, G__21923, G__21924, G__21925) : target_fn.call(null, G__21912, G__21913, G__21914, G__21915, G__21916, G__21917, G__21918, G__21919, G__21920, G__21921, G__21922, G__21923, G__21924, G__21925);
  };
  var G__22556__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21926 = a;
      var G__21927 = b;
      var G__21928 = c;
      var G__21929 = d;
      var G__21930 = e;
      var G__21931 = f;
      var G__21932 = g;
      var G__21933 = h;
      var G__21934 = i;
      var G__21935 = j;
      var G__21936 = k;
      var G__21937 = l;
      var G__21938 = m;
      var G__21939 = n;
      var G__21940 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__21926, G__21927, G__21928, G__21929, G__21930, G__21931, G__21932, G__21933, G__21934, G__21935, G__21936, G__21937, G__21938, G__21939, G__21940) : self__.dispatch_fn.call(null, G__21926, G__21927, G__21928, G__21929, G__21930, G__21931, G__21932, G__21933, G__21934, G__21935, G__21936, G__21937, G__21938, G__21939, G__21940);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21941 = a;
    var G__21942 = b;
    var G__21943 = c;
    var G__21944 = d;
    var G__21945 = e;
    var G__21946 = f;
    var G__21947 = g;
    var G__21948 = h;
    var G__21949 = i;
    var G__21950 = j;
    var G__21951 = k;
    var G__21952 = l;
    var G__21953 = m;
    var G__21954 = n;
    var G__21955 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__21941, G__21942, G__21943, G__21944, G__21945, G__21946, G__21947, G__21948, G__21949, G__21950, G__21951, G__21952, G__21953, G__21954, G__21955) : target_fn.call(null, G__21941, G__21942, G__21943, G__21944, G__21945, G__21946, G__21947, G__21948, G__21949, G__21950, G__21951, G__21952, G__21953, G__21954, G__21955);
  };
  var G__22556__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21956 = a;
      var G__21957 = b;
      var G__21958 = c;
      var G__21959 = d;
      var G__21960 = e;
      var G__21961 = f;
      var G__21962 = g;
      var G__21963 = h;
      var G__21964 = i;
      var G__21965 = j;
      var G__21966 = k;
      var G__21967 = l;
      var G__21968 = m;
      var G__21969 = n;
      var G__21970 = o;
      var G__21971 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__21956, G__21957, G__21958, G__21959, G__21960, G__21961, G__21962, G__21963, G__21964, G__21965, G__21966, G__21967, G__21968, G__21969, G__21970, G__21971) : self__.dispatch_fn.call(null, G__21956, G__21957, G__21958, G__21959, G__21960, G__21961, G__21962, G__21963, G__21964, G__21965, G__21966, G__21967, G__21968, G__21969, G__21970, G__21971);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21972 = a;
    var G__21973 = b;
    var G__21974 = c;
    var G__21975 = d;
    var G__21976 = e;
    var G__21977 = f;
    var G__21978 = g;
    var G__21979 = h;
    var G__21980 = i;
    var G__21981 = j;
    var G__21982 = k;
    var G__21983 = l;
    var G__21984 = m;
    var G__21985 = n;
    var G__21986 = o;
    var G__21987 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__21972, G__21973, G__21974, G__21975, G__21976, G__21977, G__21978, G__21979, G__21980, G__21981, G__21982, G__21983, G__21984, G__21985, G__21986, G__21987) : target_fn.call(null, G__21972, G__21973, G__21974, G__21975, G__21976, G__21977, G__21978, G__21979, G__21980, G__21981, G__21982, G__21983, G__21984, G__21985, G__21986, G__21987);
  };
  var G__22556__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21988 = a;
      var G__21989 = b;
      var G__21990 = c;
      var G__21991 = d;
      var G__21992 = e;
      var G__21993 = f;
      var G__21994 = g;
      var G__21995 = h;
      var G__21996 = i;
      var G__21997 = j;
      var G__21998 = k;
      var G__21999 = l;
      var G__22000 = m;
      var G__22001 = n;
      var G__22002 = o;
      var G__22003 = p;
      var G__22004 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__21988, G__21989, G__21990, G__21991, G__21992, G__21993, G__21994, G__21995, G__21996, G__21997, G__21998, G__21999, G__22000, G__22001, G__22002, G__22003, G__22004) : self__.dispatch_fn.call(null, G__21988, G__21989, G__21990, G__21991, G__21992, G__21993, G__21994, G__21995, G__21996, G__21997, G__21998, G__21999, G__22000, G__22001, G__22002, G__22003, G__22004);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22005 = a;
    var G__22006 = b;
    var G__22007 = c;
    var G__22008 = d;
    var G__22009 = e;
    var G__22010 = f;
    var G__22011 = g;
    var G__22012 = h;
    var G__22013 = i;
    var G__22014 = j;
    var G__22015 = k;
    var G__22016 = l;
    var G__22017 = m;
    var G__22018 = n;
    var G__22019 = o;
    var G__22020 = p;
    var G__22021 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__22005, G__22006, G__22007, G__22008, G__22009, G__22010, G__22011, G__22012, G__22013, G__22014, G__22015, G__22016, G__22017, G__22018, G__22019, G__22020, G__22021) : target_fn.call(null, G__22005, G__22006, G__22007, G__22008, G__22009, G__22010, G__22011, G__22012, G__22013, G__22014, G__22015, G__22016, G__22017, G__22018, G__22019, G__22020, G__22021);
  };
  var G__22556__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22022 = a;
      var G__22023 = b;
      var G__22024 = c;
      var G__22025 = d;
      var G__22026 = e;
      var G__22027 = f;
      var G__22028 = g;
      var G__22029 = h;
      var G__22030 = i;
      var G__22031 = j;
      var G__22032 = k;
      var G__22033 = l;
      var G__22034 = m;
      var G__22035 = n;
      var G__22036 = o;
      var G__22037 = p;
      var G__22038 = q;
      var G__22039 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__22022, G__22023, G__22024, G__22025, G__22026, G__22027, G__22028, G__22029, G__22030, G__22031, G__22032, G__22033, G__22034, G__22035, G__22036, G__22037, G__22038, G__22039) : self__.dispatch_fn.call(null, G__22022, G__22023, G__22024, G__22025, G__22026, G__22027, G__22028, G__22029, G__22030, G__22031, G__22032, G__22033, G__22034, G__22035, G__22036, G__22037, G__22038, G__22039);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22040 = a;
    var G__22041 = b;
    var G__22042 = c;
    var G__22043 = d;
    var G__22044 = e;
    var G__22045 = f;
    var G__22046 = g;
    var G__22047 = h;
    var G__22048 = i;
    var G__22049 = j;
    var G__22050 = k;
    var G__22051 = l;
    var G__22052 = m;
    var G__22053 = n;
    var G__22054 = o;
    var G__22055 = p;
    var G__22056 = q;
    var G__22057 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__22040, G__22041, G__22042, G__22043, G__22044, G__22045, G__22046, G__22047, G__22048, G__22049, G__22050, G__22051, G__22052, G__22053, G__22054, G__22055, G__22056, G__22057) : target_fn.call(null, G__22040, G__22041, G__22042, G__22043, G__22044, G__22045, G__22046, G__22047, G__22048, G__22049, G__22050, G__22051, G__22052, G__22053, G__22054, G__22055, G__22056, G__22057);
  };
  var G__22556__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22058 = a;
      var G__22059 = b;
      var G__22060 = c;
      var G__22061 = d;
      var G__22062 = e;
      var G__22063 = f;
      var G__22064 = g;
      var G__22065 = h;
      var G__22066 = i;
      var G__22067 = j;
      var G__22068 = k;
      var G__22069 = l;
      var G__22070 = m;
      var G__22071 = n;
      var G__22072 = o;
      var G__22073 = p;
      var G__22074 = q;
      var G__22075 = r;
      var G__22076 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__22058, G__22059, G__22060, G__22061, G__22062, G__22063, G__22064, G__22065, G__22066, G__22067, G__22068, G__22069, G__22070, G__22071, G__22072, G__22073, G__22074, G__22075, G__22076) : self__.dispatch_fn.call(null, G__22058, G__22059, G__22060, G__22061, G__22062, G__22063, G__22064, G__22065, G__22066, G__22067, G__22068, G__22069, G__22070, G__22071, G__22072, G__22073, G__22074, 
      G__22075, G__22076);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22077 = a;
    var G__22078 = b;
    var G__22079 = c;
    var G__22080 = d;
    var G__22081 = e;
    var G__22082 = f;
    var G__22083 = g;
    var G__22084 = h;
    var G__22085 = i;
    var G__22086 = j;
    var G__22087 = k;
    var G__22088 = l;
    var G__22089 = m;
    var G__22090 = n;
    var G__22091 = o;
    var G__22092 = p;
    var G__22093 = q;
    var G__22094 = r;
    var G__22095 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__22077, G__22078, G__22079, G__22080, G__22081, G__22082, G__22083, G__22084, G__22085, G__22086, G__22087, G__22088, G__22089, G__22090, G__22091, G__22092, G__22093, G__22094, G__22095) : target_fn.call(null, G__22077, G__22078, G__22079, G__22080, G__22081, G__22082, G__22083, G__22084, G__22085, G__22086, G__22087, G__22088, G__22089, G__22090, G__22091, G__22092, G__22093, G__22094, G__22095);
  };
  var G__22556__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__22096 = a;
      var G__22097 = b;
      var G__22098 = c;
      var G__22099 = d;
      var G__22100 = e;
      var G__22101 = f;
      var G__22102 = g;
      var G__22103 = h;
      var G__22104 = i;
      var G__22105 = j;
      var G__22106 = k;
      var G__22107 = l;
      var G__22108 = m;
      var G__22109 = n;
      var G__22110 = o;
      var G__22111 = p;
      var G__22112 = q;
      var G__22113 = r;
      var G__22114 = s;
      var G__22115 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__22096, G__22097, G__22098, G__22099, G__22100, G__22101, G__22102, G__22103, G__22104, G__22105, G__22106, G__22107, G__22108, G__22109, G__22110, G__22111, G__22112, G__22113, G__22114, G__22115) : self__.dispatch_fn.call(null, G__22096, G__22097, G__22098, G__22099, G__22100, G__22101, G__22102, G__22103, G__22104, G__22105, G__22106, G__22107, G__22108, G__22109, G__22110, G__22111, 
      G__22112, G__22113, G__22114, G__22115);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__22116 = a;
    var G__22117 = b;
    var G__22118 = c;
    var G__22119 = d;
    var G__22120 = e;
    var G__22121 = f;
    var G__22122 = g;
    var G__22123 = h;
    var G__22124 = i;
    var G__22125 = j;
    var G__22126 = k;
    var G__22127 = l;
    var G__22128 = m;
    var G__22129 = n;
    var G__22130 = o;
    var G__22131 = p;
    var G__22132 = q;
    var G__22133 = r;
    var G__22134 = s;
    var G__22135 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__22116, G__22117, G__22118, G__22119, G__22120, G__22121, G__22122, G__22123, G__22124, G__22125, G__22126, G__22127, G__22128, G__22129, G__22130, G__22131, G__22132, G__22133, G__22134, G__22135) : target_fn.call(null, G__22116, G__22117, G__22118, G__22119, G__22120, G__22121, G__22122, G__22123, G__22124, G__22125, G__22126, G__22127, G__22128, G__22129, G__22130, G__22131, G__22132, G__22133, G__22134, 
    G__22135);
  };
  var G__22556__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__22556 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__22556__1.call(this, self__);
      case 2:
        return G__22556__2.call(this, self__, a);
      case 3:
        return G__22556__3.call(this, self__, a, b);
      case 4:
        return G__22556__4.call(this, self__, a, b, c);
      case 5:
        return G__22556__5.call(this, self__, a, b, c, d);
      case 6:
        return G__22556__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__22556__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__22556__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__22556__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__22556__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__22556__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__22556__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__22556__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__22556__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__22556__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__22556__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__22556__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__22556__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__22556__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__22556__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__22556__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__22556__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22556.cljs$core$IFn$_invoke$arity$1 = G__22556__1;
  G__22556.cljs$core$IFn$_invoke$arity$2 = G__22556__2;
  G__22556.cljs$core$IFn$_invoke$arity$3 = G__22556__3;
  G__22556.cljs$core$IFn$_invoke$arity$4 = G__22556__4;
  G__22556.cljs$core$IFn$_invoke$arity$5 = G__22556__5;
  G__22556.cljs$core$IFn$_invoke$arity$6 = G__22556__6;
  G__22556.cljs$core$IFn$_invoke$arity$7 = G__22556__7;
  G__22556.cljs$core$IFn$_invoke$arity$8 = G__22556__8;
  G__22556.cljs$core$IFn$_invoke$arity$9 = G__22556__9;
  G__22556.cljs$core$IFn$_invoke$arity$10 = G__22556__10;
  G__22556.cljs$core$IFn$_invoke$arity$11 = G__22556__11;
  G__22556.cljs$core$IFn$_invoke$arity$12 = G__22556__12;
  G__22556.cljs$core$IFn$_invoke$arity$13 = G__22556__13;
  G__22556.cljs$core$IFn$_invoke$arity$14 = G__22556__14;
  G__22556.cljs$core$IFn$_invoke$arity$15 = G__22556__15;
  G__22556.cljs$core$IFn$_invoke$arity$16 = G__22556__16;
  G__22556.cljs$core$IFn$_invoke$arity$17 = G__22556__17;
  G__22556.cljs$core$IFn$_invoke$arity$18 = G__22556__18;
  G__22556.cljs$core$IFn$_invoke$arity$19 = G__22556__19;
  G__22556.cljs$core$IFn$_invoke$arity$20 = G__22556__20;
  G__22556.cljs$core$IFn$_invoke$arity$21 = G__22556__21;
  G__22556.cljs$core$IFn$_invoke$arity$22 = G__22556__22;
  return G__22556;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args21708) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21708)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22136 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__22136) : self__.dispatch_fn.call(null, G__22136);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22137 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__22137) : target_fn.call(null, G__22137);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22138 = a;
    var G__22139 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__22138, G__22139) : self__.dispatch_fn.call(null, G__22138, G__22139);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22140 = a;
  var G__22141 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__22140, G__22141) : target_fn.call(null, G__22140, G__22141);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22142 = a;
    var G__22143 = b;
    var G__22144 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__22142, G__22143, G__22144) : self__.dispatch_fn.call(null, G__22142, G__22143, G__22144);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22145 = a;
  var G__22146 = b;
  var G__22147 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__22145, G__22146, G__22147) : target_fn.call(null, G__22145, G__22146, G__22147);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22148 = a;
    var G__22149 = b;
    var G__22150 = c;
    var G__22151 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__22148, G__22149, G__22150, G__22151) : self__.dispatch_fn.call(null, G__22148, G__22149, G__22150, G__22151);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22152 = a;
  var G__22153 = b;
  var G__22154 = c;
  var G__22155 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__22152, G__22153, G__22154, G__22155) : target_fn.call(null, G__22152, G__22153, G__22154, G__22155);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22156 = a;
    var G__22157 = b;
    var G__22158 = c;
    var G__22159 = d;
    var G__22160 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__22156, G__22157, G__22158, G__22159, G__22160) : self__.dispatch_fn.call(null, G__22156, G__22157, G__22158, G__22159, G__22160);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22161 = a;
  var G__22162 = b;
  var G__22163 = c;
  var G__22164 = d;
  var G__22165 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__22161, G__22162, G__22163, G__22164, G__22165) : target_fn.call(null, G__22161, G__22162, G__22163, G__22164, G__22165);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22166 = a;
    var G__22167 = b;
    var G__22168 = c;
    var G__22169 = d;
    var G__22170 = e;
    var G__22171 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__22166, G__22167, G__22168, G__22169, G__22170, G__22171) : self__.dispatch_fn.call(null, G__22166, G__22167, G__22168, G__22169, G__22170, G__22171);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22172 = a;
  var G__22173 = b;
  var G__22174 = c;
  var G__22175 = d;
  var G__22176 = e;
  var G__22177 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__22172, G__22173, G__22174, G__22175, G__22176, G__22177) : target_fn.call(null, G__22172, G__22173, G__22174, G__22175, G__22176, G__22177);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22178 = a;
    var G__22179 = b;
    var G__22180 = c;
    var G__22181 = d;
    var G__22182 = e;
    var G__22183 = f;
    var G__22184 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__22178, G__22179, G__22180, G__22181, G__22182, G__22183, G__22184) : self__.dispatch_fn.call(null, G__22178, G__22179, G__22180, G__22181, G__22182, G__22183, G__22184);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22185 = a;
  var G__22186 = b;
  var G__22187 = c;
  var G__22188 = d;
  var G__22189 = e;
  var G__22190 = f;
  var G__22191 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__22185, G__22186, G__22187, G__22188, G__22189, G__22190, G__22191) : target_fn.call(null, G__22185, G__22186, G__22187, G__22188, G__22189, G__22190, G__22191);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22192 = a;
    var G__22193 = b;
    var G__22194 = c;
    var G__22195 = d;
    var G__22196 = e;
    var G__22197 = f;
    var G__22198 = g;
    var G__22199 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__22192, G__22193, G__22194, G__22195, G__22196, G__22197, G__22198, G__22199) : self__.dispatch_fn.call(null, G__22192, G__22193, G__22194, G__22195, G__22196, G__22197, G__22198, G__22199);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22200 = a;
  var G__22201 = b;
  var G__22202 = c;
  var G__22203 = d;
  var G__22204 = e;
  var G__22205 = f;
  var G__22206 = g;
  var G__22207 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__22200, G__22201, G__22202, G__22203, G__22204, G__22205, G__22206, G__22207) : target_fn.call(null, G__22200, G__22201, G__22202, G__22203, G__22204, G__22205, G__22206, G__22207);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22208 = a;
    var G__22209 = b;
    var G__22210 = c;
    var G__22211 = d;
    var G__22212 = e;
    var G__22213 = f;
    var G__22214 = g;
    var G__22215 = h;
    var G__22216 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__22208, G__22209, G__22210, G__22211, G__22212, G__22213, G__22214, G__22215, G__22216) : self__.dispatch_fn.call(null, G__22208, G__22209, G__22210, G__22211, G__22212, G__22213, G__22214, G__22215, G__22216);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22217 = a;
  var G__22218 = b;
  var G__22219 = c;
  var G__22220 = d;
  var G__22221 = e;
  var G__22222 = f;
  var G__22223 = g;
  var G__22224 = h;
  var G__22225 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__22217, G__22218, G__22219, G__22220, G__22221, G__22222, G__22223, G__22224, G__22225) : target_fn.call(null, G__22217, G__22218, G__22219, G__22220, G__22221, G__22222, G__22223, G__22224, G__22225);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22226 = a;
    var G__22227 = b;
    var G__22228 = c;
    var G__22229 = d;
    var G__22230 = e;
    var G__22231 = f;
    var G__22232 = g;
    var G__22233 = h;
    var G__22234 = i;
    var G__22235 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__22226, G__22227, G__22228, G__22229, G__22230, G__22231, G__22232, G__22233, G__22234, G__22235) : self__.dispatch_fn.call(null, G__22226, G__22227, G__22228, G__22229, G__22230, G__22231, G__22232, G__22233, G__22234, G__22235);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22236 = a;
  var G__22237 = b;
  var G__22238 = c;
  var G__22239 = d;
  var G__22240 = e;
  var G__22241 = f;
  var G__22242 = g;
  var G__22243 = h;
  var G__22244 = i;
  var G__22245 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__22236, G__22237, G__22238, G__22239, G__22240, G__22241, G__22242, G__22243, G__22244, G__22245) : target_fn.call(null, G__22236, G__22237, G__22238, G__22239, G__22240, G__22241, G__22242, G__22243, G__22244, G__22245);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22246 = a;
    var G__22247 = b;
    var G__22248 = c;
    var G__22249 = d;
    var G__22250 = e;
    var G__22251 = f;
    var G__22252 = g;
    var G__22253 = h;
    var G__22254 = i;
    var G__22255 = j;
    var G__22256 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__22246, G__22247, G__22248, G__22249, G__22250, G__22251, G__22252, G__22253, G__22254, G__22255, G__22256) : self__.dispatch_fn.call(null, G__22246, G__22247, G__22248, G__22249, G__22250, G__22251, G__22252, G__22253, G__22254, G__22255, G__22256);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22257 = a;
  var G__22258 = b;
  var G__22259 = c;
  var G__22260 = d;
  var G__22261 = e;
  var G__22262 = f;
  var G__22263 = g;
  var G__22264 = h;
  var G__22265 = i;
  var G__22266 = j;
  var G__22267 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__22257, G__22258, G__22259, G__22260, G__22261, G__22262, G__22263, G__22264, G__22265, G__22266, G__22267) : target_fn.call(null, G__22257, G__22258, G__22259, G__22260, G__22261, G__22262, G__22263, G__22264, G__22265, G__22266, G__22267);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22268 = a;
    var G__22269 = b;
    var G__22270 = c;
    var G__22271 = d;
    var G__22272 = e;
    var G__22273 = f;
    var G__22274 = g;
    var G__22275 = h;
    var G__22276 = i;
    var G__22277 = j;
    var G__22278 = k;
    var G__22279 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__22268, G__22269, G__22270, G__22271, G__22272, G__22273, G__22274, G__22275, G__22276, G__22277, G__22278, G__22279) : self__.dispatch_fn.call(null, G__22268, G__22269, G__22270, G__22271, G__22272, G__22273, G__22274, G__22275, G__22276, G__22277, G__22278, G__22279);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22280 = a;
  var G__22281 = b;
  var G__22282 = c;
  var G__22283 = d;
  var G__22284 = e;
  var G__22285 = f;
  var G__22286 = g;
  var G__22287 = h;
  var G__22288 = i;
  var G__22289 = j;
  var G__22290 = k;
  var G__22291 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__22280, G__22281, G__22282, G__22283, G__22284, G__22285, G__22286, G__22287, G__22288, G__22289, G__22290, G__22291) : target_fn.call(null, G__22280, G__22281, G__22282, G__22283, G__22284, G__22285, G__22286, G__22287, G__22288, G__22289, G__22290, G__22291);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22292 = a;
    var G__22293 = b;
    var G__22294 = c;
    var G__22295 = d;
    var G__22296 = e;
    var G__22297 = f;
    var G__22298 = g;
    var G__22299 = h;
    var G__22300 = i;
    var G__22301 = j;
    var G__22302 = k;
    var G__22303 = l;
    var G__22304 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__22292, G__22293, G__22294, G__22295, G__22296, G__22297, G__22298, G__22299, G__22300, G__22301, G__22302, G__22303, G__22304) : self__.dispatch_fn.call(null, G__22292, G__22293, G__22294, G__22295, G__22296, G__22297, G__22298, G__22299, G__22300, G__22301, G__22302, G__22303, G__22304);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22305 = a;
  var G__22306 = b;
  var G__22307 = c;
  var G__22308 = d;
  var G__22309 = e;
  var G__22310 = f;
  var G__22311 = g;
  var G__22312 = h;
  var G__22313 = i;
  var G__22314 = j;
  var G__22315 = k;
  var G__22316 = l;
  var G__22317 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__22305, G__22306, G__22307, G__22308, G__22309, G__22310, G__22311, G__22312, G__22313, G__22314, G__22315, G__22316, G__22317) : target_fn.call(null, G__22305, G__22306, G__22307, G__22308, G__22309, G__22310, G__22311, G__22312, G__22313, G__22314, G__22315, G__22316, G__22317);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22318 = a;
    var G__22319 = b;
    var G__22320 = c;
    var G__22321 = d;
    var G__22322 = e;
    var G__22323 = f;
    var G__22324 = g;
    var G__22325 = h;
    var G__22326 = i;
    var G__22327 = j;
    var G__22328 = k;
    var G__22329 = l;
    var G__22330 = m;
    var G__22331 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__22318, G__22319, G__22320, G__22321, G__22322, G__22323, G__22324, G__22325, G__22326, G__22327, G__22328, G__22329, G__22330, G__22331) : self__.dispatch_fn.call(null, G__22318, G__22319, G__22320, G__22321, G__22322, G__22323, G__22324, G__22325, G__22326, G__22327, G__22328, G__22329, G__22330, G__22331);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22332 = a;
  var G__22333 = b;
  var G__22334 = c;
  var G__22335 = d;
  var G__22336 = e;
  var G__22337 = f;
  var G__22338 = g;
  var G__22339 = h;
  var G__22340 = i;
  var G__22341 = j;
  var G__22342 = k;
  var G__22343 = l;
  var G__22344 = m;
  var G__22345 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__22332, G__22333, G__22334, G__22335, G__22336, G__22337, G__22338, G__22339, G__22340, G__22341, G__22342, G__22343, G__22344, G__22345) : target_fn.call(null, G__22332, G__22333, G__22334, G__22335, G__22336, G__22337, G__22338, G__22339, G__22340, G__22341, G__22342, G__22343, G__22344, G__22345);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22346 = a;
    var G__22347 = b;
    var G__22348 = c;
    var G__22349 = d;
    var G__22350 = e;
    var G__22351 = f;
    var G__22352 = g;
    var G__22353 = h;
    var G__22354 = i;
    var G__22355 = j;
    var G__22356 = k;
    var G__22357 = l;
    var G__22358 = m;
    var G__22359 = n;
    var G__22360 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__22346, G__22347, G__22348, G__22349, G__22350, G__22351, G__22352, G__22353, G__22354, G__22355, G__22356, G__22357, G__22358, G__22359, G__22360) : self__.dispatch_fn.call(null, G__22346, G__22347, G__22348, G__22349, G__22350, G__22351, G__22352, G__22353, G__22354, G__22355, G__22356, G__22357, G__22358, G__22359, G__22360);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22361 = a;
  var G__22362 = b;
  var G__22363 = c;
  var G__22364 = d;
  var G__22365 = e;
  var G__22366 = f;
  var G__22367 = g;
  var G__22368 = h;
  var G__22369 = i;
  var G__22370 = j;
  var G__22371 = k;
  var G__22372 = l;
  var G__22373 = m;
  var G__22374 = n;
  var G__22375 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__22361, G__22362, G__22363, G__22364, G__22365, G__22366, G__22367, G__22368, G__22369, G__22370, G__22371, G__22372, G__22373, G__22374, G__22375) : target_fn.call(null, G__22361, G__22362, G__22363, G__22364, G__22365, G__22366, G__22367, G__22368, G__22369, G__22370, G__22371, G__22372, G__22373, G__22374, G__22375);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22376 = a;
    var G__22377 = b;
    var G__22378 = c;
    var G__22379 = d;
    var G__22380 = e;
    var G__22381 = f;
    var G__22382 = g;
    var G__22383 = h;
    var G__22384 = i;
    var G__22385 = j;
    var G__22386 = k;
    var G__22387 = l;
    var G__22388 = m;
    var G__22389 = n;
    var G__22390 = o;
    var G__22391 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__22376, G__22377, G__22378, G__22379, G__22380, G__22381, G__22382, G__22383, G__22384, G__22385, G__22386, G__22387, G__22388, G__22389, G__22390, G__22391) : self__.dispatch_fn.call(null, G__22376, G__22377, G__22378, G__22379, G__22380, G__22381, G__22382, G__22383, G__22384, G__22385, G__22386, G__22387, G__22388, G__22389, G__22390, G__22391);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22392 = a;
  var G__22393 = b;
  var G__22394 = c;
  var G__22395 = d;
  var G__22396 = e;
  var G__22397 = f;
  var G__22398 = g;
  var G__22399 = h;
  var G__22400 = i;
  var G__22401 = j;
  var G__22402 = k;
  var G__22403 = l;
  var G__22404 = m;
  var G__22405 = n;
  var G__22406 = o;
  var G__22407 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__22392, G__22393, G__22394, G__22395, G__22396, G__22397, G__22398, G__22399, G__22400, G__22401, G__22402, G__22403, G__22404, G__22405, G__22406, G__22407) : target_fn.call(null, G__22392, G__22393, G__22394, G__22395, G__22396, G__22397, G__22398, G__22399, G__22400, G__22401, G__22402, G__22403, G__22404, G__22405, G__22406, G__22407);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22408 = a;
    var G__22409 = b;
    var G__22410 = c;
    var G__22411 = d;
    var G__22412 = e;
    var G__22413 = f;
    var G__22414 = g;
    var G__22415 = h;
    var G__22416 = i;
    var G__22417 = j;
    var G__22418 = k;
    var G__22419 = l;
    var G__22420 = m;
    var G__22421 = n;
    var G__22422 = o;
    var G__22423 = p;
    var G__22424 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__22408, G__22409, G__22410, G__22411, G__22412, G__22413, G__22414, G__22415, G__22416, G__22417, G__22418, G__22419, G__22420, G__22421, G__22422, G__22423, G__22424) : self__.dispatch_fn.call(null, G__22408, G__22409, G__22410, G__22411, G__22412, G__22413, G__22414, G__22415, G__22416, G__22417, G__22418, G__22419, G__22420, G__22421, G__22422, G__22423, G__22424);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22425 = a;
  var G__22426 = b;
  var G__22427 = c;
  var G__22428 = d;
  var G__22429 = e;
  var G__22430 = f;
  var G__22431 = g;
  var G__22432 = h;
  var G__22433 = i;
  var G__22434 = j;
  var G__22435 = k;
  var G__22436 = l;
  var G__22437 = m;
  var G__22438 = n;
  var G__22439 = o;
  var G__22440 = p;
  var G__22441 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__22425, G__22426, G__22427, G__22428, G__22429, G__22430, G__22431, G__22432, G__22433, G__22434, G__22435, G__22436, G__22437, G__22438, G__22439, G__22440, G__22441) : target_fn.call(null, G__22425, G__22426, G__22427, G__22428, G__22429, G__22430, G__22431, G__22432, G__22433, G__22434, G__22435, G__22436, G__22437, G__22438, G__22439, G__22440, G__22441);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22442 = a;
    var G__22443 = b;
    var G__22444 = c;
    var G__22445 = d;
    var G__22446 = e;
    var G__22447 = f;
    var G__22448 = g;
    var G__22449 = h;
    var G__22450 = i;
    var G__22451 = j;
    var G__22452 = k;
    var G__22453 = l;
    var G__22454 = m;
    var G__22455 = n;
    var G__22456 = o;
    var G__22457 = p;
    var G__22458 = q;
    var G__22459 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__22442, G__22443, G__22444, G__22445, G__22446, G__22447, G__22448, G__22449, G__22450, G__22451, G__22452, G__22453, G__22454, G__22455, G__22456, G__22457, G__22458, G__22459) : self__.dispatch_fn.call(null, G__22442, G__22443, G__22444, G__22445, G__22446, G__22447, G__22448, G__22449, G__22450, G__22451, G__22452, G__22453, G__22454, G__22455, G__22456, G__22457, G__22458, G__22459);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22460 = a;
  var G__22461 = b;
  var G__22462 = c;
  var G__22463 = d;
  var G__22464 = e;
  var G__22465 = f;
  var G__22466 = g;
  var G__22467 = h;
  var G__22468 = i;
  var G__22469 = j;
  var G__22470 = k;
  var G__22471 = l;
  var G__22472 = m;
  var G__22473 = n;
  var G__22474 = o;
  var G__22475 = p;
  var G__22476 = q;
  var G__22477 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__22460, G__22461, G__22462, G__22463, G__22464, G__22465, G__22466, G__22467, G__22468, G__22469, G__22470, G__22471, G__22472, G__22473, G__22474, G__22475, G__22476, G__22477) : target_fn.call(null, G__22460, G__22461, G__22462, G__22463, G__22464, G__22465, G__22466, G__22467, G__22468, G__22469, G__22470, G__22471, G__22472, G__22473, G__22474, G__22475, G__22476, G__22477);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22478 = a;
    var G__22479 = b;
    var G__22480 = c;
    var G__22481 = d;
    var G__22482 = e;
    var G__22483 = f;
    var G__22484 = g;
    var G__22485 = h;
    var G__22486 = i;
    var G__22487 = j;
    var G__22488 = k;
    var G__22489 = l;
    var G__22490 = m;
    var G__22491 = n;
    var G__22492 = o;
    var G__22493 = p;
    var G__22494 = q;
    var G__22495 = r;
    var G__22496 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__22478, G__22479, G__22480, G__22481, G__22482, G__22483, G__22484, G__22485, G__22486, G__22487, G__22488, G__22489, G__22490, G__22491, G__22492, G__22493, G__22494, G__22495, G__22496) : self__.dispatch_fn.call(null, G__22478, G__22479, G__22480, G__22481, G__22482, G__22483, G__22484, G__22485, G__22486, G__22487, G__22488, G__22489, G__22490, G__22491, G__22492, G__22493, G__22494, 
    G__22495, G__22496);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22497 = a;
  var G__22498 = b;
  var G__22499 = c;
  var G__22500 = d;
  var G__22501 = e;
  var G__22502 = f;
  var G__22503 = g;
  var G__22504 = h;
  var G__22505 = i;
  var G__22506 = j;
  var G__22507 = k;
  var G__22508 = l;
  var G__22509 = m;
  var G__22510 = n;
  var G__22511 = o;
  var G__22512 = p;
  var G__22513 = q;
  var G__22514 = r;
  var G__22515 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__22497, G__22498, G__22499, G__22500, G__22501, G__22502, G__22503, G__22504, G__22505, G__22506, G__22507, G__22508, G__22509, G__22510, G__22511, G__22512, G__22513, G__22514, G__22515) : target_fn.call(null, G__22497, G__22498, G__22499, G__22500, G__22501, G__22502, G__22503, G__22504, G__22505, G__22506, G__22507, G__22508, G__22509, G__22510, G__22511, G__22512, G__22513, G__22514, G__22515);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22516 = a;
    var G__22517 = b;
    var G__22518 = c;
    var G__22519 = d;
    var G__22520 = e;
    var G__22521 = f;
    var G__22522 = g;
    var G__22523 = h;
    var G__22524 = i;
    var G__22525 = j;
    var G__22526 = k;
    var G__22527 = l;
    var G__22528 = m;
    var G__22529 = n;
    var G__22530 = o;
    var G__22531 = p;
    var G__22532 = q;
    var G__22533 = r;
    var G__22534 = s;
    var G__22535 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__22516, G__22517, G__22518, G__22519, G__22520, G__22521, G__22522, G__22523, G__22524, G__22525, G__22526, G__22527, G__22528, G__22529, G__22530, G__22531, G__22532, G__22533, G__22534, G__22535) : self__.dispatch_fn.call(null, G__22516, G__22517, G__22518, G__22519, G__22520, G__22521, G__22522, G__22523, G__22524, G__22525, G__22526, G__22527, G__22528, G__22529, G__22530, G__22531, 
    G__22532, G__22533, G__22534, G__22535);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22536 = a;
  var G__22537 = b;
  var G__22538 = c;
  var G__22539 = d;
  var G__22540 = e;
  var G__22541 = f;
  var G__22542 = g;
  var G__22543 = h;
  var G__22544 = i;
  var G__22545 = j;
  var G__22546 = k;
  var G__22547 = l;
  var G__22548 = m;
  var G__22549 = n;
  var G__22550 = o;
  var G__22551 = p;
  var G__22552 = q;
  var G__22553 = r;
  var G__22554 = s;
  var G__22555 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__22536, G__22537, G__22538, G__22539, G__22540, G__22541, G__22542, G__22543, G__22544, G__22545, G__22546, G__22547, G__22548, G__22549, G__22550, G__22551, G__22552, G__22553, G__22554, G__22555) : target_fn.call(null, G__22536, G__22537, G__22538, G__22539, G__22540, G__22541, G__22542, G__22543, G__22544, G__22545, G__22546, G__22547, G__22548, G__22549, G__22550, G__22551, G__22552, G__22553, G__22554, 
  G__22555);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__22557 = self__.uuid;
  var G__22558 = other.uuid;
  return goog.array.defaultCompare(G__22557, G__22558);
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__22559 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__22559);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write(writer__4937__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error;
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info() {
  var G__22561 = arguments.length;
  switch(G__22561) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__22567 = x;
      var G__22568 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__22567, G__22568) : pred.call(null, G__22567, G__22568);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__22569 = y;
        var G__22570 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__22569, G__22570) : pred.call(null, G__22569, G__22570);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("cljs.core.match");
goog.require("cljs.core");
cljs.core.match.backtrack = new Error;
goog.provide("rerenderer.core");
goog.require("cljs.core");
goog.require("cljs.core.match");
rerenderer.core.IPlatform = function() {
  var obj10748 = {};
  return obj10748;
}();
rerenderer.core.render_BANG_ = function rerenderer$core$render_BANG_(this$, ctx) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.rerenderer$core$IPlatform$render_BANG_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.rerenderer$core$IPlatform$render_BANG_$arity$2(this$, ctx);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = rerenderer.core.render_BANG_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = rerenderer.core.render_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPlatform.render!", this$);
        }
      }
    }().call(null, this$, ctx);
  }
};
rerenderer.core.listen_BANG_ = function rerenderer$core$listen_BANG_(this$, event, ch) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.rerenderer$core$IPlatform$listen_BANG_$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.rerenderer$core$IPlatform$listen_BANG_$arity$3(this$, event, ch);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = rerenderer.core.listen_BANG_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = rerenderer.core.listen_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPlatform.listen!", this$);
        }
      }
    }().call(null, this$, event, ch);
  }
};
rerenderer.core.image = function rerenderer$core$image(this$, src) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.rerenderer$core$IPlatform$image$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.rerenderer$core$IPlatform$image$arity$2(this$, src);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = rerenderer.core.image[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = rerenderer.core.image["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPlatform.image", this$);
        }
      }
    }().call(null, this$, src);
  }
};
rerenderer.core.sound = function rerenderer$core$sound(this$, src) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.rerenderer$core$IPlatform$sound$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.rerenderer$core$IPlatform$sound$arity$2(this$, src);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = rerenderer.core.sound[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = rerenderer.core.sound["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPlatform.sound", this$);
        }
      }
    }().call(null, this$, src);
  }
};
rerenderer.core.play_BANG_ = function rerenderer$core$play_BANG_(this$, sound) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.rerenderer$core$IPlatform$play_BANG_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.rerenderer$core$IPlatform$play_BANG_$arity$2(this$, sound);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = rerenderer.core.play_BANG_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = rerenderer.core.play_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPlatform.play!", this$);
        }
      }
    }().call(null, this$, sound);
  }
};
rerenderer.core.render_state_BANG_ = function rerenderer$core$render_state_BANG_(platform, ctx, root, state, options) {
  var last_draw = cljs.core.deref.call(null, ctx);
  cljs.core.reset_BANG_.call(null, ctx, cljs.core.PersistentVector.EMPTY);
  root.call(null, ctx, state, options);
  if (cljs.core._EQ_.call(null, last_draw, cljs.core.deref.call(null, ctx))) {
    return null;
  } else {
    return rerenderer.core.render_BANG_.call(null, platform, cljs.core.deref.call(null, ctx));
  }
};
rerenderer.core.init_BANG_ = function rerenderer$core$init_BANG_(platform, root, state, options) {
  var ctx = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
  cljs.core.add_watch.call(null, state, new cljs.core.Keyword(null, "drawer", "drawer", -1346127858), function(ctx) {
    return function(p1__10750_SHARP_, p2__10751_SHARP_, p3__10752_SHARP_, p4__10749_SHARP_) {
      return rerenderer.core.render_state_BANG_.call(null, platform, ctx, root, p4__10749_SHARP_, options);
    };
  }(ctx));
  return rerenderer.core.render_state_BANG_.call(null, platform, ctx, root, cljs.core.deref.call(null, state), options);
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj17231 = {};
  return obj17231;
}();
cljs.core.async.impl.protocols.take_BANG_ = function cljs$core$async$impl$protocols$take_BANG_(port, fn1_handler) {
  if (function() {
    var and__4345__auto__ = port;
    if (and__4345__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4993__auto__ = port == null ? null : port;
    return function() {
      var or__4357__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj17233 = {};
  return obj17233;
}();
cljs.core.async.impl.protocols.put_BANG_ = function cljs$core$async$impl$protocols$put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__4345__auto__ = port;
    if (and__4345__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4993__auto__ = port == null ? null : port;
    return function() {
      var or__4357__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj17235 = {};
  return obj17235;
}();
cljs.core.async.impl.protocols.close_BANG_ = function cljs$core$async$impl$protocols$close_BANG_(chan) {
  if (function() {
    var and__4345__auto__ = chan;
    if (and__4345__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4993__auto__ = chan == null ? null : chan;
    return function() {
      var or__4357__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function cljs$core$async$impl$protocols$closed_QMARK_(chan) {
  if (function() {
    var and__4345__auto__ = chan;
    if (and__4345__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4993__auto__ = chan == null ? null : chan;
    return function() {
      var or__4357__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj17237 = {};
  return obj17237;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function cljs$core$async$impl$protocols$active_QMARK_(h) {
  if (function() {
    var and__4345__auto__ = h;
    if (and__4345__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4993__auto__ = h == null ? null : h;
    return function() {
      var or__4357__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function cljs$core$async$impl$protocols$commit(h) {
  if (function() {
    var and__4345__auto__ = h;
    if (and__4345__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4993__auto__ = h == null ? null : h;
    return function() {
      var or__4357__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj17239 = {};
  return obj17239;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function cljs$core$async$impl$protocols$full_QMARK_(b) {
  if (function() {
    var and__4345__auto__ = b;
    if (and__4345__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4993__auto__ = b == null ? null : b;
    return function() {
      var or__4357__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function cljs$core$async$impl$protocols$remove_BANG_(b) {
  if (function() {
    var and__4345__auto__ = b;
    if (and__4345__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4993__auto__ = b == null ? null : b;
    return function() {
      var or__4357__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function cljs$core$async$impl$protocols$add_BANG__STAR_(b, itm) {
  if (function() {
    var and__4345__auto__ = b;
    if (and__4345__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4993__auto__ = b == null ? null : b;
    return function() {
      var or__4357__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function cljs$core$async$impl$protocols$add_BANG_() {
  var G__17241 = arguments.length;
  switch(G__17241) {
    case 1:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1 = function(b) {
  return b;
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2 = function(b, itm) {
  if (!(itm == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
  }
  return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
};
cljs.core.async.impl.protocols.add_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj17244 = {};
  return obj17244;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function cljs$core$async$impl$ioc_helpers$aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function cljs$core$async$impl$ioc_helpers$aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function cljs$core$async$impl$ioc_helpers$finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function cljs$core$async$impl$ioc_helpers$fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t17189 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t17189 = function(f, fn_handler, meta17190) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta17190 = meta17190;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t17189.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t17189.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t17189.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t17189.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17191) {
      var self__ = this;
      var _17191__$1 = this;
      return self__.meta17190;
    };
    cljs.core.async.impl.ioc_helpers.t17189.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17191, meta17190__$1) {
      var self__ = this;
      var _17191__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t17189(self__.f, self__.fn_handler, meta17190__$1);
    };
    cljs.core.async.impl.ioc_helpers.t17189.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t17189.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t17189";
    cljs.core.async.impl.ioc_helpers.t17189.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
      return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async.impl.ioc-helpers/t17189");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t17189 = function cljs$core$async$impl$ioc_helpers$fn_handler_$___GT_t17189(f__$1, fn_handler__$1, meta17190) {
      return new cljs.core.async.impl.ioc_helpers.t17189(f__$1, fn_handler__$1, meta17190);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t17189(f, cljs$core$async$impl$ioc_helpers$fn_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function cljs$core$async$impl$ioc_helpers$run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function cljs$core$async$impl$ioc_helpers$run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e17193) {
    if (e17193 instanceof Object) {
      var ex = e17193;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e17193;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function cljs$core$async$impl$ioc_helpers$take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_17196_17198 = state;
    statearr_17196_17198[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_17196_17198[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_17197_17199 = state;
    statearr_17197_17199[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_17197_17199[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function cljs$core$async$impl$ioc_helpers$put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_17202_17204 = state;
    statearr_17202_17204[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_17202_17204[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_17203_17205 = state;
    statearr_17203_17205[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_17203_17205[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function cljs$core$async$impl$ioc_helpers$return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4952__auto__, k__4953__auto__) {
  var self__ = this;
  var this__4952__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4952__auto____$1, k__4953__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4954__auto__, k17207, else__4955__auto__) {
  var self__ = this;
  var this__4954__auto____$1 = this;
  var G__17209 = k17207 instanceof cljs.core.Keyword ? k17207.fqn : null;
  switch(G__17209) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k17207, else__4955__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4966__auto__, writer__4967__auto__, opts__4968__auto__) {
  var self__ = this;
  var this__4966__auto____$1 = this;
  var pr_pair__4969__auto__ = function(this__4966__auto____$1) {
    return function(keyval__4970__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4967__auto__, cljs.core.pr_writer, "", " ", "", opts__4968__auto__, keyval__4970__auto__);
    };
  }(this__4966__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4967__auto__, pr_pair__4969__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4968__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4950__auto__) {
  var self__ = this;
  var this__4950__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4946__auto__) {
  var self__ = this;
  var this__4946__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4956__auto__) {
  var self__ = this;
  var this__4956__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4947__auto__) {
  var self__ = this;
  var this__4947__auto____$1 = this;
  var h__4773__auto__ = self__.__hash;
  if (!(h__4773__auto__ == null)) {
    return h__4773__auto__;
  } else {
    var h__4773__auto____$1 = cljs.core.hash_imap.call(null, this__4947__auto____$1);
    self__.__hash = h__4773__auto____$1;
    return h__4773__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4948__auto__, other__4949__auto__) {
  var self__ = this;
  var this__4948__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4345__auto__ = other__4949__auto__;
    if (cljs.core.truth_(and__4345__auto__)) {
      var and__4345__auto____$1 = this__4948__auto____$1.constructor === other__4949__auto__.constructor;
      if (and__4345__auto____$1) {
        return cljs.core.equiv_map.call(null, this__4948__auto____$1, other__4949__auto__);
      } else {
        return and__4345__auto____$1;
      }
    } else {
      return and__4345__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4961__auto__, k__4962__auto__) {
  var self__ = this;
  var this__4961__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4962__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4961__auto____$1), self__.__meta), k__4962__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4962__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4959__auto__, k__4960__auto__, G__17206) {
  var self__ = this;
  var this__4959__auto____$1 = this;
  var pred__17210 = cljs.core.keyword_identical_QMARK_;
  var expr__17211 = k__4960__auto__;
  if (cljs.core.truth_(pred__17210.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__17211))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__17206, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__17210.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__17211))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__17206, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__17210.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__17211))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__17206, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__17210.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__17211))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__17206, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__17210.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__17211))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__17206, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4960__auto__, G__17206), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4964__auto__) {
  var self__ = this;
  var this__4964__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4951__auto__, G__17206) {
  var self__ = this;
  var this__4951__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__17206, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4957__auto__, entry__4958__auto__) {
  var self__ = this;
  var this__4957__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4958__auto__)) {
    return cljs.core._assoc.call(null, this__4957__auto____$1, cljs.core._nth.call(null, entry__4958__auto__, 0), cljs.core._nth.call(null, entry__4958__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4957__auto____$1, entry__4958__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4986__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4986__auto__, writer__4987__auto__) {
  return cljs.core._write.call(null, writer__4987__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$__GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$map__GT_ExceptionFrame(G__17208) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__17208), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__17208), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__17208), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__17208), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__17208), null, cljs.core.dissoc.call(null, G__17208, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function cljs$core$async$impl$ioc_helpers$add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_17215 = state;
  statearr_17215[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_17215;
};
cljs.core.async.impl.ioc_helpers.process_exception = function cljs$core$async$impl$ioc_helpers$process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__4345__auto__ = exception;
      if (cljs.core.truth_(and__4345__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__4345__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__4345__auto__ = exception;
        if (cljs.core.truth_(and__4345__auto__)) {
          var and__4345__auto____$1 = catch_block;
          if (cljs.core.truth_(and__4345__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__4345__auto____$1;
          }
        } else {
          return and__4345__auto__;
        }
      }())) {
        var statearr_17221 = state;
        statearr_17221[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_17221[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_17221[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_17221[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_17221;
      } else {
        if (cljs.core.truth_(function() {
          var and__4345__auto__ = exception;
          if (cljs.core.truth_(and__4345__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__4345__auto__;
          }
        }())) {
          var statearr_17222_17226 = state;
          statearr_17222_17226[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__17227 = state;
          state = G__17227;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__4345__auto__ = exception;
            if (cljs.core.truth_(and__4345__auto__)) {
              var and__4345__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__4345__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4345__auto____$1;
              }
            } else {
              return and__4345__auto__;
            }
          }())) {
            var statearr_17223 = state;
            statearr_17223[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_17223[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_17223;
          } else {
            if (cljs.core.truth_(function() {
              var and__4345__auto__ = cljs.core.not.call(null, exception);
              if (and__4345__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4345__auto__;
              }
            }())) {
              var statearr_17224 = state;
              statearr_17224[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_17224[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_17224;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_17225 = state;
                statearr_17225[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_17225[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_17225;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function cljs$core$async$impl$buffers$acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__17247 = cnt + 1;
      cnt = G__17247;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__5242__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__5242__auto__) {
      var v_17248 = this$.pop();
      if (keep_QMARK_.call(null, v_17248)) {
        this$.unshift(v_17248);
      } else {
      }
      var G__17249 = x + 1;
      x = G__17249;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function cljs$core$async$impl$buffers$__GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function cljs$core$async$impl$buffers$ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function cljs$core$async$impl$buffers$__GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function cljs$core$async$impl$buffers$fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function cljs$core$async$impl$buffers$__GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function cljs$core$async$impl$buffers$dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function cljs$core$async$impl$buffers$__GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function cljs$core$async$impl$buffers$sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("goog.async.nextTick");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function cljs$core$async$impl$dispatch$process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_17252 = 0;
  while (true) {
    var m_17253 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_17253 == null) {
    } else {
      m_17253.call(null);
      if (count_17252 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__17254 = count_17252 + 1;
        count_17252 = G__17254;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function cljs$core$async$impl$dispatch$queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__4345__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__4345__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__4345__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function cljs$core$async$impl$dispatch$run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function cljs$core$async$impl$dispatch$queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function cljs$core$async$impl$channels$box(val) {
  if (typeof cljs.core.async.impl.channels.t17260 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t17260 = function(val, box, meta17261) {
      this.val = val;
      this.box = box;
      this.meta17261 = meta17261;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t17260.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t17260.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17262) {
      var self__ = this;
      var _17262__$1 = this;
      return self__.meta17261;
    };
    cljs.core.async.impl.channels.t17260.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17262, meta17261__$1) {
      var self__ = this;
      var _17262__$1 = this;
      return new cljs.core.async.impl.channels.t17260(self__.val, self__.box, meta17261__$1);
    };
    cljs.core.async.impl.channels.t17260.cljs$lang$type = true;
    cljs.core.async.impl.channels.t17260.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t17260";
    cljs.core.async.impl.channels.t17260.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
      return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async.impl.channels/t17260");
    };
    cljs.core.async.impl.channels.__GT_t17260 = function cljs$core$async$impl$channels$box_$___GT_t17260(val__$1, box__$1, meta17261) {
      return new cljs.core.async.impl.channels.t17260(val__$1, box__$1, meta17261);
    };
  }
  return new cljs.core.async.impl.channels.t17260(val, cljs$core$async$impl$channels$box, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function cljs$core$async$impl$channels$__GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function cljs$core$async$impl$channels$put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
  var obj17264 = {};
  return obj17264;
}();
cljs.core.async.impl.channels.abort = function cljs$core$async$impl$channels$abort(this$) {
  if (function() {
    var and__4345__auto__ = this$;
    if (and__4345__auto__) {
      return this$.cljs$core$async$impl$channels$MMC$abort$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4993__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4357__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.impl.channels.abort["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__4345__auto__ = self__.buf;
      if (cljs.core.truth_(and__4345__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__4345__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_17265 = self__.takes.pop();
      if (taker_17265 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_17265)) {
          var take_cb_17266 = cljs.core.async.impl.protocols.commit.call(null, taker_17265);
          var val_17267 = cljs.core.truth_(function() {
            var and__4345__auto__ = self__.buf;
            if (cljs.core.truth_(and__4345__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__4345__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_17266, val_17267, taker_17265, this$__$1) {
            return function() {
              return take_cb_17266.call(null, val_17267);
            };
          }(take_cb_17266, val_17267, taker_17265, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_17268 = self__.puts.pop();
          if (putter_17268 == null) {
          } else {
            var put_handler_17269 = putter_17268.handler;
            var val_17270 = putter_17268.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_17269)) {
              var put_cb_17271 = cljs.core.async.impl.protocols.commit.call(null, put_handler_17269);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_17271, put_handler_17269, val_17270, putter_17268, _, retval, this$__$1) {
                return function() {
                  return put_cb_17271.call(null, true);
                };
              }(put_cb_17271, put_handler_17269, val_17270, putter_17268, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_17270))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__4345__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__4345__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__4345__auto__;
            }
          }())) {
            var has_val = function() {
              var and__4345__auto__ = self__.buf;
              if (cljs.core.truth_(and__4345__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__4345__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__4345__auto__ = self__.buf;
      if (cljs.core.truth_(and__4345__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__4345__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_17272 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_17272)) {
            var take_cb_17273 = cljs.core.async.impl.protocols.commit.call(null, taker_17272);
            var val_17274__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_17273, val_17274__$1, taker_17272, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_17273.call(null, val_17274__$1);
              };
            }(take_cb_17273, val_17274__$1, taker_17272, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_17275 = self__.puts.pop();
    if (putter_17275 == null) {
    } else {
      var put_handler_17276 = putter_17275.handler;
      var val_17277 = putter_17275.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_17276)) {
        var put_cb_17278 = cljs.core.async.impl.protocols.commit.call(null, put_handler_17276);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_17278, put_handler_17276, val_17277, putter_17275, this$__$1) {
          return function() {
            return put_cb_17278.call(null, true);
          };
        }(put_cb_17278, put_handler_17276, val_17277, putter_17275, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function cljs$core$async$impl$channels$__GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function cljs$core$async$impl$channels$ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function cljs$core$async$impl$channels$handle(buf, exh, t) {
  var else$ = function() {
    var or__4357__auto__ = exh;
    if (cljs.core.truth_(or__4357__auto__)) {
      return or__4357__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function cljs$core$async$impl$channels$chan() {
  var G__17280 = arguments.length;
  switch(G__17280) {
    case 1:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1 = function(buf) {
  return cljs.core.async.impl.channels.chan.call(null, buf, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2 = function(buf, xform) {
  return cljs.core.async.impl.channels.chan.call(null, buf, xform, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3 = function(buf, xform, exh) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
    var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
    return function(add_BANG_) {
      return function() {
        var G__17284 = null;
        var G__17284__1 = function(buf__$1) {
          try {
            return add_BANG_.call(null, buf__$1);
          } catch (e17281) {
            var t = e17281;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        var G__17284__2 = function(buf__$1, val) {
          try {
            return add_BANG_.call(null, buf__$1, val);
          } catch (e17282) {
            var t = e17282;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        G__17284 = function(buf__$1, val) {
          switch(arguments.length) {
            case 1:
              return G__17284__1.call(this, buf__$1);
            case 2:
              return G__17284__2.call(this, buf__$1, val);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__17284.cljs$core$IFn$_invoke$arity$1 = G__17284__1;
        G__17284.cljs$core$IFn$_invoke$arity$2 = G__17284__2;
        return G__17284;
      }();
    }(add_BANG_);
  }());
};
cljs.core.async.impl.channels.chan.cljs$lang$maxFixedArity = 3;
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function cljs$core$async$impl$timers$random_level() {
  var G__17152 = arguments.length;
  switch(G__17152) {
    case 0:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.impl.timers.random_level.call(null, 0);
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1 = function(level) {
  while (true) {
    if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
      var G__17154 = level + 1;
      level = G__17154;
      continue;
    } else {
      return level;
    }
    break;
  }
};
cljs.core.async.impl.timers.random_level.cljs$lang$maxFixedArity = 1;
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function cljs$core$async$impl$timers$__GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function cljs$core$async$impl$timers$skip_list_node() {
  var G__17156 = arguments.length;
  switch(G__17156) {
    case 1:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1 = function(level) {
  return cljs.core.async.impl.timers.skip_list_node.call(null, null, null, level);
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3 = function(k, v, level) {
  var arr = new Array(level + 1);
  var i_17158 = 0;
  while (true) {
    if (i_17158 < arr.length) {
      arr[i_17158] = null;
      var G__17159 = i_17158 + 1;
      i_17158 = G__17159;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
};
cljs.core.async.impl.timers.skip_list_node.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.timers.least_greater_node = function cljs$core$async$impl$timers$least_greater_node() {
  var G__17161 = arguments.length;
  switch(G__17161) {
    case 3:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3 = function(x, k, level) {
  return cljs.core.async.impl.timers.least_greater_node.call(null, x, k, level, null);
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4 = function(x, k, level, update) {
  while (true) {
    if (!(level < 0)) {
      var x__$1 = function() {
        var x__$1 = x;
        while (true) {
          var temp__4124__auto__ = x__$1.forward[level];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var x_SINGLEQUOTE_ = temp__4124__auto__;
            if (x_SINGLEQUOTE_.key < k) {
              var G__17163 = x_SINGLEQUOTE_;
              x__$1 = G__17163;
              continue;
            } else {
              return x__$1;
            }
          } else {
            return x__$1;
          }
          break;
        }
      }();
      if (update == null) {
      } else {
        update[level] = x__$1;
      }
      var G__17164 = x__$1;
      var G__17165 = k;
      var G__17166 = level - 1;
      var G__17167 = update;
      x = G__17164;
      k = G__17165;
      level = G__17166;
      update = G__17167;
      continue;
    } else {
      return x;
    }
    break;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$lang$maxFixedArity = 4;
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function cljs$core$async$impl$timers$iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), cljs$core$async$impl$timers$iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_17168 = self__.level + 1;
      while (true) {
        if (i_17168 <= new_level + 1) {
          update[i_17168] = self__.header;
          var G__17169 = i_17168 + 1;
          i_17168 = G__17169;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_17170 = 0;
    while (true) {
      if (i_17170 <= self__.level) {
        var links_17171 = update[i_17170].forward;
        if (links_17171[i_17170] === x__$1) {
          links_17171[i_17170] = x__$1.forward[i_17170];
          var G__17172 = i_17170 + 1;
          i_17170 = G__17172;
          continue;
        } else {
          var G__17173 = i_17170 + 1;
          i_17170 = G__17173;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__17174 = x_SINGLEQUOTE_;
              x__$1 = G__17174;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__17175 = nx;
        var G__17176 = level__$1 - 1;
        x = G__17175;
        level__$1 = G__17176;
        continue;
      } else {
        var G__17177 = x;
        var G__17178 = level__$1 - 1;
        x = G__17177;
        level__$1 = G__17178;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__17179 = x_SINGLEQUOTE_;
              x__$1 = G__17179;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__17180 = nx;
        var G__17181 = level__$1 - 1;
        x = G__17180;
        level__$1 = G__17181;
        continue;
      } else {
        var G__17182 = x;
        var G__17183 = level__$1 - 1;
        x = G__17182;
        level__$1 = G__17183;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
  return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function cljs$core$async$impl$timers$__GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function cljs$core$async$impl$timers$skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function cljs$core$async$impl$timers$timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__4357__auto__ = cljs.core.truth_(function() {
    var and__4345__auto__ = me;
    if (cljs.core.truth_(and__4345__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__4345__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__4357__auto__)) {
    return or__4357__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__4357__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__4357__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function cljs$core$async$fn_handler(f) {
  if (typeof cljs.core.async.t14658 !== "undefined") {
  } else {
    cljs.core.async.t14658 = function(f, fn_handler, meta14659) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta14659 = meta14659;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t14658.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14658.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t14658.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t14658.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14660) {
      var self__ = this;
      var _14660__$1 = this;
      return self__.meta14659;
    };
    cljs.core.async.t14658.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14660, meta14659__$1) {
      var self__ = this;
      var _14660__$1 = this;
      return new cljs.core.async.t14658(self__.f, self__.fn_handler, meta14659__$1);
    };
    cljs.core.async.t14658.cljs$lang$type = true;
    cljs.core.async.t14658.cljs$lang$ctorStr = "cljs.core.async/t14658";
    cljs.core.async.t14658.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
      return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async/t14658");
    };
    cljs.core.async.__GT_t14658 = function cljs$core$async$fn_handler_$___GT_t14658(f__$1, fn_handler__$1, meta14659) {
      return new cljs.core.async.t14658(f__$1, fn_handler__$1, meta14659);
    };
  }
  return new cljs.core.async.t14658(f, cljs$core$async$fn_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.buffer = function cljs$core$async$buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function cljs$core$async$dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function cljs$core$async$sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function cljs$core$async$unblocking_buffer_QMARK_(buff) {
  var G__14662 = buff;
  if (G__14662) {
    var bit__5031__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__4357__auto__ = bit__5031__auto__;
      if (cljs.core.truth_(or__4357__auto__)) {
        return or__4357__auto__;
      } else {
        return G__14662.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__14662.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__14662);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__14662);
  }
};
cljs.core.async.chan = function cljs$core$async$chan() {
  var G__14664 = arguments.length;
  switch(G__14664) {
    case 0:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.chan.call(null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1 = function(buf_or_n) {
  return cljs.core.async.chan.call(null, buf_or_n, null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2 = function(buf_or_n, xform) {
  return cljs.core.async.chan.call(null, buf_or_n, xform, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3 = function(buf_or_n, xform, ex_handler) {
  var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
  if (cljs.core.truth_(xform)) {
    if (cljs.core.truth_(buf_or_n__$1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
    }
  } else {
  }
  return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
};
cljs.core.async.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.timeout = function cljs$core$async$timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function cljs$core$async$_LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function cljs$core$async$take_BANG_() {
  var G__14667 = arguments.length;
  switch(G__14667) {
    case 2:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, fn1) {
  return cljs.core.async.take_BANG_.call(null, port, fn1, true);
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, fn1, on_caller_QMARK_) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(ret)) {
    var val_14669 = cljs.core.deref.call(null, ret);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, val_14669);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(val_14669, ret) {
        return function() {
          return fn1.call(null, val_14669);
        };
      }(val_14669, ret));
    }
  } else {
  }
  return null;
};
cljs.core.async.take_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.nop = function cljs$core$async$nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function cljs$core$async$_GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function cljs$core$async$put_BANG_() {
  var G__14671 = arguments.length;
  switch(G__14671) {
    case 2:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var ret = temp__4124__auto__;
    return cljs.core.deref.call(null, ret);
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, val, fn1) {
  return cljs.core.async.put_BANG_.call(null, port, val, fn1, true);
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4 = function(port, val, fn1, on_caller_QMARK_) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var retb = temp__4124__auto__;
    var ret = cljs.core.deref.call(null, retb);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, ret);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
        return function() {
          return fn1.call(null, ret);
        };
      }(ret, retb, temp__4124__auto__));
    }
    return ret;
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.async.close_BANG_ = function cljs$core$async$close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function cljs$core$async$random_array(n) {
  var a = new Array(n);
  var n__5242__auto___14673 = n;
  var x_14674 = 0;
  while (true) {
    if (x_14674 < n__5242__auto___14673) {
      a[x_14674] = 0;
      var G__14675 = x_14674 + 1;
      x_14674 = G__14675;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__14676 = i + 1;
      i = G__14676;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function cljs$core$async$alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t14680 !== "undefined") {
  } else {
    cljs.core.async.t14680 = function(flag, alt_flag, meta14681) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta14681 = meta14681;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t14680.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14680.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t14680.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t14680.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_14682) {
        var self__ = this;
        var _14682__$1 = this;
        return self__.meta14681;
      };
    }(flag);
    cljs.core.async.t14680.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_14682, meta14681__$1) {
        var self__ = this;
        var _14682__$1 = this;
        return new cljs.core.async.t14680(self__.flag, self__.alt_flag, meta14681__$1);
      };
    }(flag);
    cljs.core.async.t14680.cljs$lang$type = true;
    cljs.core.async.t14680.cljs$lang$ctorStr = "cljs.core.async/t14680";
    cljs.core.async.t14680.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
        return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async/t14680");
      };
    }(flag);
    cljs.core.async.__GT_t14680 = function(flag) {
      return function cljs$core$async$alt_flag_$___GT_t14680(flag__$1, alt_flag__$1, meta14681) {
        return new cljs.core.async.t14680(flag__$1, alt_flag__$1, meta14681);
      };
    }(flag);
  }
  return new cljs.core.async.t14680(flag, cljs$core$async$alt_flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function cljs$core$async$alt_handler(flag, cb) {
  if (typeof cljs.core.async.t14686 !== "undefined") {
  } else {
    cljs.core.async.t14686 = function(cb, flag, alt_handler, meta14687) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta14687 = meta14687;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t14686.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14686.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t14686.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t14686.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14688) {
      var self__ = this;
      var _14688__$1 = this;
      return self__.meta14687;
    };
    cljs.core.async.t14686.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14688, meta14687__$1) {
      var self__ = this;
      var _14688__$1 = this;
      return new cljs.core.async.t14686(self__.cb, self__.flag, self__.alt_handler, meta14687__$1);
    };
    cljs.core.async.t14686.cljs$lang$type = true;
    cljs.core.async.t14686.cljs$lang$ctorStr = "cljs.core.async/t14686";
    cljs.core.async.t14686.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
      return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async/t14686");
    };
    cljs.core.async.__GT_t14686 = function cljs$core$async$alt_handler_$___GT_t14686(cb__$1, flag__$1, alt_handler__$1, meta14687) {
      return new cljs.core.async.t14686(cb__$1, flag__$1, alt_handler__$1, meta14687);
    };
  }
  return new cljs.core.async.t14686(cb, flag, cljs$core$async$alt_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function cljs$core$async$do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__14689_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__14689_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__14690_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__14690_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__4357__auto__ = wport;
            if (cljs.core.truth_(or__4357__auto__)) {
              return or__4357__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__14691 = i + 1;
          i = G__14691;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__4357__auto__ = ret;
  if (cljs.core.truth_(or__4357__auto__)) {
    return or__4357__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__4345__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__4345__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__4345__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function cljs$core$async$alts_BANG_() {
  var argseq__5397__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5397__auto__);
};
cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ports, p__14694) {
  var map__14695 = p__14694;
  var map__14695__$1 = cljs.core.seq_QMARK_.call(null, map__14695) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14695) : map__14695;
  var opts = map__14695__$1;
  throw new Error("alts! used not in (go ...) block");
};
cljs.core.async.alts_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.async.alts_BANG_.cljs$lang$applyTo = function(seq14692) {
  var G__14693 = cljs.core.first.call(null, seq14692);
  var seq14692__$1 = cljs.core.next.call(null, seq14692);
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__14693, seq14692__$1);
};
cljs.core.async.pipe = function cljs$core$async$pipe() {
  var G__14697 = arguments.length;
  switch(G__14697) {
    case 2:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2 = function(from, to) {
  return cljs.core.async.pipe.call(null, from, to, true);
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3 = function(from, to, close_QMARK_) {
  var c__12295__auto___14746 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto___14746) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto___14746) {
          return function(state_14721) {
            var state_val_14722 = state_14721[1];
            if (state_val_14722 === 7) {
              var inst_14717 = state_14721[2];
              var state_14721__$1 = state_14721;
              var statearr_14723_14747 = state_14721__$1;
              statearr_14723_14747[2] = inst_14717;
              statearr_14723_14747[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14722 === 1) {
                var state_14721__$1 = state_14721;
                var statearr_14724_14748 = state_14721__$1;
                statearr_14724_14748[2] = null;
                statearr_14724_14748[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14722 === 4) {
                  var inst_14700 = state_14721[7];
                  var inst_14700__$1 = state_14721[2];
                  var inst_14701 = inst_14700__$1 == null;
                  var state_14721__$1 = function() {
                    var statearr_14725 = state_14721;
                    statearr_14725[7] = inst_14700__$1;
                    return statearr_14725;
                  }();
                  if (cljs.core.truth_(inst_14701)) {
                    var statearr_14726_14749 = state_14721__$1;
                    statearr_14726_14749[1] = 5;
                  } else {
                    var statearr_14727_14750 = state_14721__$1;
                    statearr_14727_14750[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14722 === 13) {
                    var state_14721__$1 = state_14721;
                    var statearr_14728_14751 = state_14721__$1;
                    statearr_14728_14751[2] = null;
                    statearr_14728_14751[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14722 === 6) {
                      var inst_14700 = state_14721[7];
                      var state_14721__$1 = state_14721;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14721__$1, 11, to, inst_14700);
                    } else {
                      if (state_val_14722 === 3) {
                        var inst_14719 = state_14721[2];
                        var state_14721__$1 = state_14721;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14721__$1, inst_14719);
                      } else {
                        if (state_val_14722 === 12) {
                          var state_14721__$1 = state_14721;
                          var statearr_14729_14752 = state_14721__$1;
                          statearr_14729_14752[2] = null;
                          statearr_14729_14752[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14722 === 2) {
                            var state_14721__$1 = state_14721;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14721__$1, 4, from);
                          } else {
                            if (state_val_14722 === 11) {
                              var inst_14710 = state_14721[2];
                              var state_14721__$1 = state_14721;
                              if (cljs.core.truth_(inst_14710)) {
                                var statearr_14730_14753 = state_14721__$1;
                                statearr_14730_14753[1] = 12;
                              } else {
                                var statearr_14731_14754 = state_14721__$1;
                                statearr_14731_14754[1] = 13;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14722 === 9) {
                                var state_14721__$1 = state_14721;
                                var statearr_14732_14755 = state_14721__$1;
                                statearr_14732_14755[2] = null;
                                statearr_14732_14755[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14722 === 5) {
                                  var state_14721__$1 = state_14721;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_14733_14756 = state_14721__$1;
                                    statearr_14733_14756[1] = 8;
                                  } else {
                                    var statearr_14734_14757 = state_14721__$1;
                                    statearr_14734_14757[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14722 === 14) {
                                    var inst_14715 = state_14721[2];
                                    var state_14721__$1 = state_14721;
                                    var statearr_14735_14758 = state_14721__$1;
                                    statearr_14735_14758[2] = inst_14715;
                                    statearr_14735_14758[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14722 === 10) {
                                      var inst_14707 = state_14721[2];
                                      var state_14721__$1 = state_14721;
                                      var statearr_14736_14759 = state_14721__$1;
                                      statearr_14736_14759[2] = inst_14707;
                                      statearr_14736_14759[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_14722 === 8) {
                                        var inst_14704 = cljs.core.async.close_BANG_.call(null, to);
                                        var state_14721__$1 = state_14721;
                                        var statearr_14737_14760 = state_14721__$1;
                                        statearr_14737_14760[2] = inst_14704;
                                        statearr_14737_14760[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto___14746);
        return function(switch__12233__auto__, c__12295__auto___14746) {
          return function() {
            var cljs$core$async$state_machine__12234__auto__ = null;
            var cljs$core$async$state_machine__12234__auto____0 = function() {
              var statearr_14741 = [null, null, null, null, null, null, null, null];
              statearr_14741[0] = cljs$core$async$state_machine__12234__auto__;
              statearr_14741[1] = 1;
              return statearr_14741;
            };
            var cljs$core$async$state_machine__12234__auto____1 = function(state_14721) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_14721);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e14742) {
                    if (e14742 instanceof Object) {
                      var ex__12237__auto__ = e14742;
                      var statearr_14743_14761 = state_14721;
                      statearr_14743_14761[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14721);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14742;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14762 = state_14721;
                  state_14721 = G__14762;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__12234__auto__ = function(state_14721) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__12234__auto____1.call(this, state_14721);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__12234__auto____0;
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__12234__auto____1;
            return cljs$core$async$state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto___14746);
      }();
      var state__12297__auto__ = function() {
        var statearr_14744 = f__12296__auto__.call(null);
        statearr_14744[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___14746;
        return statearr_14744;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto___14746));
  return to;
};
cljs.core.async.pipe.cljs$lang$maxFixedArity = 3;
cljs.core.async.pipeline_STAR_ = function cljs$core$async$pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__14946) {
      var vec__14947 = p__14946;
      var v = cljs.core.nth.call(null, vec__14947, 0, null);
      var p = cljs.core.nth.call(null, vec__14947, 1, null);
      var job = vec__14947;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__12295__auto___15129 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto___15129, res, vec__14947, v, p, job, jobs, results) {
          return function() {
            var f__12296__auto__ = function() {
              var switch__12233__auto__ = function(c__12295__auto___15129, res, vec__14947, v, p, job, jobs, results) {
                return function(state_14952) {
                  var state_val_14953 = state_14952[1];
                  if (state_val_14953 === 2) {
                    var inst_14949 = state_14952[2];
                    var inst_14950 = cljs.core.async.close_BANG_.call(null, res);
                    var state_14952__$1 = function() {
                      var statearr_14954 = state_14952;
                      statearr_14954[7] = inst_14949;
                      return statearr_14954;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14952__$1, inst_14950);
                  } else {
                    if (state_val_14953 === 1) {
                      var state_14952__$1 = state_14952;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14952__$1, 2, res, v);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__12295__auto___15129, res, vec__14947, v, p, job, jobs, results);
              return function(switch__12233__auto__, c__12295__auto___15129, res, vec__14947, v, p, job, jobs, results) {
                return function() {
                  var cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__ = null;
                  var cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____0 = function() {
                    var statearr_14958 = [null, null, null, null, null, null, null, null];
                    statearr_14958[0] = cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__;
                    statearr_14958[1] = 1;
                    return statearr_14958;
                  };
                  var cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____1 = function(state_14952) {
                    while (true) {
                      var ret_value__12235__auto__ = function() {
                        try {
                          while (true) {
                            var result__12236__auto__ = switch__12233__auto__.call(null, state_14952);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__12236__auto__;
                            }
                            break;
                          }
                        } catch (e14959) {
                          if (e14959 instanceof Object) {
                            var ex__12237__auto__ = e14959;
                            var statearr_14960_15130 = state_14952;
                            statearr_14960_15130[5] = ex__12237__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14952);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e14959;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__15131 = state_14952;
                        state_14952 = G__15131;
                        continue;
                      } else {
                        return ret_value__12235__auto__;
                      }
                      break;
                    }
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__ = function(state_14952) {
                    switch(arguments.length) {
                      case 0:
                        return cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____0.call(this);
                      case 1:
                        return cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____1.call(this, state_14952);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____0;
                  cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____1;
                  return cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__;
                }();
              }(switch__12233__auto__, c__12295__auto___15129, res, vec__14947, v, p, job, jobs, results);
            }();
            var state__12297__auto__ = function() {
              var statearr_14961 = f__12296__auto__.call(null);
              statearr_14961[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___15129;
              return statearr_14961;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
          };
        }(c__12295__auto___15129, res, vec__14947, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__14962) {
      var vec__14963 = p__14962;
      var v = cljs.core.nth.call(null, vec__14963, 0, null);
      var p = cljs.core.nth.call(null, vec__14963, 1, null);
      var job = vec__14963;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__5242__auto___15132 = n;
  var __15133 = 0;
  while (true) {
    if (__15133 < n__5242__auto___15132) {
      var G__14964_15134 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__14964_15134) {
        case "async":
          var c__12295__auto___15136 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__15133, c__12295__auto___15136, G__14964_15134, n__5242__auto___15132, jobs, results, process, async) {
            return function() {
              var f__12296__auto__ = function() {
                var switch__12233__auto__ = function(__15133, c__12295__auto___15136, G__14964_15134, n__5242__auto___15132, jobs, results, process, async) {
                  return function(state_14977) {
                    var state_val_14978 = state_14977[1];
                    if (state_val_14978 === 7) {
                      var inst_14973 = state_14977[2];
                      var state_14977__$1 = state_14977;
                      var statearr_14979_15137 = state_14977__$1;
                      statearr_14979_15137[2] = inst_14973;
                      statearr_14979_15137[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14978 === 6) {
                        var state_14977__$1 = state_14977;
                        var statearr_14980_15138 = state_14977__$1;
                        statearr_14980_15138[2] = null;
                        statearr_14980_15138[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_14978 === 5) {
                          var state_14977__$1 = state_14977;
                          var statearr_14981_15139 = state_14977__$1;
                          statearr_14981_15139[2] = null;
                          statearr_14981_15139[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14978 === 4) {
                            var inst_14967 = state_14977[2];
                            var inst_14968 = async.call(null, inst_14967);
                            var state_14977__$1 = state_14977;
                            if (cljs.core.truth_(inst_14968)) {
                              var statearr_14982_15140 = state_14977__$1;
                              statearr_14982_15140[1] = 5;
                            } else {
                              var statearr_14983_15141 = state_14977__$1;
                              statearr_14983_15141[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14978 === 3) {
                              var inst_14975 = state_14977[2];
                              var state_14977__$1 = state_14977;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14977__$1, inst_14975);
                            } else {
                              if (state_val_14978 === 2) {
                                var state_14977__$1 = state_14977;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14977__$1, 4, jobs);
                              } else {
                                if (state_val_14978 === 1) {
                                  var state_14977__$1 = state_14977;
                                  var statearr_14984_15142 = state_14977__$1;
                                  statearr_14984_15142[2] = null;
                                  statearr_14984_15142[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__15133, c__12295__auto___15136, G__14964_15134, n__5242__auto___15132, jobs, results, process, async);
                return function(__15133, switch__12233__auto__, c__12295__auto___15136, G__14964_15134, n__5242__auto___15132, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____0 = function() {
                      var statearr_14988 = [null, null, null, null, null, null, null];
                      statearr_14988[0] = cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__;
                      statearr_14988[1] = 1;
                      return statearr_14988;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____1 = function(state_14977) {
                      while (true) {
                        var ret_value__12235__auto__ = function() {
                          try {
                            while (true) {
                              var result__12236__auto__ = switch__12233__auto__.call(null, state_14977);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__12236__auto__;
                              }
                              break;
                            }
                          } catch (e14989) {
                            if (e14989 instanceof Object) {
                              var ex__12237__auto__ = e14989;
                              var statearr_14990_15143 = state_14977;
                              statearr_14990_15143[5] = ex__12237__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14977);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e14989;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__15144 = state_14977;
                          state_14977 = G__15144;
                          continue;
                        } else {
                          return ret_value__12235__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__ = function(state_14977) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____1.call(this, state_14977);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__;
                  }();
                }(__15133, switch__12233__auto__, c__12295__auto___15136, G__14964_15134, n__5242__auto___15132, jobs, results, process, async);
              }();
              var state__12297__auto__ = function() {
                var statearr_14991 = f__12296__auto__.call(null);
                statearr_14991[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___15136;
                return statearr_14991;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
            };
          }(__15133, c__12295__auto___15136, G__14964_15134, n__5242__auto___15132, jobs, results, process, async));
          break;
        case "compute":
          var c__12295__auto___15145 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__15133, c__12295__auto___15145, G__14964_15134, n__5242__auto___15132, jobs, results, process, async) {
            return function() {
              var f__12296__auto__ = function() {
                var switch__12233__auto__ = function(__15133, c__12295__auto___15145, G__14964_15134, n__5242__auto___15132, jobs, results, process, async) {
                  return function(state_15004) {
                    var state_val_15005 = state_15004[1];
                    if (state_val_15005 === 7) {
                      var inst_15000 = state_15004[2];
                      var state_15004__$1 = state_15004;
                      var statearr_15006_15146 = state_15004__$1;
                      statearr_15006_15146[2] = inst_15000;
                      statearr_15006_15146[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15005 === 6) {
                        var state_15004__$1 = state_15004;
                        var statearr_15007_15147 = state_15004__$1;
                        statearr_15007_15147[2] = null;
                        statearr_15007_15147[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15005 === 5) {
                          var state_15004__$1 = state_15004;
                          var statearr_15008_15148 = state_15004__$1;
                          statearr_15008_15148[2] = null;
                          statearr_15008_15148[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15005 === 4) {
                            var inst_14994 = state_15004[2];
                            var inst_14995 = process.call(null, inst_14994);
                            var state_15004__$1 = state_15004;
                            if (cljs.core.truth_(inst_14995)) {
                              var statearr_15009_15149 = state_15004__$1;
                              statearr_15009_15149[1] = 5;
                            } else {
                              var statearr_15010_15150 = state_15004__$1;
                              statearr_15010_15150[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15005 === 3) {
                              var inst_15002 = state_15004[2];
                              var state_15004__$1 = state_15004;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15004__$1, inst_15002);
                            } else {
                              if (state_val_15005 === 2) {
                                var state_15004__$1 = state_15004;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15004__$1, 4, jobs);
                              } else {
                                if (state_val_15005 === 1) {
                                  var state_15004__$1 = state_15004;
                                  var statearr_15011_15151 = state_15004__$1;
                                  statearr_15011_15151[2] = null;
                                  statearr_15011_15151[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__15133, c__12295__auto___15145, G__14964_15134, n__5242__auto___15132, jobs, results, process, async);
                return function(__15133, switch__12233__auto__, c__12295__auto___15145, G__14964_15134, n__5242__auto___15132, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____0 = function() {
                      var statearr_15015 = [null, null, null, null, null, null, null];
                      statearr_15015[0] = cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__;
                      statearr_15015[1] = 1;
                      return statearr_15015;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____1 = function(state_15004) {
                      while (true) {
                        var ret_value__12235__auto__ = function() {
                          try {
                            while (true) {
                              var result__12236__auto__ = switch__12233__auto__.call(null, state_15004);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__12236__auto__;
                              }
                              break;
                            }
                          } catch (e15016) {
                            if (e15016 instanceof Object) {
                              var ex__12237__auto__ = e15016;
                              var statearr_15017_15152 = state_15004;
                              statearr_15017_15152[5] = ex__12237__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15004);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e15016;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__15153 = state_15004;
                          state_15004 = G__15153;
                          continue;
                        } else {
                          return ret_value__12235__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__ = function(state_15004) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____1.call(this, state_15004);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__;
                  }();
                }(__15133, switch__12233__auto__, c__12295__auto___15145, G__14964_15134, n__5242__auto___15132, jobs, results, process, async);
              }();
              var state__12297__auto__ = function() {
                var statearr_15018 = f__12296__auto__.call(null);
                statearr_15018[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___15145;
                return statearr_15018;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
            };
          }(__15133, c__12295__auto___15145, G__14964_15134, n__5242__auto___15132, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__15154 = __15133 + 1;
      __15133 = G__15154;
      continue;
    } else {
    }
    break;
  }
  var c__12295__auto___15155 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto___15155, jobs, results, process, async) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto___15155, jobs, results, process, async) {
          return function(state_15040) {
            var state_val_15041 = state_15040[1];
            if (state_val_15041 === 9) {
              var inst_15033 = state_15040[2];
              var state_15040__$1 = function() {
                var statearr_15042 = state_15040;
                statearr_15042[7] = inst_15033;
                return statearr_15042;
              }();
              var statearr_15043_15156 = state_15040__$1;
              statearr_15043_15156[2] = null;
              statearr_15043_15156[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15041 === 8) {
                var inst_15026 = state_15040[8];
                var inst_15031 = state_15040[2];
                var state_15040__$1 = function() {
                  var statearr_15044 = state_15040;
                  statearr_15044[9] = inst_15031;
                  return statearr_15044;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15040__$1, 9, results, inst_15026);
              } else {
                if (state_val_15041 === 7) {
                  var inst_15036 = state_15040[2];
                  var state_15040__$1 = state_15040;
                  var statearr_15045_15157 = state_15040__$1;
                  statearr_15045_15157[2] = inst_15036;
                  statearr_15045_15157[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15041 === 6) {
                    var inst_15021 = state_15040[10];
                    var inst_15026 = state_15040[8];
                    var inst_15026__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_15027 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_15028 = [inst_15021, inst_15026__$1];
                    var inst_15029 = new cljs.core.PersistentVector(null, 2, 5, inst_15027, inst_15028, null);
                    var state_15040__$1 = function() {
                      var statearr_15046 = state_15040;
                      statearr_15046[8] = inst_15026__$1;
                      return statearr_15046;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15040__$1, 8, jobs, inst_15029);
                  } else {
                    if (state_val_15041 === 5) {
                      var inst_15024 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_15040__$1 = state_15040;
                      var statearr_15047_15158 = state_15040__$1;
                      statearr_15047_15158[2] = inst_15024;
                      statearr_15047_15158[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15041 === 4) {
                        var inst_15021 = state_15040[10];
                        var inst_15021__$1 = state_15040[2];
                        var inst_15022 = inst_15021__$1 == null;
                        var state_15040__$1 = function() {
                          var statearr_15048 = state_15040;
                          statearr_15048[10] = inst_15021__$1;
                          return statearr_15048;
                        }();
                        if (cljs.core.truth_(inst_15022)) {
                          var statearr_15049_15159 = state_15040__$1;
                          statearr_15049_15159[1] = 5;
                        } else {
                          var statearr_15050_15160 = state_15040__$1;
                          statearr_15050_15160[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15041 === 3) {
                          var inst_15038 = state_15040[2];
                          var state_15040__$1 = state_15040;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15040__$1, inst_15038);
                        } else {
                          if (state_val_15041 === 2) {
                            var state_15040__$1 = state_15040;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15040__$1, 4, from);
                          } else {
                            if (state_val_15041 === 1) {
                              var state_15040__$1 = state_15040;
                              var statearr_15051_15161 = state_15040__$1;
                              statearr_15051_15161[2] = null;
                              statearr_15051_15161[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto___15155, jobs, results, process, async);
        return function(switch__12233__auto__, c__12295__auto___15155, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____0 = function() {
              var statearr_15055 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_15055[0] = cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__;
              statearr_15055[1] = 1;
              return statearr_15055;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____1 = function(state_15040) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_15040);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e15056) {
                    if (e15056 instanceof Object) {
                      var ex__12237__auto__ = e15056;
                      var statearr_15057_15162 = state_15040;
                      statearr_15057_15162[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15040);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15056;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15163 = state_15040;
                  state_15040 = G__15163;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__ = function(state_15040) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____1.call(this, state_15040);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto___15155, jobs, results, process, async);
      }();
      var state__12297__auto__ = function() {
        var statearr_15058 = f__12296__auto__.call(null);
        statearr_15058[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___15155;
        return statearr_15058;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto___15155, jobs, results, process, async));
  var c__12295__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto__, jobs, results, process, async) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto__, jobs, results, process, async) {
          return function(state_15096) {
            var state_val_15097 = state_15096[1];
            if (state_val_15097 === 7) {
              var inst_15092 = state_15096[2];
              var state_15096__$1 = state_15096;
              var statearr_15098_15164 = state_15096__$1;
              statearr_15098_15164[2] = inst_15092;
              statearr_15098_15164[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15097 === 20) {
                var state_15096__$1 = state_15096;
                var statearr_15099_15165 = state_15096__$1;
                statearr_15099_15165[2] = null;
                statearr_15099_15165[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15097 === 1) {
                  var state_15096__$1 = state_15096;
                  var statearr_15100_15166 = state_15096__$1;
                  statearr_15100_15166[2] = null;
                  statearr_15100_15166[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15097 === 4) {
                    var inst_15061 = state_15096[7];
                    var inst_15061__$1 = state_15096[2];
                    var inst_15062 = inst_15061__$1 == null;
                    var state_15096__$1 = function() {
                      var statearr_15101 = state_15096;
                      statearr_15101[7] = inst_15061__$1;
                      return statearr_15101;
                    }();
                    if (cljs.core.truth_(inst_15062)) {
                      var statearr_15102_15167 = state_15096__$1;
                      statearr_15102_15167[1] = 5;
                    } else {
                      var statearr_15103_15168 = state_15096__$1;
                      statearr_15103_15168[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15097 === 15) {
                      var inst_15074 = state_15096[8];
                      var state_15096__$1 = state_15096;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15096__$1, 18, to, inst_15074);
                    } else {
                      if (state_val_15097 === 21) {
                        var inst_15087 = state_15096[2];
                        var state_15096__$1 = state_15096;
                        var statearr_15104_15169 = state_15096__$1;
                        statearr_15104_15169[2] = inst_15087;
                        statearr_15104_15169[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15097 === 13) {
                          var inst_15089 = state_15096[2];
                          var state_15096__$1 = function() {
                            var statearr_15105 = state_15096;
                            statearr_15105[9] = inst_15089;
                            return statearr_15105;
                          }();
                          var statearr_15106_15170 = state_15096__$1;
                          statearr_15106_15170[2] = null;
                          statearr_15106_15170[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15097 === 6) {
                            var inst_15061 = state_15096[7];
                            var state_15096__$1 = state_15096;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15096__$1, 11, inst_15061);
                          } else {
                            if (state_val_15097 === 17) {
                              var inst_15082 = state_15096[2];
                              var state_15096__$1 = state_15096;
                              if (cljs.core.truth_(inst_15082)) {
                                var statearr_15107_15171 = state_15096__$1;
                                statearr_15107_15171[1] = 19;
                              } else {
                                var statearr_15108_15172 = state_15096__$1;
                                statearr_15108_15172[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_15097 === 3) {
                                var inst_15094 = state_15096[2];
                                var state_15096__$1 = state_15096;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15096__$1, inst_15094);
                              } else {
                                if (state_val_15097 === 12) {
                                  var inst_15071 = state_15096[10];
                                  var state_15096__$1 = state_15096;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15096__$1, 14, inst_15071);
                                } else {
                                  if (state_val_15097 === 2) {
                                    var state_15096__$1 = state_15096;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15096__$1, 4, results);
                                  } else {
                                    if (state_val_15097 === 19) {
                                      var state_15096__$1 = state_15096;
                                      var statearr_15109_15173 = state_15096__$1;
                                      statearr_15109_15173[2] = null;
                                      statearr_15109_15173[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_15097 === 11) {
                                        var inst_15071 = state_15096[2];
                                        var state_15096__$1 = function() {
                                          var statearr_15110 = state_15096;
                                          statearr_15110[10] = inst_15071;
                                          return statearr_15110;
                                        }();
                                        var statearr_15111_15174 = state_15096__$1;
                                        statearr_15111_15174[2] = null;
                                        statearr_15111_15174[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_15097 === 9) {
                                          var state_15096__$1 = state_15096;
                                          var statearr_15112_15175 = state_15096__$1;
                                          statearr_15112_15175[2] = null;
                                          statearr_15112_15175[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_15097 === 5) {
                                            var state_15096__$1 = state_15096;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_15113_15176 = state_15096__$1;
                                              statearr_15113_15176[1] = 8;
                                            } else {
                                              var statearr_15114_15177 = state_15096__$1;
                                              statearr_15114_15177[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_15097 === 14) {
                                              var inst_15076 = state_15096[11];
                                              var inst_15074 = state_15096[8];
                                              var inst_15074__$1 = state_15096[2];
                                              var inst_15075 = inst_15074__$1 == null;
                                              var inst_15076__$1 = cljs.core.not.call(null, inst_15075);
                                              var state_15096__$1 = function() {
                                                var statearr_15115 = state_15096;
                                                statearr_15115[11] = inst_15076__$1;
                                                statearr_15115[8] = inst_15074__$1;
                                                return statearr_15115;
                                              }();
                                              if (inst_15076__$1) {
                                                var statearr_15116_15178 = state_15096__$1;
                                                statearr_15116_15178[1] = 15;
                                              } else {
                                                var statearr_15117_15179 = state_15096__$1;
                                                statearr_15117_15179[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_15097 === 16) {
                                                var inst_15076 = state_15096[11];
                                                var state_15096__$1 = state_15096;
                                                var statearr_15118_15180 = state_15096__$1;
                                                statearr_15118_15180[2] = inst_15076;
                                                statearr_15118_15180[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_15097 === 10) {
                                                  var inst_15068 = state_15096[2];
                                                  var state_15096__$1 = state_15096;
                                                  var statearr_15119_15181 = state_15096__$1;
                                                  statearr_15119_15181[2] = inst_15068;
                                                  statearr_15119_15181[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_15097 === 18) {
                                                    var inst_15079 = state_15096[2];
                                                    var state_15096__$1 = state_15096;
                                                    var statearr_15120_15182 = state_15096__$1;
                                                    statearr_15120_15182[2] = inst_15079;
                                                    statearr_15120_15182[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_15097 === 8) {
                                                      var inst_15065 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_15096__$1 = state_15096;
                                                      var statearr_15121_15183 = state_15096__$1;
                                                      statearr_15121_15183[2] = inst_15065;
                                                      statearr_15121_15183[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto__, jobs, results, process, async);
        return function(switch__12233__auto__, c__12295__auto__, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____0 = function() {
              var statearr_15125 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_15125[0] = cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__;
              statearr_15125[1] = 1;
              return statearr_15125;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____1 = function(state_15096) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_15096);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e15126) {
                    if (e15126 instanceof Object) {
                      var ex__12237__auto__ = e15126;
                      var statearr_15127_15184 = state_15096;
                      statearr_15127_15184[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15096);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15126;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15185 = state_15096;
                  state_15096 = G__15185;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__ = function(state_15096) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____1.call(this, state_15096);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__12234__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto__, jobs, results, process, async);
      }();
      var state__12297__auto__ = function() {
        var statearr_15128 = f__12296__auto__.call(null);
        statearr_15128[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto__;
        return statearr_15128;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto__, jobs, results, process, async));
  return c__12295__auto__;
};
cljs.core.async.pipeline_async = function cljs$core$async$pipeline_async() {
  var G__15187 = arguments.length;
  switch(G__15187) {
    case 4:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4 = function(n, to, af, from) {
  return cljs.core.async.pipeline_async.call(null, n, to, af, from, true);
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5 = function(n, to, af, from, close_QMARK_) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.core.async.pipeline_async.cljs$lang$maxFixedArity = 5;
cljs.core.async.pipeline = function cljs$core$async$pipeline() {
  var G__15190 = arguments.length;
  switch(G__15190) {
    case 4:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4 = function(n, to, xf, from) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, true);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5 = function(n, to, xf, from, close_QMARK_) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, close_QMARK_, null);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
};
cljs.core.async.pipeline.cljs$lang$maxFixedArity = 6;
cljs.core.async.split = function cljs$core$async$split() {
  var G__15193 = arguments.length;
  switch(G__15193) {
    case 2:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.split.call(null, p, ch, null, null);
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
  var tc = cljs.core.async.chan.call(null, t_buf_or_n);
  var fc = cljs.core.async.chan.call(null, f_buf_or_n);
  var c__12295__auto___15245 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto___15245, tc, fc) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto___15245, tc, fc) {
          return function(state_15219) {
            var state_val_15220 = state_15219[1];
            if (state_val_15220 === 7) {
              var inst_15215 = state_15219[2];
              var state_15219__$1 = state_15219;
              var statearr_15221_15246 = state_15219__$1;
              statearr_15221_15246[2] = inst_15215;
              statearr_15221_15246[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15220 === 1) {
                var state_15219__$1 = state_15219;
                var statearr_15222_15247 = state_15219__$1;
                statearr_15222_15247[2] = null;
                statearr_15222_15247[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15220 === 4) {
                  var inst_15196 = state_15219[7];
                  var inst_15196__$1 = state_15219[2];
                  var inst_15197 = inst_15196__$1 == null;
                  var state_15219__$1 = function() {
                    var statearr_15223 = state_15219;
                    statearr_15223[7] = inst_15196__$1;
                    return statearr_15223;
                  }();
                  if (cljs.core.truth_(inst_15197)) {
                    var statearr_15224_15248 = state_15219__$1;
                    statearr_15224_15248[1] = 5;
                  } else {
                    var statearr_15225_15249 = state_15219__$1;
                    statearr_15225_15249[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15220 === 13) {
                    var state_15219__$1 = state_15219;
                    var statearr_15226_15250 = state_15219__$1;
                    statearr_15226_15250[2] = null;
                    statearr_15226_15250[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15220 === 6) {
                      var inst_15196 = state_15219[7];
                      var inst_15202 = p.call(null, inst_15196);
                      var state_15219__$1 = state_15219;
                      if (cljs.core.truth_(inst_15202)) {
                        var statearr_15227_15251 = state_15219__$1;
                        statearr_15227_15251[1] = 9;
                      } else {
                        var statearr_15228_15252 = state_15219__$1;
                        statearr_15228_15252[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15220 === 3) {
                        var inst_15217 = state_15219[2];
                        var state_15219__$1 = state_15219;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15219__$1, inst_15217);
                      } else {
                        if (state_val_15220 === 12) {
                          var state_15219__$1 = state_15219;
                          var statearr_15229_15253 = state_15219__$1;
                          statearr_15229_15253[2] = null;
                          statearr_15229_15253[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15220 === 2) {
                            var state_15219__$1 = state_15219;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15219__$1, 4, ch);
                          } else {
                            if (state_val_15220 === 11) {
                              var inst_15196 = state_15219[7];
                              var inst_15206 = state_15219[2];
                              var state_15219__$1 = state_15219;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15219__$1, 8, inst_15206, inst_15196);
                            } else {
                              if (state_val_15220 === 9) {
                                var state_15219__$1 = state_15219;
                                var statearr_15230_15254 = state_15219__$1;
                                statearr_15230_15254[2] = tc;
                                statearr_15230_15254[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15220 === 5) {
                                  var inst_15199 = cljs.core.async.close_BANG_.call(null, tc);
                                  var inst_15200 = cljs.core.async.close_BANG_.call(null, fc);
                                  var state_15219__$1 = function() {
                                    var statearr_15231 = state_15219;
                                    statearr_15231[8] = inst_15199;
                                    return statearr_15231;
                                  }();
                                  var statearr_15232_15255 = state_15219__$1;
                                  statearr_15232_15255[2] = inst_15200;
                                  statearr_15232_15255[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15220 === 14) {
                                    var inst_15213 = state_15219[2];
                                    var state_15219__$1 = state_15219;
                                    var statearr_15233_15256 = state_15219__$1;
                                    statearr_15233_15256[2] = inst_15213;
                                    statearr_15233_15256[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_15220 === 10) {
                                      var state_15219__$1 = state_15219;
                                      var statearr_15234_15257 = state_15219__$1;
                                      statearr_15234_15257[2] = fc;
                                      statearr_15234_15257[1] = 11;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_15220 === 8) {
                                        var inst_15208 = state_15219[2];
                                        var state_15219__$1 = state_15219;
                                        if (cljs.core.truth_(inst_15208)) {
                                          var statearr_15235_15258 = state_15219__$1;
                                          statearr_15235_15258[1] = 12;
                                        } else {
                                          var statearr_15236_15259 = state_15219__$1;
                                          statearr_15236_15259[1] = 13;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto___15245, tc, fc);
        return function(switch__12233__auto__, c__12295__auto___15245, tc, fc) {
          return function() {
            var cljs$core$async$state_machine__12234__auto__ = null;
            var cljs$core$async$state_machine__12234__auto____0 = function() {
              var statearr_15240 = [null, null, null, null, null, null, null, null, null];
              statearr_15240[0] = cljs$core$async$state_machine__12234__auto__;
              statearr_15240[1] = 1;
              return statearr_15240;
            };
            var cljs$core$async$state_machine__12234__auto____1 = function(state_15219) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_15219);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e15241) {
                    if (e15241 instanceof Object) {
                      var ex__12237__auto__ = e15241;
                      var statearr_15242_15260 = state_15219;
                      statearr_15242_15260[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15219);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15241;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15261 = state_15219;
                  state_15219 = G__15261;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__12234__auto__ = function(state_15219) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__12234__auto____1.call(this, state_15219);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__12234__auto____0;
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__12234__auto____1;
            return cljs$core$async$state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto___15245, tc, fc);
      }();
      var state__12297__auto__ = function() {
        var statearr_15243 = f__12296__auto__.call(null);
        statearr_15243[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___15245;
        return statearr_15243;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto___15245, tc, fc));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
};
cljs.core.async.split.cljs$lang$maxFixedArity = 4;
cljs.core.async.reduce = function cljs$core$async$reduce(f, init, ch) {
  var c__12295__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto__) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto__) {
          return function(state_15308) {
            var state_val_15309 = state_15308[1];
            if (state_val_15309 === 7) {
              var inst_15304 = state_15308[2];
              var state_15308__$1 = state_15308;
              var statearr_15310_15326 = state_15308__$1;
              statearr_15310_15326[2] = inst_15304;
              statearr_15310_15326[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15309 === 6) {
                var inst_15297 = state_15308[7];
                var inst_15294 = state_15308[8];
                var inst_15301 = f.call(null, inst_15294, inst_15297);
                var inst_15294__$1 = inst_15301;
                var state_15308__$1 = function() {
                  var statearr_15311 = state_15308;
                  statearr_15311[8] = inst_15294__$1;
                  return statearr_15311;
                }();
                var statearr_15312_15327 = state_15308__$1;
                statearr_15312_15327[2] = null;
                statearr_15312_15327[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15309 === 5) {
                  var inst_15294 = state_15308[8];
                  var state_15308__$1 = state_15308;
                  var statearr_15313_15328 = state_15308__$1;
                  statearr_15313_15328[2] = inst_15294;
                  statearr_15313_15328[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15309 === 4) {
                    var inst_15297 = state_15308[7];
                    var inst_15297__$1 = state_15308[2];
                    var inst_15298 = inst_15297__$1 == null;
                    var state_15308__$1 = function() {
                      var statearr_15314 = state_15308;
                      statearr_15314[7] = inst_15297__$1;
                      return statearr_15314;
                    }();
                    if (cljs.core.truth_(inst_15298)) {
                      var statearr_15315_15329 = state_15308__$1;
                      statearr_15315_15329[1] = 5;
                    } else {
                      var statearr_15316_15330 = state_15308__$1;
                      statearr_15316_15330[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15309 === 3) {
                      var inst_15306 = state_15308[2];
                      var state_15308__$1 = state_15308;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15308__$1, inst_15306);
                    } else {
                      if (state_val_15309 === 2) {
                        var state_15308__$1 = state_15308;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15308__$1, 4, ch);
                      } else {
                        if (state_val_15309 === 1) {
                          var inst_15294 = init;
                          var state_15308__$1 = function() {
                            var statearr_15317 = state_15308;
                            statearr_15317[8] = inst_15294;
                            return statearr_15317;
                          }();
                          var statearr_15318_15331 = state_15308__$1;
                          statearr_15318_15331[2] = null;
                          statearr_15318_15331[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto__);
        return function(switch__12233__auto__, c__12295__auto__) {
          return function() {
            var cljs$core$async$reduce_$_state_machine__12234__auto__ = null;
            var cljs$core$async$reduce_$_state_machine__12234__auto____0 = function() {
              var statearr_15322 = [null, null, null, null, null, null, null, null, null];
              statearr_15322[0] = cljs$core$async$reduce_$_state_machine__12234__auto__;
              statearr_15322[1] = 1;
              return statearr_15322;
            };
            var cljs$core$async$reduce_$_state_machine__12234__auto____1 = function(state_15308) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_15308);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e15323) {
                    if (e15323 instanceof Object) {
                      var ex__12237__auto__ = e15323;
                      var statearr_15324_15332 = state_15308;
                      statearr_15324_15332[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15308);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15323;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15333 = state_15308;
                  state_15308 = G__15333;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$reduce_$_state_machine__12234__auto__ = function(state_15308) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$reduce_$_state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$reduce_$_state_machine__12234__auto____1.call(this, state_15308);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$reduce_$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$reduce_$_state_machine__12234__auto____0;
            cljs$core$async$reduce_$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$reduce_$_state_machine__12234__auto____1;
            return cljs$core$async$reduce_$_state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto__);
      }();
      var state__12297__auto__ = function() {
        var statearr_15325 = f__12296__auto__.call(null);
        statearr_15325[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto__;
        return statearr_15325;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto__));
  return c__12295__auto__;
};
cljs.core.async.onto_chan = function cljs$core$async$onto_chan() {
  var G__15335 = arguments.length;
  switch(G__15335) {
    case 2:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2 = function(ch, coll) {
  return cljs.core.async.onto_chan.call(null, ch, coll, true);
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3 = function(ch, coll, close_QMARK_) {
  var c__12295__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto__) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto__) {
          return function(state_15360) {
            var state_val_15361 = state_15360[1];
            if (state_val_15361 === 7) {
              var inst_15342 = state_15360[2];
              var state_15360__$1 = state_15360;
              var statearr_15362_15386 = state_15360__$1;
              statearr_15362_15386[2] = inst_15342;
              statearr_15362_15386[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15361 === 1) {
                var inst_15336 = cljs.core.seq.call(null, coll);
                var inst_15337 = inst_15336;
                var state_15360__$1 = function() {
                  var statearr_15363 = state_15360;
                  statearr_15363[7] = inst_15337;
                  return statearr_15363;
                }();
                var statearr_15364_15387 = state_15360__$1;
                statearr_15364_15387[2] = null;
                statearr_15364_15387[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15361 === 4) {
                  var inst_15337 = state_15360[7];
                  var inst_15340 = cljs.core.first.call(null, inst_15337);
                  var state_15360__$1 = state_15360;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15360__$1, 7, ch, inst_15340);
                } else {
                  if (state_val_15361 === 13) {
                    var inst_15354 = state_15360[2];
                    var state_15360__$1 = state_15360;
                    var statearr_15365_15388 = state_15360__$1;
                    statearr_15365_15388[2] = inst_15354;
                    statearr_15365_15388[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15361 === 6) {
                      var inst_15345 = state_15360[2];
                      var state_15360__$1 = state_15360;
                      if (cljs.core.truth_(inst_15345)) {
                        var statearr_15366_15389 = state_15360__$1;
                        statearr_15366_15389[1] = 8;
                      } else {
                        var statearr_15367_15390 = state_15360__$1;
                        statearr_15367_15390[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15361 === 3) {
                        var inst_15358 = state_15360[2];
                        var state_15360__$1 = state_15360;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15360__$1, inst_15358);
                      } else {
                        if (state_val_15361 === 12) {
                          var state_15360__$1 = state_15360;
                          var statearr_15368_15391 = state_15360__$1;
                          statearr_15368_15391[2] = null;
                          statearr_15368_15391[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15361 === 2) {
                            var inst_15337 = state_15360[7];
                            var state_15360__$1 = state_15360;
                            if (cljs.core.truth_(inst_15337)) {
                              var statearr_15369_15392 = state_15360__$1;
                              statearr_15369_15392[1] = 4;
                            } else {
                              var statearr_15370_15393 = state_15360__$1;
                              statearr_15370_15393[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15361 === 11) {
                              var inst_15351 = cljs.core.async.close_BANG_.call(null, ch);
                              var state_15360__$1 = state_15360;
                              var statearr_15371_15394 = state_15360__$1;
                              statearr_15371_15394[2] = inst_15351;
                              statearr_15371_15394[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_15361 === 9) {
                                var state_15360__$1 = state_15360;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_15372_15395 = state_15360__$1;
                                  statearr_15372_15395[1] = 11;
                                } else {
                                  var statearr_15373_15396 = state_15360__$1;
                                  statearr_15373_15396[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15361 === 5) {
                                  var inst_15337 = state_15360[7];
                                  var state_15360__$1 = state_15360;
                                  var statearr_15374_15397 = state_15360__$1;
                                  statearr_15374_15397[2] = inst_15337;
                                  statearr_15374_15397[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15361 === 10) {
                                    var inst_15356 = state_15360[2];
                                    var state_15360__$1 = state_15360;
                                    var statearr_15375_15398 = state_15360__$1;
                                    statearr_15375_15398[2] = inst_15356;
                                    statearr_15375_15398[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_15361 === 8) {
                                      var inst_15337 = state_15360[7];
                                      var inst_15347 = cljs.core.next.call(null, inst_15337);
                                      var inst_15337__$1 = inst_15347;
                                      var state_15360__$1 = function() {
                                        var statearr_15376 = state_15360;
                                        statearr_15376[7] = inst_15337__$1;
                                        return statearr_15376;
                                      }();
                                      var statearr_15377_15399 = state_15360__$1;
                                      statearr_15377_15399[2] = null;
                                      statearr_15377_15399[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto__);
        return function(switch__12233__auto__, c__12295__auto__) {
          return function() {
            var cljs$core$async$state_machine__12234__auto__ = null;
            var cljs$core$async$state_machine__12234__auto____0 = function() {
              var statearr_15381 = [null, null, null, null, null, null, null, null];
              statearr_15381[0] = cljs$core$async$state_machine__12234__auto__;
              statearr_15381[1] = 1;
              return statearr_15381;
            };
            var cljs$core$async$state_machine__12234__auto____1 = function(state_15360) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_15360);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e15382) {
                    if (e15382 instanceof Object) {
                      var ex__12237__auto__ = e15382;
                      var statearr_15383_15400 = state_15360;
                      statearr_15383_15400[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15360);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15382;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15401 = state_15360;
                  state_15360 = G__15401;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__12234__auto__ = function(state_15360) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__12234__auto____1.call(this, state_15360);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__12234__auto____0;
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__12234__auto____1;
            return cljs$core$async$state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto__);
      }();
      var state__12297__auto__ = function() {
        var statearr_15384 = f__12296__auto__.call(null);
        statearr_15384[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto__;
        return statearr_15384;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto__));
  return c__12295__auto__;
};
cljs.core.async.onto_chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.to_chan = function cljs$core$async$to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj15403 = {};
  return obj15403;
}();
cljs.core.async.muxch_STAR_ = function cljs$core$async$muxch_STAR_(_) {
  if (function() {
    var and__4345__auto__ = _;
    if (and__4345__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4993__auto__ = _ == null ? null : _;
    return function() {
      var or__4357__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj15405 = {};
  return obj15405;
}();
cljs.core.async.tap_STAR_ = function cljs$core$async$tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__4345__auto__ = m;
    if (and__4345__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4993__auto__ = m == null ? null : m;
    return function() {
      var or__4357__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function cljs$core$async$untap_STAR_(m, ch) {
  if (function() {
    var and__4345__auto__ = m;
    if (and__4345__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4993__auto__ = m == null ? null : m;
    return function() {
      var or__4357__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function cljs$core$async$untap_all_STAR_(m) {
  if (function() {
    var and__4345__auto__ = m;
    if (and__4345__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4993__auto__ = m == null ? null : m;
    return function() {
      var or__4357__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function cljs$core$async$mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t15627 !== "undefined") {
    } else {
      cljs.core.async.t15627 = function(cs, ch, mult, meta15628) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta15628 = meta15628;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t15627.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t15627.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t15627.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t15627.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t15627.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t15627.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t15627.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_15629) {
          var self__ = this;
          var _15629__$1 = this;
          return self__.meta15628;
        };
      }(cs);
      cljs.core.async.t15627.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_15629, meta15628__$1) {
          var self__ = this;
          var _15629__$1 = this;
          return new cljs.core.async.t15627(self__.cs, self__.ch, self__.mult, meta15628__$1);
        };
      }(cs);
      cljs.core.async.t15627.cljs$lang$type = true;
      cljs.core.async.t15627.cljs$lang$ctorStr = "cljs.core.async/t15627";
      cljs.core.async.t15627.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
          return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async/t15627");
        };
      }(cs);
      cljs.core.async.__GT_t15627 = function(cs) {
        return function cljs$core$async$mult_$___GT_t15627(cs__$1, ch__$1, mult__$1, meta15628) {
          return new cljs.core.async.t15627(cs__$1, ch__$1, mult__$1, meta15628);
        };
      }(cs);
    }
    return new cljs.core.async.t15627(cs, ch, cljs$core$async$mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__12295__auto___15848 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto___15848, cs, m, dchan, dctr, done) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto___15848, cs, m, dchan, dctr, done) {
          return function(state_15760) {
            var state_val_15761 = state_15760[1];
            if (state_val_15761 === 7) {
              var inst_15756 = state_15760[2];
              var state_15760__$1 = state_15760;
              var statearr_15762_15849 = state_15760__$1;
              statearr_15762_15849[2] = inst_15756;
              statearr_15762_15849[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15761 === 20) {
                var inst_15661 = state_15760[7];
                var inst_15671 = cljs.core.first.call(null, inst_15661);
                var inst_15672 = cljs.core.nth.call(null, inst_15671, 0, null);
                var inst_15673 = cljs.core.nth.call(null, inst_15671, 1, null);
                var state_15760__$1 = function() {
                  var statearr_15763 = state_15760;
                  statearr_15763[8] = inst_15672;
                  return statearr_15763;
                }();
                if (cljs.core.truth_(inst_15673)) {
                  var statearr_15764_15850 = state_15760__$1;
                  statearr_15764_15850[1] = 22;
                } else {
                  var statearr_15765_15851 = state_15760__$1;
                  statearr_15765_15851[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15761 === 27) {
                  var inst_15701 = state_15760[9];
                  var inst_15632 = state_15760[10];
                  var inst_15708 = state_15760[11];
                  var inst_15703 = state_15760[12];
                  var inst_15708__$1 = cljs.core._nth.call(null, inst_15701, inst_15703);
                  var inst_15709 = cljs.core.async.put_BANG_.call(null, inst_15708__$1, inst_15632, done);
                  var state_15760__$1 = function() {
                    var statearr_15766 = state_15760;
                    statearr_15766[11] = inst_15708__$1;
                    return statearr_15766;
                  }();
                  if (cljs.core.truth_(inst_15709)) {
                    var statearr_15767_15852 = state_15760__$1;
                    statearr_15767_15852[1] = 30;
                  } else {
                    var statearr_15768_15853 = state_15760__$1;
                    statearr_15768_15853[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15761 === 1) {
                    var state_15760__$1 = state_15760;
                    var statearr_15769_15854 = state_15760__$1;
                    statearr_15769_15854[2] = null;
                    statearr_15769_15854[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15761 === 24) {
                      var inst_15661 = state_15760[7];
                      var inst_15678 = state_15760[2];
                      var inst_15679 = cljs.core.next.call(null, inst_15661);
                      var inst_15641 = inst_15679;
                      var inst_15642 = null;
                      var inst_15643 = 0;
                      var inst_15644 = 0;
                      var state_15760__$1 = function() {
                        var statearr_15770 = state_15760;
                        statearr_15770[13] = inst_15678;
                        statearr_15770[14] = inst_15644;
                        statearr_15770[15] = inst_15642;
                        statearr_15770[16] = inst_15641;
                        statearr_15770[17] = inst_15643;
                        return statearr_15770;
                      }();
                      var statearr_15771_15855 = state_15760__$1;
                      statearr_15771_15855[2] = null;
                      statearr_15771_15855[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15761 === 39) {
                        var state_15760__$1 = state_15760;
                        var statearr_15775_15856 = state_15760__$1;
                        statearr_15775_15856[2] = null;
                        statearr_15775_15856[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15761 === 4) {
                          var inst_15632 = state_15760[10];
                          var inst_15632__$1 = state_15760[2];
                          var inst_15633 = inst_15632__$1 == null;
                          var state_15760__$1 = function() {
                            var statearr_15776 = state_15760;
                            statearr_15776[10] = inst_15632__$1;
                            return statearr_15776;
                          }();
                          if (cljs.core.truth_(inst_15633)) {
                            var statearr_15777_15857 = state_15760__$1;
                            statearr_15777_15857[1] = 5;
                          } else {
                            var statearr_15778_15858 = state_15760__$1;
                            statearr_15778_15858[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15761 === 15) {
                            var inst_15644 = state_15760[14];
                            var inst_15642 = state_15760[15];
                            var inst_15641 = state_15760[16];
                            var inst_15643 = state_15760[17];
                            var inst_15657 = state_15760[2];
                            var inst_15658 = inst_15644 + 1;
                            var tmp15772 = inst_15642;
                            var tmp15773 = inst_15641;
                            var tmp15774 = inst_15643;
                            var inst_15641__$1 = tmp15773;
                            var inst_15642__$1 = tmp15772;
                            var inst_15643__$1 = tmp15774;
                            var inst_15644__$1 = inst_15658;
                            var state_15760__$1 = function() {
                              var statearr_15779 = state_15760;
                              statearr_15779[14] = inst_15644__$1;
                              statearr_15779[15] = inst_15642__$1;
                              statearr_15779[16] = inst_15641__$1;
                              statearr_15779[17] = inst_15643__$1;
                              statearr_15779[18] = inst_15657;
                              return statearr_15779;
                            }();
                            var statearr_15780_15859 = state_15760__$1;
                            statearr_15780_15859[2] = null;
                            statearr_15780_15859[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15761 === 21) {
                              var inst_15682 = state_15760[2];
                              var state_15760__$1 = state_15760;
                              var statearr_15784_15860 = state_15760__$1;
                              statearr_15784_15860[2] = inst_15682;
                              statearr_15784_15860[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_15761 === 31) {
                                var inst_15708 = state_15760[11];
                                var inst_15712 = done.call(null, null);
                                var inst_15713 = cljs.core.async.untap_STAR_.call(null, m, inst_15708);
                                var state_15760__$1 = function() {
                                  var statearr_15785 = state_15760;
                                  statearr_15785[19] = inst_15712;
                                  return statearr_15785;
                                }();
                                var statearr_15786_15861 = state_15760__$1;
                                statearr_15786_15861[2] = inst_15713;
                                statearr_15786_15861[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15761 === 32) {
                                  var inst_15701 = state_15760[9];
                                  var inst_15700 = state_15760[20];
                                  var inst_15702 = state_15760[21];
                                  var inst_15703 = state_15760[12];
                                  var inst_15715 = state_15760[2];
                                  var inst_15716 = inst_15703 + 1;
                                  var tmp15781 = inst_15701;
                                  var tmp15782 = inst_15700;
                                  var tmp15783 = inst_15702;
                                  var inst_15700__$1 = tmp15782;
                                  var inst_15701__$1 = tmp15781;
                                  var inst_15702__$1 = tmp15783;
                                  var inst_15703__$1 = inst_15716;
                                  var state_15760__$1 = function() {
                                    var statearr_15787 = state_15760;
                                    statearr_15787[22] = inst_15715;
                                    statearr_15787[9] = inst_15701__$1;
                                    statearr_15787[20] = inst_15700__$1;
                                    statearr_15787[21] = inst_15702__$1;
                                    statearr_15787[12] = inst_15703__$1;
                                    return statearr_15787;
                                  }();
                                  var statearr_15788_15862 = state_15760__$1;
                                  statearr_15788_15862[2] = null;
                                  statearr_15788_15862[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15761 === 40) {
                                    var inst_15728 = state_15760[23];
                                    var inst_15732 = done.call(null, null);
                                    var inst_15733 = cljs.core.async.untap_STAR_.call(null, m, inst_15728);
                                    var state_15760__$1 = function() {
                                      var statearr_15789 = state_15760;
                                      statearr_15789[24] = inst_15732;
                                      return statearr_15789;
                                    }();
                                    var statearr_15790_15863 = state_15760__$1;
                                    statearr_15790_15863[2] = inst_15733;
                                    statearr_15790_15863[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_15761 === 33) {
                                      var inst_15719 = state_15760[25];
                                      var inst_15721 = cljs.core.chunked_seq_QMARK_.call(null, inst_15719);
                                      var state_15760__$1 = state_15760;
                                      if (inst_15721) {
                                        var statearr_15791_15864 = state_15760__$1;
                                        statearr_15791_15864[1] = 36;
                                      } else {
                                        var statearr_15792_15865 = state_15760__$1;
                                        statearr_15792_15865[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_15761 === 13) {
                                        var inst_15651 = state_15760[26];
                                        var inst_15654 = cljs.core.async.close_BANG_.call(null, inst_15651);
                                        var state_15760__$1 = state_15760;
                                        var statearr_15793_15866 = state_15760__$1;
                                        statearr_15793_15866[2] = inst_15654;
                                        statearr_15793_15866[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_15761 === 22) {
                                          var inst_15672 = state_15760[8];
                                          var inst_15675 = cljs.core.async.close_BANG_.call(null, inst_15672);
                                          var state_15760__$1 = state_15760;
                                          var statearr_15794_15867 = state_15760__$1;
                                          statearr_15794_15867[2] = inst_15675;
                                          statearr_15794_15867[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_15761 === 36) {
                                            var inst_15719 = state_15760[25];
                                            var inst_15723 = cljs.core.chunk_first.call(null, inst_15719);
                                            var inst_15724 = cljs.core.chunk_rest.call(null, inst_15719);
                                            var inst_15725 = cljs.core.count.call(null, inst_15723);
                                            var inst_15700 = inst_15724;
                                            var inst_15701 = inst_15723;
                                            var inst_15702 = inst_15725;
                                            var inst_15703 = 0;
                                            var state_15760__$1 = function() {
                                              var statearr_15795 = state_15760;
                                              statearr_15795[9] = inst_15701;
                                              statearr_15795[20] = inst_15700;
                                              statearr_15795[21] = inst_15702;
                                              statearr_15795[12] = inst_15703;
                                              return statearr_15795;
                                            }();
                                            var statearr_15796_15868 = state_15760__$1;
                                            statearr_15796_15868[2] = null;
                                            statearr_15796_15868[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_15761 === 41) {
                                              var inst_15719 = state_15760[25];
                                              var inst_15735 = state_15760[2];
                                              var inst_15736 = cljs.core.next.call(null, inst_15719);
                                              var inst_15700 = inst_15736;
                                              var inst_15701 = null;
                                              var inst_15702 = 0;
                                              var inst_15703 = 0;
                                              var state_15760__$1 = function() {
                                                var statearr_15797 = state_15760;
                                                statearr_15797[9] = inst_15701;
                                                statearr_15797[20] = inst_15700;
                                                statearr_15797[21] = inst_15702;
                                                statearr_15797[27] = inst_15735;
                                                statearr_15797[12] = inst_15703;
                                                return statearr_15797;
                                              }();
                                              var statearr_15798_15869 = state_15760__$1;
                                              statearr_15798_15869[2] = null;
                                              statearr_15798_15869[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_15761 === 43) {
                                                var state_15760__$1 = state_15760;
                                                var statearr_15799_15870 = state_15760__$1;
                                                statearr_15799_15870[2] = null;
                                                statearr_15799_15870[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_15761 === 29) {
                                                  var inst_15744 = state_15760[2];
                                                  var state_15760__$1 = state_15760;
                                                  var statearr_15800_15871 = state_15760__$1;
                                                  statearr_15800_15871[2] = inst_15744;
                                                  statearr_15800_15871[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_15761 === 44) {
                                                    var inst_15753 = state_15760[2];
                                                    var state_15760__$1 = function() {
                                                      var statearr_15801 = state_15760;
                                                      statearr_15801[28] = inst_15753;
                                                      return statearr_15801;
                                                    }();
                                                    var statearr_15802_15872 = state_15760__$1;
                                                    statearr_15802_15872[2] = null;
                                                    statearr_15802_15872[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_15761 === 6) {
                                                      var inst_15692 = state_15760[29];
                                                      var inst_15691 = cljs.core.deref.call(null, cs);
                                                      var inst_15692__$1 = cljs.core.keys.call(null, inst_15691);
                                                      var inst_15693 = cljs.core.count.call(null, inst_15692__$1);
                                                      var inst_15694 = cljs.core.reset_BANG_.call(null, dctr, inst_15693);
                                                      var inst_15699 = cljs.core.seq.call(null, inst_15692__$1);
                                                      var inst_15700 = inst_15699;
                                                      var inst_15701 = null;
                                                      var inst_15702 = 0;
                                                      var inst_15703 = 0;
                                                      var state_15760__$1 = function() {
                                                        var statearr_15803 = state_15760;
                                                        statearr_15803[9] = inst_15701;
                                                        statearr_15803[30] = inst_15694;
                                                        statearr_15803[20] = inst_15700;
                                                        statearr_15803[21] = inst_15702;
                                                        statearr_15803[29] = inst_15692__$1;
                                                        statearr_15803[12] = inst_15703;
                                                        return statearr_15803;
                                                      }();
                                                      var statearr_15804_15873 = state_15760__$1;
                                                      statearr_15804_15873[2] = null;
                                                      statearr_15804_15873[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_15761 === 28) {
                                                        var inst_15719 = state_15760[25];
                                                        var inst_15700 = state_15760[20];
                                                        var inst_15719__$1 = cljs.core.seq.call(null, inst_15700);
                                                        var state_15760__$1 = function() {
                                                          var statearr_15805 = state_15760;
                                                          statearr_15805[25] = inst_15719__$1;
                                                          return statearr_15805;
                                                        }();
                                                        if (inst_15719__$1) {
                                                          var statearr_15806_15874 = state_15760__$1;
                                                          statearr_15806_15874[1] = 33;
                                                        } else {
                                                          var statearr_15807_15875 = state_15760__$1;
                                                          statearr_15807_15875[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_15761 === 25) {
                                                          var inst_15702 = state_15760[21];
                                                          var inst_15703 = state_15760[12];
                                                          var inst_15705 = inst_15703 < inst_15702;
                                                          var inst_15706 = inst_15705;
                                                          var state_15760__$1 = state_15760;
                                                          if (cljs.core.truth_(inst_15706)) {
                                                            var statearr_15808_15876 = state_15760__$1;
                                                            statearr_15808_15876[1] = 27;
                                                          } else {
                                                            var statearr_15809_15877 = state_15760__$1;
                                                            statearr_15809_15877[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_15761 === 34) {
                                                            var state_15760__$1 = state_15760;
                                                            var statearr_15810_15878 = state_15760__$1;
                                                            statearr_15810_15878[2] = null;
                                                            statearr_15810_15878[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_15761 === 17) {
                                                              var state_15760__$1 = state_15760;
                                                              var statearr_15811_15879 = state_15760__$1;
                                                              statearr_15811_15879[2] = null;
                                                              statearr_15811_15879[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_15761 === 3) {
                                                                var inst_15758 = state_15760[2];
                                                                var state_15760__$1 = state_15760;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15760__$1, inst_15758);
                                                              } else {
                                                                if (state_val_15761 === 12) {
                                                                  var inst_15687 = state_15760[2];
                                                                  var state_15760__$1 = state_15760;
                                                                  var statearr_15812_15880 = state_15760__$1;
                                                                  statearr_15812_15880[2] = inst_15687;
                                                                  statearr_15812_15880[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_15761 === 2) {
                                                                    var state_15760__$1 = state_15760;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15760__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_15761 === 23) {
                                                                      var state_15760__$1 = state_15760;
                                                                      var statearr_15813_15881 = state_15760__$1;
                                                                      statearr_15813_15881[2] = null;
                                                                      statearr_15813_15881[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_15761 === 35) {
                                                                        var inst_15742 = state_15760[2];
                                                                        var state_15760__$1 = state_15760;
                                                                        var statearr_15814_15882 = state_15760__$1;
                                                                        statearr_15814_15882[2] = inst_15742;
                                                                        statearr_15814_15882[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_15761 === 19) {
                                                                          var inst_15661 = state_15760[7];
                                                                          var inst_15665 = cljs.core.chunk_first.call(null, inst_15661);
                                                                          var inst_15666 = cljs.core.chunk_rest.call(null, inst_15661);
                                                                          var inst_15667 = cljs.core.count.call(null, inst_15665);
                                                                          var inst_15641 = inst_15666;
                                                                          var inst_15642 = inst_15665;
                                                                          var inst_15643 = inst_15667;
                                                                          var inst_15644 = 0;
                                                                          var state_15760__$1 = function() {
                                                                            var statearr_15815 = state_15760;
                                                                            statearr_15815[14] = inst_15644;
                                                                            statearr_15815[15] = inst_15642;
                                                                            statearr_15815[16] = inst_15641;
                                                                            statearr_15815[17] = inst_15643;
                                                                            return statearr_15815;
                                                                          }();
                                                                          var statearr_15816_15883 = state_15760__$1;
                                                                          statearr_15816_15883[2] = null;
                                                                          statearr_15816_15883[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_15761 === 11) {
                                                                            var inst_15661 = state_15760[7];
                                                                            var inst_15641 = state_15760[16];
                                                                            var inst_15661__$1 = cljs.core.seq.call(null, inst_15641);
                                                                            var state_15760__$1 = function() {
                                                                              var statearr_15817 = state_15760;
                                                                              statearr_15817[7] = inst_15661__$1;
                                                                              return statearr_15817;
                                                                            }();
                                                                            if (inst_15661__$1) {
                                                                              var statearr_15818_15884 = state_15760__$1;
                                                                              statearr_15818_15884[1] = 16;
                                                                            } else {
                                                                              var statearr_15819_15885 = state_15760__$1;
                                                                              statearr_15819_15885[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_15761 === 9) {
                                                                              var inst_15689 = state_15760[2];
                                                                              var state_15760__$1 = state_15760;
                                                                              var statearr_15820_15886 = state_15760__$1;
                                                                              statearr_15820_15886[2] = inst_15689;
                                                                              statearr_15820_15886[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_15761 === 5) {
                                                                                var inst_15639 = cljs.core.deref.call(null, cs);
                                                                                var inst_15640 = cljs.core.seq.call(null, inst_15639);
                                                                                var inst_15641 = inst_15640;
                                                                                var inst_15642 = null;
                                                                                var inst_15643 = 0;
                                                                                var inst_15644 = 0;
                                                                                var state_15760__$1 = function() {
                                                                                  var statearr_15821 = state_15760;
                                                                                  statearr_15821[14] = inst_15644;
                                                                                  statearr_15821[15] = inst_15642;
                                                                                  statearr_15821[16] = inst_15641;
                                                                                  statearr_15821[17] = inst_15643;
                                                                                  return statearr_15821;
                                                                                }();
                                                                                var statearr_15822_15887 = state_15760__$1;
                                                                                statearr_15822_15887[2] = null;
                                                                                statearr_15822_15887[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_15761 === 14) {
                                                                                  var state_15760__$1 = state_15760;
                                                                                  var statearr_15823_15888 = state_15760__$1;
                                                                                  statearr_15823_15888[2] = null;
                                                                                  statearr_15823_15888[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_15761 === 45) {
                                                                                    var inst_15750 = state_15760[2];
                                                                                    var state_15760__$1 = state_15760;
                                                                                    var statearr_15824_15889 = state_15760__$1;
                                                                                    statearr_15824_15889[2] = inst_15750;
                                                                                    statearr_15824_15889[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_15761 === 26) {
                                                                                      var inst_15692 = state_15760[29];
                                                                                      var inst_15746 = state_15760[2];
                                                                                      var inst_15747 = cljs.core.seq.call(null, inst_15692);
                                                                                      var state_15760__$1 = function() {
                                                                                        var statearr_15825 = state_15760;
                                                                                        statearr_15825[31] = inst_15746;
                                                                                        return statearr_15825;
                                                                                      }();
                                                                                      if (inst_15747) {
                                                                                        var statearr_15826_15890 = state_15760__$1;
                                                                                        statearr_15826_15890[1] = 42;
                                                                                      } else {
                                                                                        var statearr_15827_15891 = state_15760__$1;
                                                                                        statearr_15827_15891[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_15761 === 16) {
                                                                                        var inst_15661 = state_15760[7];
                                                                                        var inst_15663 = cljs.core.chunked_seq_QMARK_.call(null, inst_15661);
                                                                                        var state_15760__$1 = state_15760;
                                                                                        if (inst_15663) {
                                                                                          var statearr_15828_15892 = state_15760__$1;
                                                                                          statearr_15828_15892[1] = 19;
                                                                                        } else {
                                                                                          var statearr_15829_15893 = state_15760__$1;
                                                                                          statearr_15829_15893[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_15761 === 38) {
                                                                                          var inst_15739 = state_15760[2];
                                                                                          var state_15760__$1 = state_15760;
                                                                                          var statearr_15830_15894 = state_15760__$1;
                                                                                          statearr_15830_15894[2] = inst_15739;
                                                                                          statearr_15830_15894[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_15761 === 30) {
                                                                                            var state_15760__$1 = state_15760;
                                                                                            var statearr_15831_15895 = state_15760__$1;
                                                                                            statearr_15831_15895[2] = null;
                                                                                            statearr_15831_15895[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_15761 === 10) {
                                                                                              var inst_15644 = state_15760[14];
                                                                                              var inst_15642 = state_15760[15];
                                                                                              var inst_15650 = cljs.core._nth.call(null, inst_15642, inst_15644);
                                                                                              var inst_15651 = cljs.core.nth.call(null, inst_15650, 0, null);
                                                                                              var inst_15652 = cljs.core.nth.call(null, inst_15650, 1, null);
                                                                                              var state_15760__$1 = function() {
                                                                                                var statearr_15832 = state_15760;
                                                                                                statearr_15832[26] = inst_15651;
                                                                                                return statearr_15832;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_15652)) {
                                                                                                var statearr_15833_15896 = state_15760__$1;
                                                                                                statearr_15833_15896[1] = 13;
                                                                                              } else {
                                                                                                var statearr_15834_15897 = state_15760__$1;
                                                                                                statearr_15834_15897[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_15761 === 18) {
                                                                                                var inst_15685 = state_15760[2];
                                                                                                var state_15760__$1 = state_15760;
                                                                                                var statearr_15835_15898 = state_15760__$1;
                                                                                                statearr_15835_15898[2] = inst_15685;
                                                                                                statearr_15835_15898[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_15761 === 42) {
                                                                                                  var state_15760__$1 = state_15760;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15760__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_15761 === 37) {
                                                                                                    var inst_15719 = state_15760[25];
                                                                                                    var inst_15632 = state_15760[10];
                                                                                                    var inst_15728 = state_15760[23];
                                                                                                    var inst_15728__$1 = cljs.core.first.call(null, inst_15719);
                                                                                                    var inst_15729 = cljs.core.async.put_BANG_.call(null, inst_15728__$1, inst_15632, done);
                                                                                                    var state_15760__$1 = function() {
                                                                                                      var statearr_15836 = state_15760;
                                                                                                      statearr_15836[23] = inst_15728__$1;
                                                                                                      return statearr_15836;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_15729)) {
                                                                                                      var statearr_15837_15899 = state_15760__$1;
                                                                                                      statearr_15837_15899[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_15838_15900 = state_15760__$1;
                                                                                                      statearr_15838_15900[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_15761 === 8) {
                                                                                                      var inst_15644 = state_15760[14];
                                                                                                      var inst_15643 = state_15760[17];
                                                                                                      var inst_15646 = inst_15644 < inst_15643;
                                                                                                      var inst_15647 = inst_15646;
                                                                                                      var state_15760__$1 = state_15760;
                                                                                                      if (cljs.core.truth_(inst_15647)) {
                                                                                                        var statearr_15839_15901 = state_15760__$1;
                                                                                                        statearr_15839_15901[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_15840_15902 = state_15760__$1;
                                                                                                        statearr_15840_15902[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto___15848, cs, m, dchan, dctr, done);
        return function(switch__12233__auto__, c__12295__auto___15848, cs, m, dchan, dctr, done) {
          return function() {
            var cljs$core$async$mult_$_state_machine__12234__auto__ = null;
            var cljs$core$async$mult_$_state_machine__12234__auto____0 = function() {
              var statearr_15844 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_15844[0] = cljs$core$async$mult_$_state_machine__12234__auto__;
              statearr_15844[1] = 1;
              return statearr_15844;
            };
            var cljs$core$async$mult_$_state_machine__12234__auto____1 = function(state_15760) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_15760);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e15845) {
                    if (e15845 instanceof Object) {
                      var ex__12237__auto__ = e15845;
                      var statearr_15846_15903 = state_15760;
                      statearr_15846_15903[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15760);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15845;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15904 = state_15760;
                  state_15760 = G__15904;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$mult_$_state_machine__12234__auto__ = function(state_15760) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mult_$_state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$mult_$_state_machine__12234__auto____1.call(this, state_15760);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mult_$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mult_$_state_machine__12234__auto____0;
            cljs$core$async$mult_$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mult_$_state_machine__12234__auto____1;
            return cljs$core$async$mult_$_state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto___15848, cs, m, dchan, dctr, done);
      }();
      var state__12297__auto__ = function() {
        var statearr_15847 = f__12296__auto__.call(null);
        statearr_15847[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___15848;
        return statearr_15847;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto___15848, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function cljs$core$async$tap() {
  var G__15906 = arguments.length;
  switch(G__15906) {
    case 2:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2 = function(mult, ch) {
  return cljs.core.async.tap.call(null, mult, ch, true);
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3 = function(mult, ch, close_QMARK_) {
  cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
  return ch;
};
cljs.core.async.tap.cljs$lang$maxFixedArity = 3;
cljs.core.async.untap = function cljs$core$async$untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function cljs$core$async$untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj15909 = {};
  return obj15909;
}();
cljs.core.async.admix_STAR_ = function cljs$core$async$admix_STAR_(m, ch) {
  if (function() {
    var and__4345__auto__ = m;
    if (and__4345__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4993__auto__ = m == null ? null : m;
    return function() {
      var or__4357__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function cljs$core$async$unmix_STAR_(m, ch) {
  if (function() {
    var and__4345__auto__ = m;
    if (and__4345__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4993__auto__ = m == null ? null : m;
    return function() {
      var or__4357__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function cljs$core$async$unmix_all_STAR_(m) {
  if (function() {
    var and__4345__auto__ = m;
    if (and__4345__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4993__auto__ = m == null ? null : m;
    return function() {
      var or__4357__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function cljs$core$async$toggle_STAR_(m, state_map) {
  if (function() {
    var and__4345__auto__ = m;
    if (and__4345__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4993__auto__ = m == null ? null : m;
    return function() {
      var or__4357__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function cljs$core$async$solo_mode_STAR_(m, mode) {
  if (function() {
    var and__4345__auto__ = m;
    if (and__4345__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4993__auto__ = m == null ? null : m;
    return function() {
      var or__4357__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.ioc_alts_BANG_ = function cljs$core$async$ioc_alts_BANG_() {
  var argseq__5397__auto__ = 3 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0) : null;
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5397__auto__);
};
cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(state, cont_block, ports, p__15914) {
  var map__15915 = p__15914;
  var map__15915__$1 = cljs.core.seq_QMARK_.call(null, map__15915) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15915) : map__15915;
  var opts = map__15915__$1;
  var statearr_15916_15919 = state;
  statearr_15916_15919[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
  var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__15915, map__15915__$1, opts) {
    return function(val) {
      var statearr_15917_15920 = state;
      statearr_15917_15920[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    };
  }(map__15915, map__15915__$1, opts), ports, opts);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var cb = temp__4126__auto__;
    var statearr_15918_15921 = state;
    statearr_15918_15921[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.ioc_alts_BANG_.cljs$lang$applyTo = function(seq15910) {
  var G__15911 = cljs.core.first.call(null, seq15910);
  var seq15910__$1 = cljs.core.next.call(null, seq15910);
  var G__15912 = cljs.core.first.call(null, seq15910__$1);
  var seq15910__$2 = cljs.core.next.call(null, seq15910__$1);
  var G__15913 = cljs.core.first.call(null, seq15910__$2);
  var seq15910__$3 = cljs.core.next.call(null, seq15910__$2);
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__15911, G__15912, G__15913, seq15910__$3);
};
cljs.core.async.mix = function cljs$core$async$mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t16041 !== "undefined") {
    } else {
      cljs.core.async.t16041 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta16042) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta16042 = meta16042;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t16041.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t16041.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16041.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16041.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16041.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16041.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16041.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t16041.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16041.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_16043) {
          var self__ = this;
          var _16043__$1 = this;
          return self__.meta16042;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16041.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_16043, meta16042__$1) {
          var self__ = this;
          var _16043__$1 = this;
          return new cljs.core.async.t16041(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta16042__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16041.cljs$lang$type = true;
      cljs.core.async.t16041.cljs$lang$ctorStr = "cljs.core.async/t16041";
      cljs.core.async.t16041.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
          return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async/t16041");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t16041 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function cljs$core$async$mix_$___GT_t16041(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta16042) {
          return new cljs.core.async.t16041(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta16042);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t16041(change, cljs$core$async$mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__12295__auto___16160 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto___16160, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto___16160, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_16113) {
            var state_val_16114 = state_16113[1];
            if (state_val_16114 === 7) {
              var inst_16057 = state_16113[7];
              var inst_16062 = cljs.core.apply.call(null, cljs.core.hash_map, inst_16057);
              var state_16113__$1 = state_16113;
              var statearr_16115_16161 = state_16113__$1;
              statearr_16115_16161[2] = inst_16062;
              statearr_16115_16161[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16114 === 20) {
                var inst_16072 = state_16113[8];
                var state_16113__$1 = state_16113;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16113__$1, 23, out, inst_16072);
              } else {
                if (state_val_16114 === 1) {
                  var inst_16047 = state_16113[9];
                  var inst_16047__$1 = calc_state.call(null);
                  var inst_16048 = cljs.core.seq_QMARK_.call(null, inst_16047__$1);
                  var state_16113__$1 = function() {
                    var statearr_16116 = state_16113;
                    statearr_16116[9] = inst_16047__$1;
                    return statearr_16116;
                  }();
                  if (inst_16048) {
                    var statearr_16117_16162 = state_16113__$1;
                    statearr_16117_16162[1] = 2;
                  } else {
                    var statearr_16118_16163 = state_16113__$1;
                    statearr_16118_16163[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16114 === 24) {
                    var inst_16065 = state_16113[10];
                    var inst_16057 = inst_16065;
                    var state_16113__$1 = function() {
                      var statearr_16119 = state_16113;
                      statearr_16119[7] = inst_16057;
                      return statearr_16119;
                    }();
                    var statearr_16120_16164 = state_16113__$1;
                    statearr_16120_16164[2] = null;
                    statearr_16120_16164[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16114 === 4) {
                      var inst_16047 = state_16113[9];
                      var inst_16053 = state_16113[2];
                      var inst_16054 = cljs.core.get.call(null, inst_16053, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_16055 = cljs.core.get.call(null, inst_16053, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_16056 = cljs.core.get.call(null, inst_16053, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_16057 = inst_16047;
                      var state_16113__$1 = function() {
                        var statearr_16121 = state_16113;
                        statearr_16121[7] = inst_16057;
                        statearr_16121[11] = inst_16055;
                        statearr_16121[12] = inst_16054;
                        statearr_16121[13] = inst_16056;
                        return statearr_16121;
                      }();
                      var statearr_16122_16165 = state_16113__$1;
                      statearr_16122_16165[2] = null;
                      statearr_16122_16165[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16114 === 15) {
                        var state_16113__$1 = state_16113;
                        var statearr_16123_16166 = state_16113__$1;
                        statearr_16123_16166[2] = null;
                        statearr_16123_16166[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16114 === 21) {
                          var inst_16065 = state_16113[10];
                          var inst_16057 = inst_16065;
                          var state_16113__$1 = function() {
                            var statearr_16124 = state_16113;
                            statearr_16124[7] = inst_16057;
                            return statearr_16124;
                          }();
                          var statearr_16125_16167 = state_16113__$1;
                          statearr_16125_16167[2] = null;
                          statearr_16125_16167[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16114 === 13) {
                            var inst_16109 = state_16113[2];
                            var state_16113__$1 = state_16113;
                            var statearr_16126_16168 = state_16113__$1;
                            statearr_16126_16168[2] = inst_16109;
                            statearr_16126_16168[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16114 === 22) {
                              var inst_16107 = state_16113[2];
                              var state_16113__$1 = state_16113;
                              var statearr_16127_16169 = state_16113__$1;
                              statearr_16127_16169[2] = inst_16107;
                              statearr_16127_16169[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16114 === 6) {
                                var inst_16111 = state_16113[2];
                                var state_16113__$1 = state_16113;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16113__$1, inst_16111);
                              } else {
                                if (state_val_16114 === 25) {
                                  var state_16113__$1 = state_16113;
                                  var statearr_16128_16170 = state_16113__$1;
                                  statearr_16128_16170[2] = null;
                                  statearr_16128_16170[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_16114 === 17) {
                                    var inst_16087 = state_16113[14];
                                    var state_16113__$1 = state_16113;
                                    var statearr_16129_16171 = state_16113__$1;
                                    statearr_16129_16171[2] = inst_16087;
                                    statearr_16129_16171[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_16114 === 3) {
                                      var inst_16047 = state_16113[9];
                                      var state_16113__$1 = state_16113;
                                      var statearr_16130_16172 = state_16113__$1;
                                      statearr_16130_16172[2] = inst_16047;
                                      statearr_16130_16172[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_16114 === 12) {
                                        var inst_16087 = state_16113[14];
                                        var inst_16068 = state_16113[15];
                                        var inst_16073 = state_16113[16];
                                        var inst_16087__$1 = inst_16068.call(null, inst_16073);
                                        var state_16113__$1 = function() {
                                          var statearr_16131 = state_16113;
                                          statearr_16131[14] = inst_16087__$1;
                                          return statearr_16131;
                                        }();
                                        if (cljs.core.truth_(inst_16087__$1)) {
                                          var statearr_16132_16173 = state_16113__$1;
                                          statearr_16132_16173[1] = 17;
                                        } else {
                                          var statearr_16133_16174 = state_16113__$1;
                                          statearr_16133_16174[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16114 === 2) {
                                          var inst_16047 = state_16113[9];
                                          var inst_16050 = cljs.core.apply.call(null, cljs.core.hash_map, inst_16047);
                                          var state_16113__$1 = state_16113;
                                          var statearr_16134_16175 = state_16113__$1;
                                          statearr_16134_16175[2] = inst_16050;
                                          statearr_16134_16175[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_16114 === 23) {
                                            var inst_16098 = state_16113[2];
                                            var state_16113__$1 = state_16113;
                                            if (cljs.core.truth_(inst_16098)) {
                                              var statearr_16135_16176 = state_16113__$1;
                                              statearr_16135_16176[1] = 24;
                                            } else {
                                              var statearr_16136_16177 = state_16113__$1;
                                              statearr_16136_16177[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_16114 === 19) {
                                              var inst_16095 = state_16113[2];
                                              var state_16113__$1 = state_16113;
                                              if (cljs.core.truth_(inst_16095)) {
                                                var statearr_16137_16178 = state_16113__$1;
                                                statearr_16137_16178[1] = 20;
                                              } else {
                                                var statearr_16138_16179 = state_16113__$1;
                                                statearr_16138_16179[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_16114 === 11) {
                                                var inst_16072 = state_16113[8];
                                                var inst_16078 = inst_16072 == null;
                                                var state_16113__$1 = state_16113;
                                                if (cljs.core.truth_(inst_16078)) {
                                                  var statearr_16139_16180 = state_16113__$1;
                                                  statearr_16139_16180[1] = 14;
                                                } else {
                                                  var statearr_16140_16181 = state_16113__$1;
                                                  statearr_16140_16181[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_16114 === 9) {
                                                  var inst_16065 = state_16113[10];
                                                  var inst_16065__$1 = state_16113[2];
                                                  var inst_16066 = cljs.core.get.call(null, inst_16065__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_16067 = cljs.core.get.call(null, inst_16065__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_16068 = cljs.core.get.call(null, inst_16065__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_16113__$1 = function() {
                                                    var statearr_16141 = state_16113;
                                                    statearr_16141[15] = inst_16068;
                                                    statearr_16141[10] = inst_16065__$1;
                                                    statearr_16141[17] = inst_16067;
                                                    return statearr_16141;
                                                  }();
                                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_16113__$1, 10, inst_16066);
                                                } else {
                                                  if (state_val_16114 === 5) {
                                                    var inst_16057 = state_16113[7];
                                                    var inst_16060 = cljs.core.seq_QMARK_.call(null, inst_16057);
                                                    var state_16113__$1 = state_16113;
                                                    if (inst_16060) {
                                                      var statearr_16142_16182 = state_16113__$1;
                                                      statearr_16142_16182[1] = 7;
                                                    } else {
                                                      var statearr_16143_16183 = state_16113__$1;
                                                      statearr_16143_16183[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_16114 === 14) {
                                                      var inst_16073 = state_16113[16];
                                                      var inst_16080 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_16073);
                                                      var state_16113__$1 = state_16113;
                                                      var statearr_16144_16184 = state_16113__$1;
                                                      statearr_16144_16184[2] = inst_16080;
                                                      statearr_16144_16184[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_16114 === 26) {
                                                        var inst_16103 = state_16113[2];
                                                        var state_16113__$1 = state_16113;
                                                        var statearr_16145_16185 = state_16113__$1;
                                                        statearr_16145_16185[2] = inst_16103;
                                                        statearr_16145_16185[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_16114 === 16) {
                                                          var inst_16083 = state_16113[2];
                                                          var inst_16084 = calc_state.call(null);
                                                          var inst_16057 = inst_16084;
                                                          var state_16113__$1 = function() {
                                                            var statearr_16146 = state_16113;
                                                            statearr_16146[7] = inst_16057;
                                                            statearr_16146[18] = inst_16083;
                                                            return statearr_16146;
                                                          }();
                                                          var statearr_16147_16186 = state_16113__$1;
                                                          statearr_16147_16186[2] = null;
                                                          statearr_16147_16186[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_16114 === 10) {
                                                            var inst_16072 = state_16113[8];
                                                            var inst_16073 = state_16113[16];
                                                            var inst_16071 = state_16113[2];
                                                            var inst_16072__$1 = cljs.core.nth.call(null, inst_16071, 0, null);
                                                            var inst_16073__$1 = cljs.core.nth.call(null, inst_16071, 1, null);
                                                            var inst_16074 = inst_16072__$1 == null;
                                                            var inst_16075 = cljs.core._EQ_.call(null, inst_16073__$1, change);
                                                            var inst_16076 = inst_16074 || inst_16075;
                                                            var state_16113__$1 = function() {
                                                              var statearr_16148 = state_16113;
                                                              statearr_16148[8] = inst_16072__$1;
                                                              statearr_16148[16] = inst_16073__$1;
                                                              return statearr_16148;
                                                            }();
                                                            if (cljs.core.truth_(inst_16076)) {
                                                              var statearr_16149_16187 = state_16113__$1;
                                                              statearr_16149_16187[1] = 11;
                                                            } else {
                                                              var statearr_16150_16188 = state_16113__$1;
                                                              statearr_16150_16188[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_16114 === 18) {
                                                              var inst_16068 = state_16113[15];
                                                              var inst_16073 = state_16113[16];
                                                              var inst_16067 = state_16113[17];
                                                              var inst_16090 = cljs.core.empty_QMARK_.call(null, inst_16068);
                                                              var inst_16091 = inst_16067.call(null, inst_16073);
                                                              var inst_16092 = cljs.core.not.call(null, inst_16091);
                                                              var inst_16093 = inst_16090 && inst_16092;
                                                              var state_16113__$1 = state_16113;
                                                              var statearr_16151_16189 = state_16113__$1;
                                                              statearr_16151_16189[2] = inst_16093;
                                                              statearr_16151_16189[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_16114 === 8) {
                                                                var inst_16057 = state_16113[7];
                                                                var state_16113__$1 = state_16113;
                                                                var statearr_16152_16190 = state_16113__$1;
                                                                statearr_16152_16190[2] = inst_16057;
                                                                statearr_16152_16190[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto___16160, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__12233__auto__, c__12295__auto___16160, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var cljs$core$async$mix_$_state_machine__12234__auto__ = null;
            var cljs$core$async$mix_$_state_machine__12234__auto____0 = function() {
              var statearr_16156 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_16156[0] = cljs$core$async$mix_$_state_machine__12234__auto__;
              statearr_16156[1] = 1;
              return statearr_16156;
            };
            var cljs$core$async$mix_$_state_machine__12234__auto____1 = function(state_16113) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_16113);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e16157) {
                    if (e16157 instanceof Object) {
                      var ex__12237__auto__ = e16157;
                      var statearr_16158_16191 = state_16113;
                      statearr_16158_16191[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16113);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16157;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16192 = state_16113;
                  state_16113 = G__16192;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$mix_$_state_machine__12234__auto__ = function(state_16113) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mix_$_state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$mix_$_state_machine__12234__auto____1.call(this, state_16113);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mix_$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mix_$_state_machine__12234__auto____0;
            cljs$core$async$mix_$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mix_$_state_machine__12234__auto____1;
            return cljs$core$async$mix_$_state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto___16160, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__12297__auto__ = function() {
        var statearr_16159 = f__12296__auto__.call(null);
        statearr_16159[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___16160;
        return statearr_16159;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto___16160, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function cljs$core$async$admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function cljs$core$async$unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function cljs$core$async$unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function cljs$core$async$toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function cljs$core$async$solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj16194 = {};
  return obj16194;
}();
cljs.core.async.sub_STAR_ = function cljs$core$async$sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__4345__auto__ = p;
    if (and__4345__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4993__auto__ = p == null ? null : p;
    return function() {
      var or__4357__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function cljs$core$async$unsub_STAR_(p, v, ch) {
  if (function() {
    var and__4345__auto__ = p;
    if (and__4345__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4993__auto__ = p == null ? null : p;
    return function() {
      var or__4357__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function cljs$core$async$unsub_all_STAR_() {
  var G__16196 = arguments.length;
  switch(G__16196) {
    case 1:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = function(p) {
  if (function() {
    var and__4345__auto__ = p;
    if (and__4345__auto__) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
  } else {
    var x__4993__auto__ = p == null ? null : p;
    return function() {
      var or__4357__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
        }
      }
    }().call(null, p);
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = function(p, v) {
  if (function() {
    var and__4345__auto__ = p;
    if (and__4345__auto__) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
    } else {
      return and__4345__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
  } else {
    var x__4993__auto__ = p == null ? null : p;
    return function() {
      var or__4357__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4993__auto__)];
      if (or__4357__auto__) {
        return or__4357__auto__;
      } else {
        var or__4357__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
        if (or__4357__auto____$1) {
          return or__4357__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
        }
      }
    }().call(null, p, v);
  }
};
cljs.core.async.unsub_all_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.async.pub = function cljs$core$async$pub() {
  var G__16200 = arguments.length;
  switch(G__16200) {
    case 2:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2 = function(ch, topic_fn) {
  return cljs.core.async.pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3 = function(ch, topic_fn, buf_fn) {
  var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ensure_mult = function(mults) {
    return function(topic) {
      var or__4357__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
      if (cljs.core.truth_(or__4357__auto__)) {
        return or__4357__auto__;
      } else {
        return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__4357__auto__, mults) {
          return function(p1__16198_SHARP_) {
            if (cljs.core.truth_(p1__16198_SHARP_.call(null, topic))) {
              return p1__16198_SHARP_;
            } else {
              return cljs.core.assoc.call(null, p1__16198_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
            }
          };
        }(or__4357__auto__, mults)), topic);
      }
    };
  }(mults);
  var p = function() {
    if (typeof cljs.core.async.t16201 !== "undefined") {
    } else {
      cljs.core.async.t16201 = function(ensure_mult, mults, buf_fn, topic_fn, ch, meta16202) {
        this.ensure_mult = ensure_mult;
        this.mults = mults;
        this.buf_fn = buf_fn;
        this.topic_fn = topic_fn;
        this.ch = ch;
        this.meta16202 = meta16202;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t16201.prototype.cljs$core$async$Pub$ = true;
      cljs.core.async.t16201.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1, close_QMARK_) {
          var self__ = this;
          var p__$1 = this;
          var m = self__.ensure_mult.call(null, topic);
          return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
        };
      }(mults, ensure_mult);
      cljs.core.async.t16201.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1) {
          var self__ = this;
          var p__$1 = this;
          var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
          if (cljs.core.truth_(temp__4126__auto__)) {
            var m = temp__4126__auto__;
            return cljs.core.async.untap.call(null, m, ch__$1);
          } else {
            return null;
          }
        };
      }(mults, ensure_mult);
      cljs.core.async.t16201.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
        };
      }(mults, ensure_mult);
      cljs.core.async.t16201.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
        return function(_, topic) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
        };
      }(mults, ensure_mult);
      cljs.core.async.t16201.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t16201.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(mults, ensure_mult);
      cljs.core.async.t16201.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
        return function(_16203) {
          var self__ = this;
          var _16203__$1 = this;
          return self__.meta16202;
        };
      }(mults, ensure_mult);
      cljs.core.async.t16201.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
        return function(_16203, meta16202__$1) {
          var self__ = this;
          var _16203__$1 = this;
          return new cljs.core.async.t16201(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, meta16202__$1);
        };
      }(mults, ensure_mult);
      cljs.core.async.t16201.cljs$lang$type = true;
      cljs.core.async.t16201.cljs$lang$ctorStr = "cljs.core.async/t16201";
      cljs.core.async.t16201.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
        return function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
          return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async/t16201");
        };
      }(mults, ensure_mult);
      cljs.core.async.__GT_t16201 = function(mults, ensure_mult) {
        return function cljs$core$async$__GT_t16201(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, meta16202) {
          return new cljs.core.async.t16201(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, meta16202);
        };
      }(mults, ensure_mult);
    }
    return new cljs.core.async.t16201(ensure_mult, mults, buf_fn, topic_fn, ch, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__12295__auto___16324 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto___16324, mults, ensure_mult, p) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto___16324, mults, ensure_mult, p) {
          return function(state_16275) {
            var state_val_16276 = state_16275[1];
            if (state_val_16276 === 7) {
              var inst_16271 = state_16275[2];
              var state_16275__$1 = state_16275;
              var statearr_16277_16325 = state_16275__$1;
              statearr_16277_16325[2] = inst_16271;
              statearr_16277_16325[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16276 === 20) {
                var state_16275__$1 = state_16275;
                var statearr_16278_16326 = state_16275__$1;
                statearr_16278_16326[2] = null;
                statearr_16278_16326[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16276 === 1) {
                  var state_16275__$1 = state_16275;
                  var statearr_16279_16327 = state_16275__$1;
                  statearr_16279_16327[2] = null;
                  statearr_16279_16327[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16276 === 24) {
                    var inst_16254 = state_16275[7];
                    var inst_16263 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_16254);
                    var state_16275__$1 = state_16275;
                    var statearr_16280_16328 = state_16275__$1;
                    statearr_16280_16328[2] = inst_16263;
                    statearr_16280_16328[1] = 25;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16276 === 4) {
                      var inst_16206 = state_16275[8];
                      var inst_16206__$1 = state_16275[2];
                      var inst_16207 = inst_16206__$1 == null;
                      var state_16275__$1 = function() {
                        var statearr_16281 = state_16275;
                        statearr_16281[8] = inst_16206__$1;
                        return statearr_16281;
                      }();
                      if (cljs.core.truth_(inst_16207)) {
                        var statearr_16282_16329 = state_16275__$1;
                        statearr_16282_16329[1] = 5;
                      } else {
                        var statearr_16283_16330 = state_16275__$1;
                        statearr_16283_16330[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16276 === 15) {
                        var inst_16248 = state_16275[2];
                        var state_16275__$1 = state_16275;
                        var statearr_16284_16331 = state_16275__$1;
                        statearr_16284_16331[2] = inst_16248;
                        statearr_16284_16331[1] = 12;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16276 === 21) {
                          var inst_16268 = state_16275[2];
                          var state_16275__$1 = function() {
                            var statearr_16285 = state_16275;
                            statearr_16285[9] = inst_16268;
                            return statearr_16285;
                          }();
                          var statearr_16286_16332 = state_16275__$1;
                          statearr_16286_16332[2] = null;
                          statearr_16286_16332[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16276 === 13) {
                            var inst_16230 = state_16275[10];
                            var inst_16232 = cljs.core.chunked_seq_QMARK_.call(null, inst_16230);
                            var state_16275__$1 = state_16275;
                            if (inst_16232) {
                              var statearr_16287_16333 = state_16275__$1;
                              statearr_16287_16333[1] = 16;
                            } else {
                              var statearr_16288_16334 = state_16275__$1;
                              statearr_16288_16334[1] = 17;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16276 === 22) {
                              var inst_16260 = state_16275[2];
                              var state_16275__$1 = state_16275;
                              if (cljs.core.truth_(inst_16260)) {
                                var statearr_16289_16335 = state_16275__$1;
                                statearr_16289_16335[1] = 23;
                              } else {
                                var statearr_16290_16336 = state_16275__$1;
                                statearr_16290_16336[1] = 24;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16276 === 6) {
                                var inst_16254 = state_16275[7];
                                var inst_16206 = state_16275[8];
                                var inst_16256 = state_16275[11];
                                var inst_16254__$1 = topic_fn.call(null, inst_16206);
                                var inst_16255 = cljs.core.deref.call(null, mults);
                                var inst_16256__$1 = cljs.core.get.call(null, inst_16255, inst_16254__$1);
                                var state_16275__$1 = function() {
                                  var statearr_16291 = state_16275;
                                  statearr_16291[7] = inst_16254__$1;
                                  statearr_16291[11] = inst_16256__$1;
                                  return statearr_16291;
                                }();
                                if (cljs.core.truth_(inst_16256__$1)) {
                                  var statearr_16292_16337 = state_16275__$1;
                                  statearr_16292_16337[1] = 19;
                                } else {
                                  var statearr_16293_16338 = state_16275__$1;
                                  statearr_16293_16338[1] = 20;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16276 === 25) {
                                  var inst_16265 = state_16275[2];
                                  var state_16275__$1 = state_16275;
                                  var statearr_16294_16339 = state_16275__$1;
                                  statearr_16294_16339[2] = inst_16265;
                                  statearr_16294_16339[1] = 21;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_16276 === 17) {
                                    var inst_16230 = state_16275[10];
                                    var inst_16239 = cljs.core.first.call(null, inst_16230);
                                    var inst_16240 = cljs.core.async.muxch_STAR_.call(null, inst_16239);
                                    var inst_16241 = cljs.core.async.close_BANG_.call(null, inst_16240);
                                    var inst_16242 = cljs.core.next.call(null, inst_16230);
                                    var inst_16216 = inst_16242;
                                    var inst_16217 = null;
                                    var inst_16218 = 0;
                                    var inst_16219 = 0;
                                    var state_16275__$1 = function() {
                                      var statearr_16295 = state_16275;
                                      statearr_16295[12] = inst_16219;
                                      statearr_16295[13] = inst_16216;
                                      statearr_16295[14] = inst_16217;
                                      statearr_16295[15] = inst_16241;
                                      statearr_16295[16] = inst_16218;
                                      return statearr_16295;
                                    }();
                                    var statearr_16296_16340 = state_16275__$1;
                                    statearr_16296_16340[2] = null;
                                    statearr_16296_16340[1] = 8;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_16276 === 3) {
                                      var inst_16273 = state_16275[2];
                                      var state_16275__$1 = state_16275;
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16275__$1, inst_16273);
                                    } else {
                                      if (state_val_16276 === 12) {
                                        var inst_16250 = state_16275[2];
                                        var state_16275__$1 = state_16275;
                                        var statearr_16297_16341 = state_16275__$1;
                                        statearr_16297_16341[2] = inst_16250;
                                        statearr_16297_16341[1] = 9;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16276 === 2) {
                                          var state_16275__$1 = state_16275;
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16275__$1, 4, ch);
                                        } else {
                                          if (state_val_16276 === 23) {
                                            var state_16275__$1 = state_16275;
                                            var statearr_16298_16342 = state_16275__$1;
                                            statearr_16298_16342[2] = null;
                                            statearr_16298_16342[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_16276 === 19) {
                                              var inst_16206 = state_16275[8];
                                              var inst_16256 = state_16275[11];
                                              var inst_16258 = cljs.core.async.muxch_STAR_.call(null, inst_16256);
                                              var state_16275__$1 = state_16275;
                                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16275__$1, 22, inst_16258, inst_16206);
                                            } else {
                                              if (state_val_16276 === 11) {
                                                var inst_16216 = state_16275[13];
                                                var inst_16230 = state_16275[10];
                                                var inst_16230__$1 = cljs.core.seq.call(null, inst_16216);
                                                var state_16275__$1 = function() {
                                                  var statearr_16299 = state_16275;
                                                  statearr_16299[10] = inst_16230__$1;
                                                  return statearr_16299;
                                                }();
                                                if (inst_16230__$1) {
                                                  var statearr_16300_16343 = state_16275__$1;
                                                  statearr_16300_16343[1] = 13;
                                                } else {
                                                  var statearr_16301_16344 = state_16275__$1;
                                                  statearr_16301_16344[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_16276 === 9) {
                                                  var inst_16252 = state_16275[2];
                                                  var state_16275__$1 = state_16275;
                                                  var statearr_16302_16345 = state_16275__$1;
                                                  statearr_16302_16345[2] = inst_16252;
                                                  statearr_16302_16345[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_16276 === 5) {
                                                    var inst_16213 = cljs.core.deref.call(null, mults);
                                                    var inst_16214 = cljs.core.vals.call(null, inst_16213);
                                                    var inst_16215 = cljs.core.seq.call(null, inst_16214);
                                                    var inst_16216 = inst_16215;
                                                    var inst_16217 = null;
                                                    var inst_16218 = 0;
                                                    var inst_16219 = 0;
                                                    var state_16275__$1 = function() {
                                                      var statearr_16303 = state_16275;
                                                      statearr_16303[12] = inst_16219;
                                                      statearr_16303[13] = inst_16216;
                                                      statearr_16303[14] = inst_16217;
                                                      statearr_16303[16] = inst_16218;
                                                      return statearr_16303;
                                                    }();
                                                    var statearr_16304_16346 = state_16275__$1;
                                                    statearr_16304_16346[2] = null;
                                                    statearr_16304_16346[1] = 8;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_16276 === 14) {
                                                      var state_16275__$1 = state_16275;
                                                      var statearr_16308_16347 = state_16275__$1;
                                                      statearr_16308_16347[2] = null;
                                                      statearr_16308_16347[1] = 15;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_16276 === 16) {
                                                        var inst_16230 = state_16275[10];
                                                        var inst_16234 = cljs.core.chunk_first.call(null, inst_16230);
                                                        var inst_16235 = cljs.core.chunk_rest.call(null, inst_16230);
                                                        var inst_16236 = cljs.core.count.call(null, inst_16234);
                                                        var inst_16216 = inst_16235;
                                                        var inst_16217 = inst_16234;
                                                        var inst_16218 = inst_16236;
                                                        var inst_16219 = 0;
                                                        var state_16275__$1 = function() {
                                                          var statearr_16309 = state_16275;
                                                          statearr_16309[12] = inst_16219;
                                                          statearr_16309[13] = inst_16216;
                                                          statearr_16309[14] = inst_16217;
                                                          statearr_16309[16] = inst_16218;
                                                          return statearr_16309;
                                                        }();
                                                        var statearr_16310_16348 = state_16275__$1;
                                                        statearr_16310_16348[2] = null;
                                                        statearr_16310_16348[1] = 8;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_16276 === 10) {
                                                          var inst_16219 = state_16275[12];
                                                          var inst_16216 = state_16275[13];
                                                          var inst_16217 = state_16275[14];
                                                          var inst_16218 = state_16275[16];
                                                          var inst_16224 = cljs.core._nth.call(null, inst_16217, inst_16219);
                                                          var inst_16225 = cljs.core.async.muxch_STAR_.call(null, inst_16224);
                                                          var inst_16226 = cljs.core.async.close_BANG_.call(null, inst_16225);
                                                          var inst_16227 = inst_16219 + 1;
                                                          var tmp16305 = inst_16216;
                                                          var tmp16306 = inst_16217;
                                                          var tmp16307 = inst_16218;
                                                          var inst_16216__$1 = tmp16305;
                                                          var inst_16217__$1 = tmp16306;
                                                          var inst_16218__$1 = tmp16307;
                                                          var inst_16219__$1 = inst_16227;
                                                          var state_16275__$1 = function() {
                                                            var statearr_16311 = state_16275;
                                                            statearr_16311[12] = inst_16219__$1;
                                                            statearr_16311[13] = inst_16216__$1;
                                                            statearr_16311[14] = inst_16217__$1;
                                                            statearr_16311[16] = inst_16218__$1;
                                                            statearr_16311[17] = inst_16226;
                                                            return statearr_16311;
                                                          }();
                                                          var statearr_16312_16349 = state_16275__$1;
                                                          statearr_16312_16349[2] = null;
                                                          statearr_16312_16349[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_16276 === 18) {
                                                            var inst_16245 = state_16275[2];
                                                            var state_16275__$1 = state_16275;
                                                            var statearr_16313_16350 = state_16275__$1;
                                                            statearr_16313_16350[2] = inst_16245;
                                                            statearr_16313_16350[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_16276 === 8) {
                                                              var inst_16219 = state_16275[12];
                                                              var inst_16218 = state_16275[16];
                                                              var inst_16221 = inst_16219 < inst_16218;
                                                              var inst_16222 = inst_16221;
                                                              var state_16275__$1 = state_16275;
                                                              if (cljs.core.truth_(inst_16222)) {
                                                                var statearr_16314_16351 = state_16275__$1;
                                                                statearr_16314_16351[1] = 10;
                                                              } else {
                                                                var statearr_16315_16352 = state_16275__$1;
                                                                statearr_16315_16352[1] = 11;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto___16324, mults, ensure_mult, p);
        return function(switch__12233__auto__, c__12295__auto___16324, mults, ensure_mult, p) {
          return function() {
            var cljs$core$async$state_machine__12234__auto__ = null;
            var cljs$core$async$state_machine__12234__auto____0 = function() {
              var statearr_16319 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_16319[0] = cljs$core$async$state_machine__12234__auto__;
              statearr_16319[1] = 1;
              return statearr_16319;
            };
            var cljs$core$async$state_machine__12234__auto____1 = function(state_16275) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_16275);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e16320) {
                    if (e16320 instanceof Object) {
                      var ex__12237__auto__ = e16320;
                      var statearr_16321_16353 = state_16275;
                      statearr_16321_16353[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16275);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16320;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16354 = state_16275;
                  state_16275 = G__16354;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__12234__auto__ = function(state_16275) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__12234__auto____1.call(this, state_16275);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__12234__auto____0;
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__12234__auto____1;
            return cljs$core$async$state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto___16324, mults, ensure_mult, p);
      }();
      var state__12297__auto__ = function() {
        var statearr_16322 = f__12296__auto__.call(null);
        statearr_16322[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___16324;
        return statearr_16322;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto___16324, mults, ensure_mult, p));
  return p;
};
cljs.core.async.pub.cljs$lang$maxFixedArity = 3;
cljs.core.async.sub = function cljs$core$async$sub() {
  var G__16356 = arguments.length;
  switch(G__16356) {
    case 3:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3 = function(p, topic, ch) {
  return cljs.core.async.sub.call(null, p, topic, ch, true);
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4 = function(p, topic, ch, close_QMARK_) {
  return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
};
cljs.core.async.sub.cljs$lang$maxFixedArity = 4;
cljs.core.async.unsub = function cljs$core$async$unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function cljs$core$async$unsub_all() {
  var G__16359 = arguments.length;
  switch(G__16359) {
    case 1:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return cljs.core.async.unsub_all_STAR_.call(null, p);
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2 = function(p, topic) {
  return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
};
cljs.core.async.unsub_all.cljs$lang$maxFixedArity = 2;
cljs.core.async.map = function cljs$core$async$map() {
  var G__16362 = arguments.length;
  switch(G__16362) {
    case 2:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$2 = function(f, chs) {
  return cljs.core.async.map.call(null, f, chs, null);
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$3 = function(f, chs, buf_or_n) {
  var chs__$1 = cljs.core.vec.call(null, chs);
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var cnt = cljs.core.count.call(null, chs__$1);
  var rets = cljs.core.object_array.call(null, cnt);
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
    return function(i) {
      return function(chs__$1, out, cnt, rets, dchan, dctr) {
        return function(ret) {
          rets[i] = ret;
          if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
            return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
          } else {
            return null;
          }
        };
      }(chs__$1, out, cnt, rets, dchan, dctr);
    };
  }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
  var c__12295__auto___16432 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto___16432, chs__$1, out, cnt, rets, dchan, dctr, done) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto___16432, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function(state_16401) {
            var state_val_16402 = state_16401[1];
            if (state_val_16402 === 7) {
              var state_16401__$1 = state_16401;
              var statearr_16403_16433 = state_16401__$1;
              statearr_16403_16433[2] = null;
              statearr_16403_16433[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16402 === 1) {
                var state_16401__$1 = state_16401;
                var statearr_16404_16434 = state_16401__$1;
                statearr_16404_16434[2] = null;
                statearr_16404_16434[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16402 === 4) {
                  var inst_16365 = state_16401[7];
                  var inst_16367 = inst_16365 < cnt;
                  var state_16401__$1 = state_16401;
                  if (cljs.core.truth_(inst_16367)) {
                    var statearr_16405_16435 = state_16401__$1;
                    statearr_16405_16435[1] = 6;
                  } else {
                    var statearr_16406_16436 = state_16401__$1;
                    statearr_16406_16436[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16402 === 15) {
                    var inst_16397 = state_16401[2];
                    var state_16401__$1 = state_16401;
                    var statearr_16407_16437 = state_16401__$1;
                    statearr_16407_16437[2] = inst_16397;
                    statearr_16407_16437[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16402 === 13) {
                      var inst_16390 = cljs.core.async.close_BANG_.call(null, out);
                      var state_16401__$1 = state_16401;
                      var statearr_16408_16438 = state_16401__$1;
                      statearr_16408_16438[2] = inst_16390;
                      statearr_16408_16438[1] = 15;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16402 === 6) {
                        var state_16401__$1 = state_16401;
                        var statearr_16409_16439 = state_16401__$1;
                        statearr_16409_16439[2] = null;
                        statearr_16409_16439[1] = 11;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16402 === 3) {
                          var inst_16399 = state_16401[2];
                          var state_16401__$1 = state_16401;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16401__$1, inst_16399);
                        } else {
                          if (state_val_16402 === 12) {
                            var inst_16387 = state_16401[8];
                            var inst_16387__$1 = state_16401[2];
                            var inst_16388 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_16387__$1);
                            var state_16401__$1 = function() {
                              var statearr_16410 = state_16401;
                              statearr_16410[8] = inst_16387__$1;
                              return statearr_16410;
                            }();
                            if (cljs.core.truth_(inst_16388)) {
                              var statearr_16411_16440 = state_16401__$1;
                              statearr_16411_16440[1] = 13;
                            } else {
                              var statearr_16412_16441 = state_16401__$1;
                              statearr_16412_16441[1] = 14;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16402 === 2) {
                              var inst_16364 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                              var inst_16365 = 0;
                              var state_16401__$1 = function() {
                                var statearr_16413 = state_16401;
                                statearr_16413[9] = inst_16364;
                                statearr_16413[7] = inst_16365;
                                return statearr_16413;
                              }();
                              var statearr_16414_16442 = state_16401__$1;
                              statearr_16414_16442[2] = null;
                              statearr_16414_16442[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16402 === 11) {
                                var inst_16365 = state_16401[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_16401, 10, Object, null, 9);
                                var inst_16374 = chs__$1.call(null, inst_16365);
                                var inst_16375 = done.call(null, inst_16365);
                                var inst_16376 = cljs.core.async.take_BANG_.call(null, inst_16374, inst_16375);
                                var state_16401__$1 = state_16401;
                                var statearr_16415_16443 = state_16401__$1;
                                statearr_16415_16443[2] = inst_16376;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16401__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16402 === 9) {
                                  var inst_16365 = state_16401[7];
                                  var inst_16378 = state_16401[2];
                                  var inst_16379 = inst_16365 + 1;
                                  var inst_16365__$1 = inst_16379;
                                  var state_16401__$1 = function() {
                                    var statearr_16416 = state_16401;
                                    statearr_16416[10] = inst_16378;
                                    statearr_16416[7] = inst_16365__$1;
                                    return statearr_16416;
                                  }();
                                  var statearr_16417_16444 = state_16401__$1;
                                  statearr_16417_16444[2] = null;
                                  statearr_16417_16444[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_16402 === 5) {
                                    var inst_16385 = state_16401[2];
                                    var state_16401__$1 = function() {
                                      var statearr_16418 = state_16401;
                                      statearr_16418[11] = inst_16385;
                                      return statearr_16418;
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16401__$1, 12, dchan);
                                  } else {
                                    if (state_val_16402 === 14) {
                                      var inst_16387 = state_16401[8];
                                      var inst_16392 = cljs.core.apply.call(null, f, inst_16387);
                                      var state_16401__$1 = state_16401;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16401__$1, 16, out, inst_16392);
                                    } else {
                                      if (state_val_16402 === 16) {
                                        var inst_16394 = state_16401[2];
                                        var state_16401__$1 = function() {
                                          var statearr_16419 = state_16401;
                                          statearr_16419[12] = inst_16394;
                                          return statearr_16419;
                                        }();
                                        var statearr_16420_16445 = state_16401__$1;
                                        statearr_16420_16445[2] = null;
                                        statearr_16420_16445[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16402 === 10) {
                                          var inst_16369 = state_16401[2];
                                          var inst_16370 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var state_16401__$1 = function() {
                                            var statearr_16421 = state_16401;
                                            statearr_16421[13] = inst_16369;
                                            return statearr_16421;
                                          }();
                                          var statearr_16422_16446 = state_16401__$1;
                                          statearr_16422_16446[2] = inst_16370;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16401__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_16402 === 8) {
                                            var inst_16383 = state_16401[2];
                                            var state_16401__$1 = state_16401;
                                            var statearr_16423_16447 = state_16401__$1;
                                            statearr_16423_16447[2] = inst_16383;
                                            statearr_16423_16447[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto___16432, chs__$1, out, cnt, rets, dchan, dctr, done);
        return function(switch__12233__auto__, c__12295__auto___16432, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function() {
            var cljs$core$async$state_machine__12234__auto__ = null;
            var cljs$core$async$state_machine__12234__auto____0 = function() {
              var statearr_16427 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_16427[0] = cljs$core$async$state_machine__12234__auto__;
              statearr_16427[1] = 1;
              return statearr_16427;
            };
            var cljs$core$async$state_machine__12234__auto____1 = function(state_16401) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_16401);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e16428) {
                    if (e16428 instanceof Object) {
                      var ex__12237__auto__ = e16428;
                      var statearr_16429_16448 = state_16401;
                      statearr_16429_16448[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16401);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16428;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16449 = state_16401;
                  state_16401 = G__16449;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__12234__auto__ = function(state_16401) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__12234__auto____1.call(this, state_16401);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__12234__auto____0;
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__12234__auto____1;
            return cljs$core$async$state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto___16432, chs__$1, out, cnt, rets, dchan, dctr, done);
      }();
      var state__12297__auto__ = function() {
        var statearr_16430 = f__12296__auto__.call(null);
        statearr_16430[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___16432;
        return statearr_16430;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto___16432, chs__$1, out, cnt, rets, dchan, dctr, done));
  return out;
};
cljs.core.async.map.cljs$lang$maxFixedArity = 3;
cljs.core.async.merge = function cljs$core$async$merge() {
  var G__16452 = arguments.length;
  switch(G__16452) {
    case 1:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1 = function(chs) {
  return cljs.core.async.merge.call(null, chs, null);
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2 = function(chs, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__12295__auto___16507 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto___16507, out) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto___16507, out) {
          return function(state_16482) {
            var state_val_16483 = state_16482[1];
            if (state_val_16483 === 7) {
              var inst_16462 = state_16482[7];
              var inst_16461 = state_16482[8];
              var inst_16461__$1 = state_16482[2];
              var inst_16462__$1 = cljs.core.nth.call(null, inst_16461__$1, 0, null);
              var inst_16463 = cljs.core.nth.call(null, inst_16461__$1, 1, null);
              var inst_16464 = inst_16462__$1 == null;
              var state_16482__$1 = function() {
                var statearr_16484 = state_16482;
                statearr_16484[7] = inst_16462__$1;
                statearr_16484[8] = inst_16461__$1;
                statearr_16484[9] = inst_16463;
                return statearr_16484;
              }();
              if (cljs.core.truth_(inst_16464)) {
                var statearr_16485_16508 = state_16482__$1;
                statearr_16485_16508[1] = 8;
              } else {
                var statearr_16486_16509 = state_16482__$1;
                statearr_16486_16509[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16483 === 1) {
                var inst_16453 = cljs.core.vec.call(null, chs);
                var inst_16454 = inst_16453;
                var state_16482__$1 = function() {
                  var statearr_16487 = state_16482;
                  statearr_16487[10] = inst_16454;
                  return statearr_16487;
                }();
                var statearr_16488_16510 = state_16482__$1;
                statearr_16488_16510[2] = null;
                statearr_16488_16510[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16483 === 4) {
                  var inst_16454 = state_16482[10];
                  var state_16482__$1 = state_16482;
                  return cljs.core.async.ioc_alts_BANG_.call(null, state_16482__$1, 7, inst_16454);
                } else {
                  if (state_val_16483 === 6) {
                    var inst_16478 = state_16482[2];
                    var state_16482__$1 = state_16482;
                    var statearr_16489_16511 = state_16482__$1;
                    statearr_16489_16511[2] = inst_16478;
                    statearr_16489_16511[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16483 === 3) {
                      var inst_16480 = state_16482[2];
                      var state_16482__$1 = state_16482;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16482__$1, inst_16480);
                    } else {
                      if (state_val_16483 === 2) {
                        var inst_16454 = state_16482[10];
                        var inst_16456 = cljs.core.count.call(null, inst_16454);
                        var inst_16457 = inst_16456 > 0;
                        var state_16482__$1 = state_16482;
                        if (cljs.core.truth_(inst_16457)) {
                          var statearr_16491_16512 = state_16482__$1;
                          statearr_16491_16512[1] = 4;
                        } else {
                          var statearr_16492_16513 = state_16482__$1;
                          statearr_16492_16513[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16483 === 11) {
                          var inst_16454 = state_16482[10];
                          var inst_16471 = state_16482[2];
                          var tmp16490 = inst_16454;
                          var inst_16454__$1 = tmp16490;
                          var state_16482__$1 = function() {
                            var statearr_16493 = state_16482;
                            statearr_16493[11] = inst_16471;
                            statearr_16493[10] = inst_16454__$1;
                            return statearr_16493;
                          }();
                          var statearr_16494_16514 = state_16482__$1;
                          statearr_16494_16514[2] = null;
                          statearr_16494_16514[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16483 === 9) {
                            var inst_16462 = state_16482[7];
                            var state_16482__$1 = state_16482;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16482__$1, 11, out, inst_16462);
                          } else {
                            if (state_val_16483 === 5) {
                              var inst_16476 = cljs.core.async.close_BANG_.call(null, out);
                              var state_16482__$1 = state_16482;
                              var statearr_16495_16515 = state_16482__$1;
                              statearr_16495_16515[2] = inst_16476;
                              statearr_16495_16515[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16483 === 10) {
                                var inst_16474 = state_16482[2];
                                var state_16482__$1 = state_16482;
                                var statearr_16496_16516 = state_16482__$1;
                                statearr_16496_16516[2] = inst_16474;
                                statearr_16496_16516[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16483 === 8) {
                                  var inst_16462 = state_16482[7];
                                  var inst_16461 = state_16482[8];
                                  var inst_16463 = state_16482[9];
                                  var inst_16454 = state_16482[10];
                                  var inst_16466 = function() {
                                    var c = inst_16463;
                                    var v = inst_16462;
                                    var vec__16459 = inst_16461;
                                    var cs = inst_16454;
                                    return function(c, v, vec__16459, cs, inst_16462, inst_16461, inst_16463, inst_16454, state_val_16483, c__12295__auto___16507, out) {
                                      return function(p1__16450_SHARP_) {
                                        return cljs.core.not_EQ_.call(null, c, p1__16450_SHARP_);
                                      };
                                    }(c, v, vec__16459, cs, inst_16462, inst_16461, inst_16463, inst_16454, state_val_16483, c__12295__auto___16507, out);
                                  }();
                                  var inst_16467 = cljs.core.filterv.call(null, inst_16466, inst_16454);
                                  var inst_16454__$1 = inst_16467;
                                  var state_16482__$1 = function() {
                                    var statearr_16497 = state_16482;
                                    statearr_16497[10] = inst_16454__$1;
                                    return statearr_16497;
                                  }();
                                  var statearr_16498_16517 = state_16482__$1;
                                  statearr_16498_16517[2] = null;
                                  statearr_16498_16517[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto___16507, out);
        return function(switch__12233__auto__, c__12295__auto___16507, out) {
          return function() {
            var cljs$core$async$state_machine__12234__auto__ = null;
            var cljs$core$async$state_machine__12234__auto____0 = function() {
              var statearr_16502 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_16502[0] = cljs$core$async$state_machine__12234__auto__;
              statearr_16502[1] = 1;
              return statearr_16502;
            };
            var cljs$core$async$state_machine__12234__auto____1 = function(state_16482) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_16482);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e16503) {
                    if (e16503 instanceof Object) {
                      var ex__12237__auto__ = e16503;
                      var statearr_16504_16518 = state_16482;
                      statearr_16504_16518[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16482);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16503;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16519 = state_16482;
                  state_16482 = G__16519;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__12234__auto__ = function(state_16482) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__12234__auto____1.call(this, state_16482);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__12234__auto____0;
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__12234__auto____1;
            return cljs$core$async$state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto___16507, out);
      }();
      var state__12297__auto__ = function() {
        var statearr_16505 = f__12296__auto__.call(null);
        statearr_16505[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___16507;
        return statearr_16505;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto___16507, out));
  return out;
};
cljs.core.async.merge.cljs$lang$maxFixedArity = 2;
cljs.core.async.into = function cljs$core$async$into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function cljs$core$async$take() {
  var G__16521 = arguments.length;
  switch(G__16521) {
    case 2:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.take.call(null, n, ch, null);
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__12295__auto___16569 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto___16569, out) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto___16569, out) {
          return function(state_16545) {
            var state_val_16546 = state_16545[1];
            if (state_val_16546 === 7) {
              var inst_16527 = state_16545[7];
              var inst_16527__$1 = state_16545[2];
              var inst_16528 = inst_16527__$1 == null;
              var inst_16529 = cljs.core.not.call(null, inst_16528);
              var state_16545__$1 = function() {
                var statearr_16547 = state_16545;
                statearr_16547[7] = inst_16527__$1;
                return statearr_16547;
              }();
              if (inst_16529) {
                var statearr_16548_16570 = state_16545__$1;
                statearr_16548_16570[1] = 8;
              } else {
                var statearr_16549_16571 = state_16545__$1;
                statearr_16549_16571[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16546 === 1) {
                var inst_16522 = 0;
                var state_16545__$1 = function() {
                  var statearr_16550 = state_16545;
                  statearr_16550[8] = inst_16522;
                  return statearr_16550;
                }();
                var statearr_16551_16572 = state_16545__$1;
                statearr_16551_16572[2] = null;
                statearr_16551_16572[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16546 === 4) {
                  var state_16545__$1 = state_16545;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16545__$1, 7, ch);
                } else {
                  if (state_val_16546 === 6) {
                    var inst_16540 = state_16545[2];
                    var state_16545__$1 = state_16545;
                    var statearr_16552_16573 = state_16545__$1;
                    statearr_16552_16573[2] = inst_16540;
                    statearr_16552_16573[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16546 === 3) {
                      var inst_16542 = state_16545[2];
                      var inst_16543 = cljs.core.async.close_BANG_.call(null, out);
                      var state_16545__$1 = function() {
                        var statearr_16553 = state_16545;
                        statearr_16553[9] = inst_16542;
                        return statearr_16553;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16545__$1, inst_16543);
                    } else {
                      if (state_val_16546 === 2) {
                        var inst_16522 = state_16545[8];
                        var inst_16524 = inst_16522 < n;
                        var state_16545__$1 = state_16545;
                        if (cljs.core.truth_(inst_16524)) {
                          var statearr_16554_16574 = state_16545__$1;
                          statearr_16554_16574[1] = 4;
                        } else {
                          var statearr_16555_16575 = state_16545__$1;
                          statearr_16555_16575[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16546 === 11) {
                          var inst_16522 = state_16545[8];
                          var inst_16532 = state_16545[2];
                          var inst_16533 = inst_16522 + 1;
                          var inst_16522__$1 = inst_16533;
                          var state_16545__$1 = function() {
                            var statearr_16556 = state_16545;
                            statearr_16556[10] = inst_16532;
                            statearr_16556[8] = inst_16522__$1;
                            return statearr_16556;
                          }();
                          var statearr_16557_16576 = state_16545__$1;
                          statearr_16557_16576[2] = null;
                          statearr_16557_16576[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16546 === 9) {
                            var state_16545__$1 = state_16545;
                            var statearr_16558_16577 = state_16545__$1;
                            statearr_16558_16577[2] = null;
                            statearr_16558_16577[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16546 === 5) {
                              var state_16545__$1 = state_16545;
                              var statearr_16559_16578 = state_16545__$1;
                              statearr_16559_16578[2] = null;
                              statearr_16559_16578[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16546 === 10) {
                                var inst_16537 = state_16545[2];
                                var state_16545__$1 = state_16545;
                                var statearr_16560_16579 = state_16545__$1;
                                statearr_16560_16579[2] = inst_16537;
                                statearr_16560_16579[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16546 === 8) {
                                  var inst_16527 = state_16545[7];
                                  var state_16545__$1 = state_16545;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16545__$1, 11, out, inst_16527);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto___16569, out);
        return function(switch__12233__auto__, c__12295__auto___16569, out) {
          return function() {
            var cljs$core$async$state_machine__12234__auto__ = null;
            var cljs$core$async$state_machine__12234__auto____0 = function() {
              var statearr_16564 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_16564[0] = cljs$core$async$state_machine__12234__auto__;
              statearr_16564[1] = 1;
              return statearr_16564;
            };
            var cljs$core$async$state_machine__12234__auto____1 = function(state_16545) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_16545);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e16565) {
                    if (e16565 instanceof Object) {
                      var ex__12237__auto__ = e16565;
                      var statearr_16566_16580 = state_16545;
                      statearr_16566_16580[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16545);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16565;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16581 = state_16545;
                  state_16545 = G__16581;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__12234__auto__ = function(state_16545) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__12234__auto____1.call(this, state_16545);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__12234__auto____0;
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__12234__auto____1;
            return cljs$core$async$state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto___16569, out);
      }();
      var state__12297__auto__ = function() {
        var statearr_16567 = f__12296__auto__.call(null);
        statearr_16567[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___16569;
        return statearr_16567;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto___16569, out));
  return out;
};
cljs.core.async.take.cljs$lang$maxFixedArity = 3;
cljs.core.async.map_LT_ = function cljs$core$async$map_LT_(f, ch) {
  if (typeof cljs.core.async.t16589 !== "undefined") {
  } else {
    cljs.core.async.t16589 = function(ch, f, map_LT_, meta16590) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta16590 = meta16590;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t16589.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t16589.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t16589.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t16589.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t16592 !== "undefined") {
        } else {
          cljs.core.async.t16592 = function(fn1, _, meta16590, map_LT_, f, ch, meta16593) {
            this.fn1 = fn1;
            this._ = _;
            this.meta16590 = meta16590;
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta16593 = meta16593;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t16592.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t16592.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t16592.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__16582_SHARP_) {
                  return f1.call(null, p1__16582_SHARP_ == null ? null : self__.f.call(null, p1__16582_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t16592.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_16594) {
              var self__ = this;
              var _16594__$1 = this;
              return self__.meta16593;
            };
          }(___$1);
          cljs.core.async.t16592.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_16594, meta16593__$1) {
              var self__ = this;
              var _16594__$1 = this;
              return new cljs.core.async.t16592(self__.fn1, self__._, self__.meta16590, self__.map_LT_, self__.f, self__.ch, meta16593__$1);
            };
          }(___$1);
          cljs.core.async.t16592.cljs$lang$type = true;
          cljs.core.async.t16592.cljs$lang$ctorStr = "cljs.core.async/t16592";
          cljs.core.async.t16592.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
              return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async/t16592");
            };
          }(___$1);
          cljs.core.async.__GT_t16592 = function(___$1) {
            return function cljs$core$async$map_LT__$___GT_t16592(fn1__$1, ___$2, meta16590__$1, map_LT___$1, f__$1, ch__$1, meta16593) {
              return new cljs.core.async.t16592(fn1__$1, ___$2, meta16590__$1, map_LT___$1, f__$1, ch__$1, meta16593);
            };
          }(___$1);
        }
        return new cljs.core.async.t16592(fn1, ___$1, self__.meta16590, self__.map_LT_, self__.f, self__.ch, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__4345__auto__ = ret;
        if (cljs.core.truth_(and__4345__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__4345__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t16589.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t16589.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t16589.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t16589.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16591) {
      var self__ = this;
      var _16591__$1 = this;
      return self__.meta16590;
    };
    cljs.core.async.t16589.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16591, meta16590__$1) {
      var self__ = this;
      var _16591__$1 = this;
      return new cljs.core.async.t16589(self__.ch, self__.f, self__.map_LT_, meta16590__$1);
    };
    cljs.core.async.t16589.cljs$lang$type = true;
    cljs.core.async.t16589.cljs$lang$ctorStr = "cljs.core.async/t16589";
    cljs.core.async.t16589.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
      return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async/t16589");
    };
    cljs.core.async.__GT_t16589 = function cljs$core$async$map_LT__$___GT_t16589(ch__$1, f__$1, map_LT___$1, meta16590) {
      return new cljs.core.async.t16589(ch__$1, f__$1, map_LT___$1, meta16590);
    };
  }
  return new cljs.core.async.t16589(ch, f, cljs$core$async$map_LT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function cljs$core$async$map_GT_(f, ch) {
  if (typeof cljs.core.async.t16598 !== "undefined") {
  } else {
    cljs.core.async.t16598 = function(ch, f, map_GT_, meta16599) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta16599 = meta16599;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t16598.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t16598.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t16598.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t16598.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t16598.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t16598.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t16598.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16600) {
      var self__ = this;
      var _16600__$1 = this;
      return self__.meta16599;
    };
    cljs.core.async.t16598.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16600, meta16599__$1) {
      var self__ = this;
      var _16600__$1 = this;
      return new cljs.core.async.t16598(self__.ch, self__.f, self__.map_GT_, meta16599__$1);
    };
    cljs.core.async.t16598.cljs$lang$type = true;
    cljs.core.async.t16598.cljs$lang$ctorStr = "cljs.core.async/t16598";
    cljs.core.async.t16598.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
      return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async/t16598");
    };
    cljs.core.async.__GT_t16598 = function cljs$core$async$map_GT__$___GT_t16598(ch__$1, f__$1, map_GT___$1, meta16599) {
      return new cljs.core.async.t16598(ch__$1, f__$1, map_GT___$1, meta16599);
    };
  }
  return new cljs.core.async.t16598(ch, f, cljs$core$async$map_GT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function cljs$core$async$filter_GT_(p, ch) {
  if (typeof cljs.core.async.t16604 !== "undefined") {
  } else {
    cljs.core.async.t16604 = function(ch, p, filter_GT_, meta16605) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta16605 = meta16605;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t16604.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t16604.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t16604.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t16604.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t16604.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t16604.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t16604.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t16604.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16606) {
      var self__ = this;
      var _16606__$1 = this;
      return self__.meta16605;
    };
    cljs.core.async.t16604.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16606, meta16605__$1) {
      var self__ = this;
      var _16606__$1 = this;
      return new cljs.core.async.t16604(self__.ch, self__.p, self__.filter_GT_, meta16605__$1);
    };
    cljs.core.async.t16604.cljs$lang$type = true;
    cljs.core.async.t16604.cljs$lang$ctorStr = "cljs.core.async/t16604";
    cljs.core.async.t16604.cljs$lang$ctorPrWriter = function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
      return cljs.core._write.call(null, writer__4937__auto__, "cljs.core.async/t16604");
    };
    cljs.core.async.__GT_t16604 = function cljs$core$async$filter_GT__$___GT_t16604(ch__$1, p__$1, filter_GT___$1, meta16605) {
      return new cljs.core.async.t16604(ch__$1, p__$1, filter_GT___$1, meta16605);
    };
  }
  return new cljs.core.async.t16604(ch, p, cljs$core$async$filter_GT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function cljs$core$async$remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function cljs$core$async$filter_LT_() {
  var G__16608 = arguments.length;
  switch(G__16608) {
    case 2:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.filter_LT_.call(null, p, ch, null);
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__12295__auto___16651 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto___16651, out) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto___16651, out) {
          return function(state_16629) {
            var state_val_16630 = state_16629[1];
            if (state_val_16630 === 7) {
              var inst_16625 = state_16629[2];
              var state_16629__$1 = state_16629;
              var statearr_16631_16652 = state_16629__$1;
              statearr_16631_16652[2] = inst_16625;
              statearr_16631_16652[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16630 === 1) {
                var state_16629__$1 = state_16629;
                var statearr_16632_16653 = state_16629__$1;
                statearr_16632_16653[2] = null;
                statearr_16632_16653[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16630 === 4) {
                  var inst_16611 = state_16629[7];
                  var inst_16611__$1 = state_16629[2];
                  var inst_16612 = inst_16611__$1 == null;
                  var state_16629__$1 = function() {
                    var statearr_16633 = state_16629;
                    statearr_16633[7] = inst_16611__$1;
                    return statearr_16633;
                  }();
                  if (cljs.core.truth_(inst_16612)) {
                    var statearr_16634_16654 = state_16629__$1;
                    statearr_16634_16654[1] = 5;
                  } else {
                    var statearr_16635_16655 = state_16629__$1;
                    statearr_16635_16655[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16630 === 6) {
                    var inst_16611 = state_16629[7];
                    var inst_16616 = p.call(null, inst_16611);
                    var state_16629__$1 = state_16629;
                    if (cljs.core.truth_(inst_16616)) {
                      var statearr_16636_16656 = state_16629__$1;
                      statearr_16636_16656[1] = 8;
                    } else {
                      var statearr_16637_16657 = state_16629__$1;
                      statearr_16637_16657[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16630 === 3) {
                      var inst_16627 = state_16629[2];
                      var state_16629__$1 = state_16629;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16629__$1, inst_16627);
                    } else {
                      if (state_val_16630 === 2) {
                        var state_16629__$1 = state_16629;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16629__$1, 4, ch);
                      } else {
                        if (state_val_16630 === 11) {
                          var inst_16619 = state_16629[2];
                          var state_16629__$1 = state_16629;
                          var statearr_16638_16658 = state_16629__$1;
                          statearr_16638_16658[2] = inst_16619;
                          statearr_16638_16658[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16630 === 9) {
                            var state_16629__$1 = state_16629;
                            var statearr_16639_16659 = state_16629__$1;
                            statearr_16639_16659[2] = null;
                            statearr_16639_16659[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16630 === 5) {
                              var inst_16614 = cljs.core.async.close_BANG_.call(null, out);
                              var state_16629__$1 = state_16629;
                              var statearr_16640_16660 = state_16629__$1;
                              statearr_16640_16660[2] = inst_16614;
                              statearr_16640_16660[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16630 === 10) {
                                var inst_16622 = state_16629[2];
                                var state_16629__$1 = function() {
                                  var statearr_16641 = state_16629;
                                  statearr_16641[8] = inst_16622;
                                  return statearr_16641;
                                }();
                                var statearr_16642_16661 = state_16629__$1;
                                statearr_16642_16661[2] = null;
                                statearr_16642_16661[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16630 === 8) {
                                  var inst_16611 = state_16629[7];
                                  var state_16629__$1 = state_16629;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16629__$1, 11, out, inst_16611);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto___16651, out);
        return function(switch__12233__auto__, c__12295__auto___16651, out) {
          return function() {
            var cljs$core$async$state_machine__12234__auto__ = null;
            var cljs$core$async$state_machine__12234__auto____0 = function() {
              var statearr_16646 = [null, null, null, null, null, null, null, null, null];
              statearr_16646[0] = cljs$core$async$state_machine__12234__auto__;
              statearr_16646[1] = 1;
              return statearr_16646;
            };
            var cljs$core$async$state_machine__12234__auto____1 = function(state_16629) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_16629);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e16647) {
                    if (e16647 instanceof Object) {
                      var ex__12237__auto__ = e16647;
                      var statearr_16648_16662 = state_16629;
                      statearr_16648_16662[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16629);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16647;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16663 = state_16629;
                  state_16629 = G__16663;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__12234__auto__ = function(state_16629) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__12234__auto____1.call(this, state_16629);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__12234__auto____0;
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__12234__auto____1;
            return cljs$core$async$state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto___16651, out);
      }();
      var state__12297__auto__ = function() {
        var statearr_16649 = f__12296__auto__.call(null);
        statearr_16649[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___16651;
        return statearr_16649;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto___16651, out));
  return out;
};
cljs.core.async.filter_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.remove_LT_ = function cljs$core$async$remove_LT_() {
  var G__16665 = arguments.length;
  switch(G__16665) {
    case 2:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.remove_LT_.call(null, p, ch, null);
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
};
cljs.core.async.remove_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_STAR_ = function cljs$core$async$mapcat_STAR_(f, in$, out) {
  var c__12295__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto__) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto__) {
          return function(state_16832) {
            var state_val_16833 = state_16832[1];
            if (state_val_16833 === 7) {
              var inst_16828 = state_16832[2];
              var state_16832__$1 = state_16832;
              var statearr_16834_16875 = state_16832__$1;
              statearr_16834_16875[2] = inst_16828;
              statearr_16834_16875[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16833 === 20) {
                var inst_16798 = state_16832[7];
                var inst_16809 = state_16832[2];
                var inst_16810 = cljs.core.next.call(null, inst_16798);
                var inst_16784 = inst_16810;
                var inst_16785 = null;
                var inst_16786 = 0;
                var inst_16787 = 0;
                var state_16832__$1 = function() {
                  var statearr_16835 = state_16832;
                  statearr_16835[8] = inst_16809;
                  statearr_16835[9] = inst_16787;
                  statearr_16835[10] = inst_16786;
                  statearr_16835[11] = inst_16785;
                  statearr_16835[12] = inst_16784;
                  return statearr_16835;
                }();
                var statearr_16836_16876 = state_16832__$1;
                statearr_16836_16876[2] = null;
                statearr_16836_16876[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16833 === 1) {
                  var state_16832__$1 = state_16832;
                  var statearr_16837_16877 = state_16832__$1;
                  statearr_16837_16877[2] = null;
                  statearr_16837_16877[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16833 === 4) {
                    var inst_16773 = state_16832[13];
                    var inst_16773__$1 = state_16832[2];
                    var inst_16774 = inst_16773__$1 == null;
                    var state_16832__$1 = function() {
                      var statearr_16838 = state_16832;
                      statearr_16838[13] = inst_16773__$1;
                      return statearr_16838;
                    }();
                    if (cljs.core.truth_(inst_16774)) {
                      var statearr_16839_16878 = state_16832__$1;
                      statearr_16839_16878[1] = 5;
                    } else {
                      var statearr_16840_16879 = state_16832__$1;
                      statearr_16840_16879[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16833 === 15) {
                      var state_16832__$1 = state_16832;
                      var statearr_16844_16880 = state_16832__$1;
                      statearr_16844_16880[2] = null;
                      statearr_16844_16880[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16833 === 21) {
                        var state_16832__$1 = state_16832;
                        var statearr_16845_16881 = state_16832__$1;
                        statearr_16845_16881[2] = null;
                        statearr_16845_16881[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16833 === 13) {
                          var inst_16787 = state_16832[9];
                          var inst_16786 = state_16832[10];
                          var inst_16785 = state_16832[11];
                          var inst_16784 = state_16832[12];
                          var inst_16794 = state_16832[2];
                          var inst_16795 = inst_16787 + 1;
                          var tmp16841 = inst_16786;
                          var tmp16842 = inst_16785;
                          var tmp16843 = inst_16784;
                          var inst_16784__$1 = tmp16843;
                          var inst_16785__$1 = tmp16842;
                          var inst_16786__$1 = tmp16841;
                          var inst_16787__$1 = inst_16795;
                          var state_16832__$1 = function() {
                            var statearr_16846 = state_16832;
                            statearr_16846[14] = inst_16794;
                            statearr_16846[9] = inst_16787__$1;
                            statearr_16846[10] = inst_16786__$1;
                            statearr_16846[11] = inst_16785__$1;
                            statearr_16846[12] = inst_16784__$1;
                            return statearr_16846;
                          }();
                          var statearr_16847_16882 = state_16832__$1;
                          statearr_16847_16882[2] = null;
                          statearr_16847_16882[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16833 === 22) {
                            var state_16832__$1 = state_16832;
                            var statearr_16848_16883 = state_16832__$1;
                            statearr_16848_16883[2] = null;
                            statearr_16848_16883[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16833 === 6) {
                              var inst_16773 = state_16832[13];
                              var inst_16782 = f.call(null, inst_16773);
                              var inst_16783 = cljs.core.seq.call(null, inst_16782);
                              var inst_16784 = inst_16783;
                              var inst_16785 = null;
                              var inst_16786 = 0;
                              var inst_16787 = 0;
                              var state_16832__$1 = function() {
                                var statearr_16849 = state_16832;
                                statearr_16849[9] = inst_16787;
                                statearr_16849[10] = inst_16786;
                                statearr_16849[11] = inst_16785;
                                statearr_16849[12] = inst_16784;
                                return statearr_16849;
                              }();
                              var statearr_16850_16884 = state_16832__$1;
                              statearr_16850_16884[2] = null;
                              statearr_16850_16884[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16833 === 17) {
                                var inst_16798 = state_16832[7];
                                var inst_16802 = cljs.core.chunk_first.call(null, inst_16798);
                                var inst_16803 = cljs.core.chunk_rest.call(null, inst_16798);
                                var inst_16804 = cljs.core.count.call(null, inst_16802);
                                var inst_16784 = inst_16803;
                                var inst_16785 = inst_16802;
                                var inst_16786 = inst_16804;
                                var inst_16787 = 0;
                                var state_16832__$1 = function() {
                                  var statearr_16851 = state_16832;
                                  statearr_16851[9] = inst_16787;
                                  statearr_16851[10] = inst_16786;
                                  statearr_16851[11] = inst_16785;
                                  statearr_16851[12] = inst_16784;
                                  return statearr_16851;
                                }();
                                var statearr_16852_16885 = state_16832__$1;
                                statearr_16852_16885[2] = null;
                                statearr_16852_16885[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16833 === 3) {
                                  var inst_16830 = state_16832[2];
                                  var state_16832__$1 = state_16832;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16832__$1, inst_16830);
                                } else {
                                  if (state_val_16833 === 12) {
                                    var inst_16818 = state_16832[2];
                                    var state_16832__$1 = state_16832;
                                    var statearr_16853_16886 = state_16832__$1;
                                    statearr_16853_16886[2] = inst_16818;
                                    statearr_16853_16886[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_16833 === 2) {
                                      var state_16832__$1 = state_16832;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16832__$1, 4, in$);
                                    } else {
                                      if (state_val_16833 === 23) {
                                        var inst_16826 = state_16832[2];
                                        var state_16832__$1 = state_16832;
                                        var statearr_16854_16887 = state_16832__$1;
                                        statearr_16854_16887[2] = inst_16826;
                                        statearr_16854_16887[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16833 === 19) {
                                          var inst_16813 = state_16832[2];
                                          var state_16832__$1 = state_16832;
                                          var statearr_16855_16888 = state_16832__$1;
                                          statearr_16855_16888[2] = inst_16813;
                                          statearr_16855_16888[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_16833 === 11) {
                                            var inst_16798 = state_16832[7];
                                            var inst_16784 = state_16832[12];
                                            var inst_16798__$1 = cljs.core.seq.call(null, inst_16784);
                                            var state_16832__$1 = function() {
                                              var statearr_16856 = state_16832;
                                              statearr_16856[7] = inst_16798__$1;
                                              return statearr_16856;
                                            }();
                                            if (inst_16798__$1) {
                                              var statearr_16857_16889 = state_16832__$1;
                                              statearr_16857_16889[1] = 14;
                                            } else {
                                              var statearr_16858_16890 = state_16832__$1;
                                              statearr_16858_16890[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_16833 === 9) {
                                              var inst_16820 = state_16832[2];
                                              var inst_16821 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_16832__$1 = function() {
                                                var statearr_16859 = state_16832;
                                                statearr_16859[15] = inst_16820;
                                                return statearr_16859;
                                              }();
                                              if (cljs.core.truth_(inst_16821)) {
                                                var statearr_16860_16891 = state_16832__$1;
                                                statearr_16860_16891[1] = 21;
                                              } else {
                                                var statearr_16861_16892 = state_16832__$1;
                                                statearr_16861_16892[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_16833 === 5) {
                                                var inst_16776 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_16832__$1 = state_16832;
                                                var statearr_16862_16893 = state_16832__$1;
                                                statearr_16862_16893[2] = inst_16776;
                                                statearr_16862_16893[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_16833 === 14) {
                                                  var inst_16798 = state_16832[7];
                                                  var inst_16800 = cljs.core.chunked_seq_QMARK_.call(null, inst_16798);
                                                  var state_16832__$1 = state_16832;
                                                  if (inst_16800) {
                                                    var statearr_16863_16894 = state_16832__$1;
                                                    statearr_16863_16894[1] = 17;
                                                  } else {
                                                    var statearr_16864_16895 = state_16832__$1;
                                                    statearr_16864_16895[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_16833 === 16) {
                                                    var inst_16816 = state_16832[2];
                                                    var state_16832__$1 = state_16832;
                                                    var statearr_16865_16896 = state_16832__$1;
                                                    statearr_16865_16896[2] = inst_16816;
                                                    statearr_16865_16896[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_16833 === 10) {
                                                      var inst_16787 = state_16832[9];
                                                      var inst_16785 = state_16832[11];
                                                      var inst_16792 = cljs.core._nth.call(null, inst_16785, inst_16787);
                                                      var state_16832__$1 = state_16832;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16832__$1, 13, out, inst_16792);
                                                    } else {
                                                      if (state_val_16833 === 18) {
                                                        var inst_16798 = state_16832[7];
                                                        var inst_16807 = cljs.core.first.call(null, inst_16798);
                                                        var state_16832__$1 = state_16832;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16832__$1, 20, out, inst_16807);
                                                      } else {
                                                        if (state_val_16833 === 8) {
                                                          var inst_16787 = state_16832[9];
                                                          var inst_16786 = state_16832[10];
                                                          var inst_16789 = inst_16787 < inst_16786;
                                                          var inst_16790 = inst_16789;
                                                          var state_16832__$1 = state_16832;
                                                          if (cljs.core.truth_(inst_16790)) {
                                                            var statearr_16866_16897 = state_16832__$1;
                                                            statearr_16866_16897[1] = 10;
                                                          } else {
                                                            var statearr_16867_16898 = state_16832__$1;
                                                            statearr_16867_16898[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto__);
        return function(switch__12233__auto__, c__12295__auto__) {
          return function() {
            var cljs$core$async$mapcat_STAR__$_state_machine__12234__auto__ = null;
            var cljs$core$async$mapcat_STAR__$_state_machine__12234__auto____0 = function() {
              var statearr_16871 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_16871[0] = cljs$core$async$mapcat_STAR__$_state_machine__12234__auto__;
              statearr_16871[1] = 1;
              return statearr_16871;
            };
            var cljs$core$async$mapcat_STAR__$_state_machine__12234__auto____1 = function(state_16832) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_16832);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e16872) {
                    if (e16872 instanceof Object) {
                      var ex__12237__auto__ = e16872;
                      var statearr_16873_16899 = state_16832;
                      statearr_16873_16899[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16832);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16872;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16900 = state_16832;
                  state_16832 = G__16900;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$mapcat_STAR__$_state_machine__12234__auto__ = function(state_16832) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mapcat_STAR__$_state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$mapcat_STAR__$_state_machine__12234__auto____1.call(this, state_16832);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mapcat_STAR__$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mapcat_STAR__$_state_machine__12234__auto____0;
            cljs$core$async$mapcat_STAR__$_state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mapcat_STAR__$_state_machine__12234__auto____1;
            return cljs$core$async$mapcat_STAR__$_state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto__);
      }();
      var state__12297__auto__ = function() {
        var statearr_16874 = f__12296__auto__.call(null);
        statearr_16874[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto__;
        return statearr_16874;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto__));
  return c__12295__auto__;
};
cljs.core.async.mapcat_LT_ = function cljs$core$async$mapcat_LT_() {
  var G__16902 = arguments.length;
  switch(G__16902) {
    case 2:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = function(f, in$) {
  return cljs.core.async.mapcat_LT_.call(null, f, in$, null);
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = function(f, in$, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return out;
};
cljs.core.async.mapcat_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_GT_ = function cljs$core$async$mapcat_GT_() {
  var G__16905 = arguments.length;
  switch(G__16905) {
    case 2:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = function(f, out) {
  return cljs.core.async.mapcat_GT_.call(null, f, out, null);
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = function(f, out, buf_or_n) {
  var in$ = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return in$;
};
cljs.core.async.mapcat_GT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.unique = function cljs$core$async$unique() {
  var G__16908 = arguments.length;
  switch(G__16908) {
    case 1:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1 = function(ch) {
  return cljs.core.async.unique.call(null, ch, null);
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2 = function(ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__12295__auto___16958 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto___16958, out) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto___16958, out) {
          return function(state_16932) {
            var state_val_16933 = state_16932[1];
            if (state_val_16933 === 7) {
              var inst_16927 = state_16932[2];
              var state_16932__$1 = state_16932;
              var statearr_16934_16959 = state_16932__$1;
              statearr_16934_16959[2] = inst_16927;
              statearr_16934_16959[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16933 === 1) {
                var inst_16909 = null;
                var state_16932__$1 = function() {
                  var statearr_16935 = state_16932;
                  statearr_16935[7] = inst_16909;
                  return statearr_16935;
                }();
                var statearr_16936_16960 = state_16932__$1;
                statearr_16936_16960[2] = null;
                statearr_16936_16960[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16933 === 4) {
                  var inst_16912 = state_16932[8];
                  var inst_16912__$1 = state_16932[2];
                  var inst_16913 = inst_16912__$1 == null;
                  var inst_16914 = cljs.core.not.call(null, inst_16913);
                  var state_16932__$1 = function() {
                    var statearr_16937 = state_16932;
                    statearr_16937[8] = inst_16912__$1;
                    return statearr_16937;
                  }();
                  if (inst_16914) {
                    var statearr_16938_16961 = state_16932__$1;
                    statearr_16938_16961[1] = 5;
                  } else {
                    var statearr_16939_16962 = state_16932__$1;
                    statearr_16939_16962[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16933 === 6) {
                    var state_16932__$1 = state_16932;
                    var statearr_16940_16963 = state_16932__$1;
                    statearr_16940_16963[2] = null;
                    statearr_16940_16963[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16933 === 3) {
                      var inst_16929 = state_16932[2];
                      var inst_16930 = cljs.core.async.close_BANG_.call(null, out);
                      var state_16932__$1 = function() {
                        var statearr_16941 = state_16932;
                        statearr_16941[9] = inst_16929;
                        return statearr_16941;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16932__$1, inst_16930);
                    } else {
                      if (state_val_16933 === 2) {
                        var state_16932__$1 = state_16932;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16932__$1, 4, ch);
                      } else {
                        if (state_val_16933 === 11) {
                          var inst_16912 = state_16932[8];
                          var inst_16921 = state_16932[2];
                          var inst_16909 = inst_16912;
                          var state_16932__$1 = function() {
                            var statearr_16942 = state_16932;
                            statearr_16942[7] = inst_16909;
                            statearr_16942[10] = inst_16921;
                            return statearr_16942;
                          }();
                          var statearr_16943_16964 = state_16932__$1;
                          statearr_16943_16964[2] = null;
                          statearr_16943_16964[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16933 === 9) {
                            var inst_16912 = state_16932[8];
                            var state_16932__$1 = state_16932;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16932__$1, 11, out, inst_16912);
                          } else {
                            if (state_val_16933 === 5) {
                              var inst_16912 = state_16932[8];
                              var inst_16909 = state_16932[7];
                              var inst_16916 = cljs.core._EQ_.call(null, inst_16912, inst_16909);
                              var state_16932__$1 = state_16932;
                              if (inst_16916) {
                                var statearr_16945_16965 = state_16932__$1;
                                statearr_16945_16965[1] = 8;
                              } else {
                                var statearr_16946_16966 = state_16932__$1;
                                statearr_16946_16966[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16933 === 10) {
                                var inst_16924 = state_16932[2];
                                var state_16932__$1 = state_16932;
                                var statearr_16947_16967 = state_16932__$1;
                                statearr_16947_16967[2] = inst_16924;
                                statearr_16947_16967[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16933 === 8) {
                                  var inst_16909 = state_16932[7];
                                  var tmp16944 = inst_16909;
                                  var inst_16909__$1 = tmp16944;
                                  var state_16932__$1 = function() {
                                    var statearr_16948 = state_16932;
                                    statearr_16948[7] = inst_16909__$1;
                                    return statearr_16948;
                                  }();
                                  var statearr_16949_16968 = state_16932__$1;
                                  statearr_16949_16968[2] = null;
                                  statearr_16949_16968[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto___16958, out);
        return function(switch__12233__auto__, c__12295__auto___16958, out) {
          return function() {
            var cljs$core$async$state_machine__12234__auto__ = null;
            var cljs$core$async$state_machine__12234__auto____0 = function() {
              var statearr_16953 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_16953[0] = cljs$core$async$state_machine__12234__auto__;
              statearr_16953[1] = 1;
              return statearr_16953;
            };
            var cljs$core$async$state_machine__12234__auto____1 = function(state_16932) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_16932);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e16954) {
                    if (e16954 instanceof Object) {
                      var ex__12237__auto__ = e16954;
                      var statearr_16955_16969 = state_16932;
                      statearr_16955_16969[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16932);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16954;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16970 = state_16932;
                  state_16932 = G__16970;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__12234__auto__ = function(state_16932) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__12234__auto____1.call(this, state_16932);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__12234__auto____0;
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__12234__auto____1;
            return cljs$core$async$state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto___16958, out);
      }();
      var state__12297__auto__ = function() {
        var statearr_16956 = f__12296__auto__.call(null);
        statearr_16956[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___16958;
        return statearr_16956;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto___16958, out));
  return out;
};
cljs.core.async.unique.cljs$lang$maxFixedArity = 2;
cljs.core.async.partition = function cljs$core$async$partition() {
  var G__16972 = arguments.length;
  switch(G__16972) {
    case 2:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.partition.call(null, n, ch, null);
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__12295__auto___17041 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto___17041, out) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto___17041, out) {
          return function(state_17010) {
            var state_val_17011 = state_17010[1];
            if (state_val_17011 === 7) {
              var inst_17006 = state_17010[2];
              var state_17010__$1 = state_17010;
              var statearr_17012_17042 = state_17010__$1;
              statearr_17012_17042[2] = inst_17006;
              statearr_17012_17042[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17011 === 1) {
                var inst_16973 = new Array(n);
                var inst_16974 = inst_16973;
                var inst_16975 = 0;
                var state_17010__$1 = function() {
                  var statearr_17013 = state_17010;
                  statearr_17013[7] = inst_16974;
                  statearr_17013[8] = inst_16975;
                  return statearr_17013;
                }();
                var statearr_17014_17043 = state_17010__$1;
                statearr_17014_17043[2] = null;
                statearr_17014_17043[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17011 === 4) {
                  var inst_16978 = state_17010[9];
                  var inst_16978__$1 = state_17010[2];
                  var inst_16979 = inst_16978__$1 == null;
                  var inst_16980 = cljs.core.not.call(null, inst_16979);
                  var state_17010__$1 = function() {
                    var statearr_17015 = state_17010;
                    statearr_17015[9] = inst_16978__$1;
                    return statearr_17015;
                  }();
                  if (inst_16980) {
                    var statearr_17016_17044 = state_17010__$1;
                    statearr_17016_17044[1] = 5;
                  } else {
                    var statearr_17017_17045 = state_17010__$1;
                    statearr_17017_17045[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17011 === 15) {
                    var inst_17000 = state_17010[2];
                    var state_17010__$1 = state_17010;
                    var statearr_17018_17046 = state_17010__$1;
                    statearr_17018_17046[2] = inst_17000;
                    statearr_17018_17046[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17011 === 13) {
                      var state_17010__$1 = state_17010;
                      var statearr_17019_17047 = state_17010__$1;
                      statearr_17019_17047[2] = null;
                      statearr_17019_17047[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17011 === 6) {
                        var inst_16975 = state_17010[8];
                        var inst_16996 = inst_16975 > 0;
                        var state_17010__$1 = state_17010;
                        if (cljs.core.truth_(inst_16996)) {
                          var statearr_17020_17048 = state_17010__$1;
                          statearr_17020_17048[1] = 12;
                        } else {
                          var statearr_17021_17049 = state_17010__$1;
                          statearr_17021_17049[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17011 === 3) {
                          var inst_17008 = state_17010[2];
                          var state_17010__$1 = state_17010;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17010__$1, inst_17008);
                        } else {
                          if (state_val_17011 === 12) {
                            var inst_16974 = state_17010[7];
                            var inst_16998 = cljs.core.vec.call(null, inst_16974);
                            var state_17010__$1 = state_17010;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17010__$1, 15, out, inst_16998);
                          } else {
                            if (state_val_17011 === 2) {
                              var state_17010__$1 = state_17010;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17010__$1, 4, ch);
                            } else {
                              if (state_val_17011 === 11) {
                                var inst_16990 = state_17010[2];
                                var inst_16991 = new Array(n);
                                var inst_16974 = inst_16991;
                                var inst_16975 = 0;
                                var state_17010__$1 = function() {
                                  var statearr_17022 = state_17010;
                                  statearr_17022[7] = inst_16974;
                                  statearr_17022[8] = inst_16975;
                                  statearr_17022[10] = inst_16990;
                                  return statearr_17022;
                                }();
                                var statearr_17023_17050 = state_17010__$1;
                                statearr_17023_17050[2] = null;
                                statearr_17023_17050[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17011 === 9) {
                                  var inst_16974 = state_17010[7];
                                  var inst_16988 = cljs.core.vec.call(null, inst_16974);
                                  var state_17010__$1 = state_17010;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17010__$1, 11, out, inst_16988);
                                } else {
                                  if (state_val_17011 === 5) {
                                    var inst_16978 = state_17010[9];
                                    var inst_16983 = state_17010[11];
                                    var inst_16974 = state_17010[7];
                                    var inst_16975 = state_17010[8];
                                    var inst_16982 = inst_16974[inst_16975] = inst_16978;
                                    var inst_16983__$1 = inst_16975 + 1;
                                    var inst_16984 = inst_16983__$1 < n;
                                    var state_17010__$1 = function() {
                                      var statearr_17024 = state_17010;
                                      statearr_17024[12] = inst_16982;
                                      statearr_17024[11] = inst_16983__$1;
                                      return statearr_17024;
                                    }();
                                    if (cljs.core.truth_(inst_16984)) {
                                      var statearr_17025_17051 = state_17010__$1;
                                      statearr_17025_17051[1] = 8;
                                    } else {
                                      var statearr_17026_17052 = state_17010__$1;
                                      statearr_17026_17052[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17011 === 14) {
                                      var inst_17003 = state_17010[2];
                                      var inst_17004 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_17010__$1 = function() {
                                        var statearr_17028 = state_17010;
                                        statearr_17028[13] = inst_17003;
                                        return statearr_17028;
                                      }();
                                      var statearr_17029_17053 = state_17010__$1;
                                      statearr_17029_17053[2] = inst_17004;
                                      statearr_17029_17053[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17011 === 10) {
                                        var inst_16994 = state_17010[2];
                                        var state_17010__$1 = state_17010;
                                        var statearr_17030_17054 = state_17010__$1;
                                        statearr_17030_17054[2] = inst_16994;
                                        statearr_17030_17054[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17011 === 8) {
                                          var inst_16983 = state_17010[11];
                                          var inst_16974 = state_17010[7];
                                          var tmp17027 = inst_16974;
                                          var inst_16974__$1 = tmp17027;
                                          var inst_16975 = inst_16983;
                                          var state_17010__$1 = function() {
                                            var statearr_17031 = state_17010;
                                            statearr_17031[7] = inst_16974__$1;
                                            statearr_17031[8] = inst_16975;
                                            return statearr_17031;
                                          }();
                                          var statearr_17032_17055 = state_17010__$1;
                                          statearr_17032_17055[2] = null;
                                          statearr_17032_17055[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto___17041, out);
        return function(switch__12233__auto__, c__12295__auto___17041, out) {
          return function() {
            var cljs$core$async$state_machine__12234__auto__ = null;
            var cljs$core$async$state_machine__12234__auto____0 = function() {
              var statearr_17036 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17036[0] = cljs$core$async$state_machine__12234__auto__;
              statearr_17036[1] = 1;
              return statearr_17036;
            };
            var cljs$core$async$state_machine__12234__auto____1 = function(state_17010) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_17010);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e17037) {
                    if (e17037 instanceof Object) {
                      var ex__12237__auto__ = e17037;
                      var statearr_17038_17056 = state_17010;
                      statearr_17038_17056[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17010);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17037;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__17057 = state_17010;
                  state_17010 = G__17057;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__12234__auto__ = function(state_17010) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__12234__auto____1.call(this, state_17010);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__12234__auto____0;
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__12234__auto____1;
            return cljs$core$async$state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto___17041, out);
      }();
      var state__12297__auto__ = function() {
        var statearr_17039 = f__12296__auto__.call(null);
        statearr_17039[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___17041;
        return statearr_17039;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto___17041, out));
  return out;
};
cljs.core.async.partition.cljs$lang$maxFixedArity = 3;
cljs.core.async.partition_by = function cljs$core$async$partition_by() {
  var G__17059 = arguments.length;
  switch(G__17059) {
    case 2:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, ch) {
  return cljs.core.async.partition_by.call(null, f, ch, null);
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3 = function(f, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__12295__auto___17132 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12295__auto___17132, out) {
    return function() {
      var f__12296__auto__ = function() {
        var switch__12233__auto__ = function(c__12295__auto___17132, out) {
          return function(state_17101) {
            var state_val_17102 = state_17101[1];
            if (state_val_17102 === 7) {
              var inst_17097 = state_17101[2];
              var state_17101__$1 = state_17101;
              var statearr_17103_17133 = state_17101__$1;
              statearr_17103_17133[2] = inst_17097;
              statearr_17103_17133[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17102 === 1) {
                var inst_17060 = [];
                var inst_17061 = inst_17060;
                var inst_17062 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                var state_17101__$1 = function() {
                  var statearr_17104 = state_17101;
                  statearr_17104[7] = inst_17062;
                  statearr_17104[8] = inst_17061;
                  return statearr_17104;
                }();
                var statearr_17105_17134 = state_17101__$1;
                statearr_17105_17134[2] = null;
                statearr_17105_17134[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17102 === 4) {
                  var inst_17065 = state_17101[9];
                  var inst_17065__$1 = state_17101[2];
                  var inst_17066 = inst_17065__$1 == null;
                  var inst_17067 = cljs.core.not.call(null, inst_17066);
                  var state_17101__$1 = function() {
                    var statearr_17106 = state_17101;
                    statearr_17106[9] = inst_17065__$1;
                    return statearr_17106;
                  }();
                  if (inst_17067) {
                    var statearr_17107_17135 = state_17101__$1;
                    statearr_17107_17135[1] = 5;
                  } else {
                    var statearr_17108_17136 = state_17101__$1;
                    statearr_17108_17136[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17102 === 15) {
                    var inst_17091 = state_17101[2];
                    var state_17101__$1 = state_17101;
                    var statearr_17109_17137 = state_17101__$1;
                    statearr_17109_17137[2] = inst_17091;
                    statearr_17109_17137[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17102 === 13) {
                      var state_17101__$1 = state_17101;
                      var statearr_17110_17138 = state_17101__$1;
                      statearr_17110_17138[2] = null;
                      statearr_17110_17138[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17102 === 6) {
                        var inst_17061 = state_17101[8];
                        var inst_17086 = inst_17061.length;
                        var inst_17087 = inst_17086 > 0;
                        var state_17101__$1 = state_17101;
                        if (cljs.core.truth_(inst_17087)) {
                          var statearr_17111_17139 = state_17101__$1;
                          statearr_17111_17139[1] = 12;
                        } else {
                          var statearr_17112_17140 = state_17101__$1;
                          statearr_17112_17140[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17102 === 3) {
                          var inst_17099 = state_17101[2];
                          var state_17101__$1 = state_17101;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17101__$1, inst_17099);
                        } else {
                          if (state_val_17102 === 12) {
                            var inst_17061 = state_17101[8];
                            var inst_17089 = cljs.core.vec.call(null, inst_17061);
                            var state_17101__$1 = state_17101;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17101__$1, 15, out, inst_17089);
                          } else {
                            if (state_val_17102 === 2) {
                              var state_17101__$1 = state_17101;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17101__$1, 4, ch);
                            } else {
                              if (state_val_17102 === 11) {
                                var inst_17069 = state_17101[10];
                                var inst_17065 = state_17101[9];
                                var inst_17079 = state_17101[2];
                                var inst_17080 = [];
                                var inst_17081 = inst_17080.push(inst_17065);
                                var inst_17061 = inst_17080;
                                var inst_17062 = inst_17069;
                                var state_17101__$1 = function() {
                                  var statearr_17113 = state_17101;
                                  statearr_17113[7] = inst_17062;
                                  statearr_17113[11] = inst_17081;
                                  statearr_17113[12] = inst_17079;
                                  statearr_17113[8] = inst_17061;
                                  return statearr_17113;
                                }();
                                var statearr_17114_17141 = state_17101__$1;
                                statearr_17114_17141[2] = null;
                                statearr_17114_17141[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17102 === 9) {
                                  var inst_17061 = state_17101[8];
                                  var inst_17077 = cljs.core.vec.call(null, inst_17061);
                                  var state_17101__$1 = state_17101;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17101__$1, 11, out, inst_17077);
                                } else {
                                  if (state_val_17102 === 5) {
                                    var inst_17062 = state_17101[7];
                                    var inst_17069 = state_17101[10];
                                    var inst_17065 = state_17101[9];
                                    var inst_17069__$1 = f.call(null, inst_17065);
                                    var inst_17070 = cljs.core._EQ_.call(null, inst_17069__$1, inst_17062);
                                    var inst_17071 = cljs.core.keyword_identical_QMARK_.call(null, inst_17062, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                    var inst_17072 = inst_17070 || inst_17071;
                                    var state_17101__$1 = function() {
                                      var statearr_17115 = state_17101;
                                      statearr_17115[10] = inst_17069__$1;
                                      return statearr_17115;
                                    }();
                                    if (cljs.core.truth_(inst_17072)) {
                                      var statearr_17116_17142 = state_17101__$1;
                                      statearr_17116_17142[1] = 8;
                                    } else {
                                      var statearr_17117_17143 = state_17101__$1;
                                      statearr_17117_17143[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17102 === 14) {
                                      var inst_17094 = state_17101[2];
                                      var inst_17095 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_17101__$1 = function() {
                                        var statearr_17119 = state_17101;
                                        statearr_17119[13] = inst_17094;
                                        return statearr_17119;
                                      }();
                                      var statearr_17120_17144 = state_17101__$1;
                                      statearr_17120_17144[2] = inst_17095;
                                      statearr_17120_17144[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17102 === 10) {
                                        var inst_17084 = state_17101[2];
                                        var state_17101__$1 = state_17101;
                                        var statearr_17121_17145 = state_17101__$1;
                                        statearr_17121_17145[2] = inst_17084;
                                        statearr_17121_17145[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17102 === 8) {
                                          var inst_17069 = state_17101[10];
                                          var inst_17065 = state_17101[9];
                                          var inst_17061 = state_17101[8];
                                          var inst_17074 = inst_17061.push(inst_17065);
                                          var tmp17118 = inst_17061;
                                          var inst_17061__$1 = tmp17118;
                                          var inst_17062 = inst_17069;
                                          var state_17101__$1 = function() {
                                            var statearr_17122 = state_17101;
                                            statearr_17122[14] = inst_17074;
                                            statearr_17122[7] = inst_17062;
                                            statearr_17122[8] = inst_17061__$1;
                                            return statearr_17122;
                                          }();
                                          var statearr_17123_17146 = state_17101__$1;
                                          statearr_17123_17146[2] = null;
                                          statearr_17123_17146[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12295__auto___17132, out);
        return function(switch__12233__auto__, c__12295__auto___17132, out) {
          return function() {
            var cljs$core$async$state_machine__12234__auto__ = null;
            var cljs$core$async$state_machine__12234__auto____0 = function() {
              var statearr_17127 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17127[0] = cljs$core$async$state_machine__12234__auto__;
              statearr_17127[1] = 1;
              return statearr_17127;
            };
            var cljs$core$async$state_machine__12234__auto____1 = function(state_17101) {
              while (true) {
                var ret_value__12235__auto__ = function() {
                  try {
                    while (true) {
                      var result__12236__auto__ = switch__12233__auto__.call(null, state_17101);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12236__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12236__auto__;
                      }
                      break;
                    }
                  } catch (e17128) {
                    if (e17128 instanceof Object) {
                      var ex__12237__auto__ = e17128;
                      var statearr_17129_17147 = state_17101;
                      statearr_17129_17147[5] = ex__12237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17101);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17128;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12235__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__17148 = state_17101;
                  state_17101 = G__17148;
                  continue;
                } else {
                  return ret_value__12235__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__12234__auto__ = function(state_17101) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__12234__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__12234__auto____1.call(this, state_17101);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__12234__auto____0;
            cljs$core$async$state_machine__12234__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__12234__auto____1;
            return cljs$core$async$state_machine__12234__auto__;
          }();
        }(switch__12233__auto__, c__12295__auto___17132, out);
      }();
      var state__12297__auto__ = function() {
        var statearr_17130 = f__12296__auto__.call(null);
        statearr_17130[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12295__auto___17132;
        return statearr_17130;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12297__auto__);
    };
  }(c__12295__auto___17132, out));
  return out;
};
cljs.core.async.partition_by.cljs$lang$maxFixedArity = 3;
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join() {
  var G__14630 = arguments.length;
  switch(G__14630) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (coll__$1) {
      var G__14632 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__14633 = cljs.core.next.call(null, coll__$1);
      sb = G__14632;
      coll__$1 = G__14633;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (coll__$1) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__14634 = sb;
      var G__14635 = coll__$2;
      sb = G__14634;
      coll__$1 = G__14635;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__14636 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__14636;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__14640 = cljs.core._EQ_;
    var expr__14641 = limit;
    if (cljs.core.truth_(pred__14640.call(null, 1, expr__14641))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__14640.call(null, 2, expr__14641))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split() {
  var G__14644 = arguments.length;
  switch(G__14644) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (cljs.core._EQ_.call(null, limit__$1, 1)) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var m = temp__4124__auto__;
          var index = s__$1.indexOf(m);
          var G__14646 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__14647 = limit__$1 - 1;
          var G__14648 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__14646;
          limit__$1 = G__14647;
          parts = G__14648;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__14649 = index - 1;
        index = G__14649;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___14650 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___14650)) {
        var replacement_14651 = temp__4124__auto___14650;
        buffer.append([cljs.core.str(replacement_14651)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__14652 = index + 1;
      index = G__14652;
      continue;
    }
    break;
  }
};
goog.provide("rerenderer.browser");
goog.require("cljs.core");
goog.require("rerenderer.core");
goog.require("clojure.string");
goog.require("cljs.core.async");
goog.require("cljs.core.match");
rerenderer.browser.browser_call_BANG_ = function rerenderer$browser$browser_call_BANG_(canvas_ctx, path) {
  var G__14199 = path;
  var vec__14200 = G__14199;
  var step = cljs.core.nth.call(null, vec__14200, 0, null);
  var other = cljs.core.nthnext.call(null, vec__14200, 1);
  var obj = canvas_ctx;
  var G__14199__$1 = G__14199;
  var obj__$1 = obj;
  while (true) {
    var vec__14201 = G__14199__$1;
    var step__$1 = cljs.core.nth.call(null, vec__14201, 0, null);
    var other__$1 = cljs.core.nthnext.call(null, vec__14201, 1);
    var obj__$2 = obj__$1;
    if (cljs.core.truth_(step__$1)) {
      var G__14203 = other__$1;
      var G__14204 = function() {
        var vec__14202 = step__$1;
        var method = cljs.core.nth.call(null, vec__14202, 0, null);
        var args = cljs.core.nthnext.call(null, vec__14202, 1);
        var args__$1 = function() {
          var or__4357__auto__ = args;
          if (cljs.core.truth_(or__4357__auto__)) {
            return or__4357__auto__;
          } else {
            return cljs.core.PersistentVector.EMPTY;
          }
        }();
        if (cljs.core._EQ_.call(null, cljs.core.first.call(null, method), "-")) {
          return obj__$2[clojure.string.replace_first.call(null, method, "-", "")];
        } else {
          return obj__$2[method].apply(obj__$2, cljs.core.clj__GT_js.call(null, args__$1));
        }
      }();
      G__14199__$1 = G__14203;
      obj__$1 = G__14204;
      continue;
    } else {
      return obj__$2;
    }
    break;
  }
};
rerenderer.browser.browser_set_BANG_ = function rerenderer$browser$browser_set_BANG_(canvas_ctx, path, value) {
  var obj = rerenderer.browser.browser_call_BANG_.call(null, canvas_ctx, cljs.core.butlast.call(null, path));
  var attr = clojure.string.replace_first.call(null, cljs.core.first.call(null, cljs.core.last.call(null, path)), "-", "");
  return obj[attr] = value;
};
rerenderer.browser.browser = function rerenderer$browser$browser(canvas) {
  var canvas_ctx = canvas.getContext("2d");
  var platform_id = [cljs.core.str(cljs.core.gensym.call(null))].join("");
  canvas.dataset.platfromId = platform_id;
  if (typeof rerenderer.browser.t14281 !== "undefined") {
  } else {
    rerenderer.browser.t14281 = function(platform_id, canvas_ctx, canvas, browser, meta14282) {
      this.platform_id = platform_id;
      this.canvas_ctx = canvas_ctx;
      this.canvas = canvas;
      this.browser = browser;
      this.meta14282 = meta14282;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    rerenderer.browser.t14281.prototype.rerenderer$core$IPlatform$ = true;
    rerenderer.browser.t14281.prototype.rerenderer$core$IPlatform$render_BANG_$arity$2 = function(canvas_ctx, platform_id) {
      return function(_, ctx) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core._EQ_.call(null, self__.platform_id, self__.canvas.dataset.platfromId)) {
          var seq__14284 = cljs.core.seq.call(null, ctx);
          var chunk__14285 = null;
          var count__14286 = 0;
          var i__14287 = 0;
          while (true) {
            if (i__14287 < count__14286) {
              var action = cljs.core._nth.call(null, chunk__14285, i__14287);
              try {
                if (cljs.core.vector_QMARK_.call(null, action) && cljs.core.count.call(null, action) === 3) {
                  try {
                    var action_0__14289_14356 = cljs.core.nth.call(null, action, 0);
                    if (cljs.core.keyword_identical_QMARK_.call(null, action_0__14289_14356, new cljs.core.Keyword(null, "set", "set", 304602554))) {
                      var path_14357 = cljs.core.nth.call(null, action, 1);
                      var value_14358 = cljs.core.nth.call(null, action, 2);
                      rerenderer.browser.browser_set_BANG_.call(null, self__.canvas_ctx, path_14357, value_14358);
                    } else {
                      throw cljs.core.match.backtrack;
                    }
                  } catch (e14297) {
                    if (e14297 instanceof Error) {
                      var e__9949__auto___14359 = e14297;
                      if (e__9949__auto___14359 === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__9949__auto___14359;
                      }
                    } else {
                      throw e14297;
                    }
                  }
                } else {
                  throw cljs.core.match.backtrack;
                }
              } catch (e14294) {
                if (e14294 instanceof Error) {
                  var e__9949__auto___14360 = e14294;
                  if (e__9949__auto___14360 === cljs.core.match.backtrack) {
                    try {
                      if (cljs.core.vector_QMARK_.call(null, action) && cljs.core.count.call(null, action) === 2) {
                        try {
                          var action_0__14292_14361 = cljs.core.nth.call(null, action, 0);
                          if (cljs.core.keyword_identical_QMARK_.call(null, action_0__14292_14361, new cljs.core.Keyword(null, "call", "call", -519999866))) {
                            var path_14362 = cljs.core.nth.call(null, action, 1);
                            rerenderer.browser.browser_call_BANG_.call(null, self__.canvas_ctx, path_14362);
                          } else {
                            throw cljs.core.match.backtrack;
                          }
                        } catch (e14296) {
                          if (e14296 instanceof Error) {
                            var e__9949__auto___14363__$1 = e14296;
                            if (e__9949__auto___14363__$1 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__9949__auto___14363__$1;
                            }
                          } else {
                            throw e14296;
                          }
                        }
                      } else {
                        throw cljs.core.match.backtrack;
                      }
                    } catch (e14295) {
                      if (e14295 instanceof Error) {
                        var e__9949__auto___14364__$1 = e14295;
                        if (e__9949__auto___14364__$1 === cljs.core.match.backtrack) {
                          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(action)].join(""));
                        } else {
                          throw e__9949__auto___14364__$1;
                        }
                      } else {
                        throw e14295;
                      }
                    }
                  } else {
                    throw e__9949__auto___14360;
                  }
                } else {
                  throw e14294;
                }
              }
              var G__14365 = seq__14284;
              var G__14366 = chunk__14285;
              var G__14367 = count__14286;
              var G__14368 = i__14287 + 1;
              seq__14284 = G__14365;
              chunk__14285 = G__14366;
              count__14286 = G__14367;
              i__14287 = G__14368;
              continue;
            } else {
              var temp__4126__auto__ = cljs.core.seq.call(null, seq__14284);
              if (temp__4126__auto__) {
                var seq__14284__$1 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__14284__$1)) {
                  var c__5142__auto__ = cljs.core.chunk_first.call(null, seq__14284__$1);
                  var G__14369 = cljs.core.chunk_rest.call(null, seq__14284__$1);
                  var G__14370 = c__5142__auto__;
                  var G__14371 = cljs.core.count.call(null, c__5142__auto__);
                  var G__14372 = 0;
                  seq__14284 = G__14369;
                  chunk__14285 = G__14370;
                  count__14286 = G__14371;
                  i__14287 = G__14372;
                  continue;
                } else {
                  var action = cljs.core.first.call(null, seq__14284__$1);
                  try {
                    if (cljs.core.vector_QMARK_.call(null, action) && cljs.core.count.call(null, action) === 3) {
                      try {
                        var action_0__14299_14373 = cljs.core.nth.call(null, action, 0);
                        if (cljs.core.keyword_identical_QMARK_.call(null, action_0__14299_14373, new cljs.core.Keyword(null, "set", "set", 304602554))) {
                          var path_14374 = cljs.core.nth.call(null, action, 1);
                          var value_14375 = cljs.core.nth.call(null, action, 2);
                          rerenderer.browser.browser_set_BANG_.call(null, self__.canvas_ctx, path_14374, value_14375);
                        } else {
                          throw cljs.core.match.backtrack;
                        }
                      } catch (e14307) {
                        if (e14307 instanceof Error) {
                          var e__9949__auto___14376 = e14307;
                          if (e__9949__auto___14376 === cljs.core.match.backtrack) {
                            throw cljs.core.match.backtrack;
                          } else {
                            throw e__9949__auto___14376;
                          }
                        } else {
                          throw e14307;
                        }
                      }
                    } else {
                      throw cljs.core.match.backtrack;
                    }
                  } catch (e14304) {
                    if (e14304 instanceof Error) {
                      var e__9949__auto___14377 = e14304;
                      if (e__9949__auto___14377 === cljs.core.match.backtrack) {
                        try {
                          if (cljs.core.vector_QMARK_.call(null, action) && cljs.core.count.call(null, action) === 2) {
                            try {
                              var action_0__14302_14378 = cljs.core.nth.call(null, action, 0);
                              if (cljs.core.keyword_identical_QMARK_.call(null, action_0__14302_14378, new cljs.core.Keyword(null, "call", "call", -519999866))) {
                                var path_14379 = cljs.core.nth.call(null, action, 1);
                                rerenderer.browser.browser_call_BANG_.call(null, self__.canvas_ctx, path_14379);
                              } else {
                                throw cljs.core.match.backtrack;
                              }
                            } catch (e14306) {
                              if (e14306 instanceof Error) {
                                var e__9949__auto___14380__$1 = e14306;
                                if (e__9949__auto___14380__$1 === cljs.core.match.backtrack) {
                                  throw cljs.core.match.backtrack;
                                } else {
                                  throw e__9949__auto___14380__$1;
                                }
                              } else {
                                throw e14306;
                              }
                            }
                          } else {
                            throw cljs.core.match.backtrack;
                          }
                        } catch (e14305) {
                          if (e14305 instanceof Error) {
                            var e__9949__auto___14381__$1 = e14305;
                            if (e__9949__auto___14381__$1 === cljs.core.match.backtrack) {
                              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(action)].join(""));
                            } else {
                              throw e__9949__auto___14381__$1;
                            }
                          } else {
                            throw e14305;
                          }
                        }
                      } else {
                        throw e__9949__auto___14377;
                      }
                    } else {
                      throw e14304;
                    }
                  }
                  var G__14382 = cljs.core.next.call(null, seq__14284__$1);
                  var G__14383 = null;
                  var G__14384 = 0;
                  var G__14385 = 0;
                  seq__14284 = G__14382;
                  chunk__14285 = G__14383;
                  count__14286 = G__14384;
                  i__14287 = G__14385;
                  continue;
                }
              } else {
                return null;
              }
            }
            break;
          }
        } else {
          return null;
        }
      };
    }(canvas_ctx, platform_id);
    rerenderer.browser.t14281.prototype.rerenderer$core$IPlatform$listen_BANG_$arity$3 = function(canvas_ctx, platform_id) {
      return function(_, event, ch) {
        var self__ = this;
        var ___$1 = this;
        return self__.canvas.addEventListener(cljs.core.name.call(null, event), function(___$1, canvas_ctx, platform_id) {
          return function(p1__14205_SHARP_) {
            var c__12042__auto__ = cljs.core.async.chan.call(null, 1);
            cljs.core.async.impl.dispatch.run.call(null, function(c__12042__auto__, ___$1, canvas_ctx, platform_id) {
              return function() {
                var f__12043__auto__ = function() {
                  var switch__11980__auto__ = function(c__12042__auto__, ___$1, canvas_ctx, platform_id) {
                    return function(state_14311) {
                      var state_val_14312 = state_14311[1];
                      if (state_val_14312 === 2) {
                        var inst_14309 = state_14311[2];
                        var state_14311__$1 = state_14311;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14311__$1, inst_14309);
                      } else {
                        if (state_val_14312 === 1) {
                          var state_14311__$1 = state_14311;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14311__$1, 2, ch, p1__14205_SHARP_);
                        } else {
                          return null;
                        }
                      }
                    };
                  }(c__12042__auto__, ___$1, canvas_ctx, platform_id);
                  return function(switch__11980__auto__, c__12042__auto__, ___$1, canvas_ctx, platform_id) {
                    return function() {
                      var rerenderer$browser$browser_$_state_machine__11981__auto__ = null;
                      var rerenderer$browser$browser_$_state_machine__11981__auto____0 = function() {
                        var statearr_14316 = [null, null, null, null, null, null, null];
                        statearr_14316[0] = rerenderer$browser$browser_$_state_machine__11981__auto__;
                        statearr_14316[1] = 1;
                        return statearr_14316;
                      };
                      var rerenderer$browser$browser_$_state_machine__11981__auto____1 = function(state_14311) {
                        while (true) {
                          var ret_value__11982__auto__ = function() {
                            try {
                              while (true) {
                                var result__11983__auto__ = switch__11980__auto__.call(null, state_14311);
                                if (cljs.core.keyword_identical_QMARK_.call(null, result__11983__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                  continue;
                                } else {
                                  return result__11983__auto__;
                                }
                                break;
                              }
                            } catch (e14317) {
                              if (e14317 instanceof Object) {
                                var ex__11984__auto__ = e14317;
                                var statearr_14318_14386 = state_14311;
                                statearr_14318_14386[5] = ex__11984__auto__;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14311);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                throw e14317;
                              }
                            }
                          }();
                          if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__11982__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            var G__14387 = state_14311;
                            state_14311 = G__14387;
                            continue;
                          } else {
                            return ret_value__11982__auto__;
                          }
                          break;
                        }
                      };
                      rerenderer$browser$browser_$_state_machine__11981__auto__ = function(state_14311) {
                        switch(arguments.length) {
                          case 0:
                            return rerenderer$browser$browser_$_state_machine__11981__auto____0.call(this);
                          case 1:
                            return rerenderer$browser$browser_$_state_machine__11981__auto____1.call(this, state_14311);
                        }
                        throw new Error("Invalid arity: " + arguments.length);
                      };
                      rerenderer$browser$browser_$_state_machine__11981__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$browser$browser_$_state_machine__11981__auto____0;
                      rerenderer$browser$browser_$_state_machine__11981__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$browser$browser_$_state_machine__11981__auto____1;
                      return rerenderer$browser$browser_$_state_machine__11981__auto__;
                    }();
                  }(switch__11980__auto__, c__12042__auto__, ___$1, canvas_ctx, platform_id);
                }();
                var state__12044__auto__ = function() {
                  var statearr_14319 = f__12043__auto__.call(null);
                  statearr_14319[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12042__auto__;
                  return statearr_14319;
                }();
                return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12044__auto__);
              };
            }(c__12042__auto__, ___$1, canvas_ctx, platform_id));
            return c__12042__auto__;
          };
        }(___$1, canvas_ctx, platform_id));
      };
    }(canvas_ctx, platform_id);
    rerenderer.browser.t14281.prototype.rerenderer$core$IPlatform$image$arity$2 = function(canvas_ctx, platform_id) {
      return function(_, src) {
        var self__ = this;
        var ___$1 = this;
        var img = new Image;
        var loaded_ch = cljs.core.async.chan.call(null);
        img.src = src;
        img.addEventListener("load", function(img, loaded_ch, ___$1, canvas_ctx, platform_id) {
          return function() {
            var c__12042__auto__ = cljs.core.async.chan.call(null, 1);
            cljs.core.async.impl.dispatch.run.call(null, function(c__12042__auto__, img, loaded_ch, ___$1, canvas_ctx, platform_id) {
              return function() {
                var f__12043__auto__ = function() {
                  var switch__11980__auto__ = function(c__12042__auto__, img, loaded_ch, ___$1, canvas_ctx, platform_id) {
                    return function(state_14323) {
                      var state_val_14324 = state_14323[1];
                      if (state_val_14324 === 2) {
                        var inst_14321 = state_14323[2];
                        var state_14323__$1 = state_14323;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14323__$1, inst_14321);
                      } else {
                        if (state_val_14324 === 1) {
                          var state_14323__$1 = state_14323;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14323__$1, 2, loaded_ch, true);
                        } else {
                          return null;
                        }
                      }
                    };
                  }(c__12042__auto__, img, loaded_ch, ___$1, canvas_ctx, platform_id);
                  return function(switch__11980__auto__, c__12042__auto__, img, loaded_ch, ___$1, canvas_ctx, platform_id) {
                    return function() {
                      var rerenderer$browser$browser_$_state_machine__11981__auto__ = null;
                      var rerenderer$browser$browser_$_state_machine__11981__auto____0 = function() {
                        var statearr_14328 = [null, null, null, null, null, null, null];
                        statearr_14328[0] = rerenderer$browser$browser_$_state_machine__11981__auto__;
                        statearr_14328[1] = 1;
                        return statearr_14328;
                      };
                      var rerenderer$browser$browser_$_state_machine__11981__auto____1 = function(state_14323) {
                        while (true) {
                          var ret_value__11982__auto__ = function() {
                            try {
                              while (true) {
                                var result__11983__auto__ = switch__11980__auto__.call(null, state_14323);
                                if (cljs.core.keyword_identical_QMARK_.call(null, result__11983__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                  continue;
                                } else {
                                  return result__11983__auto__;
                                }
                                break;
                              }
                            } catch (e14329) {
                              if (e14329 instanceof Object) {
                                var ex__11984__auto__ = e14329;
                                var statearr_14330_14388 = state_14323;
                                statearr_14330_14388[5] = ex__11984__auto__;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14323);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                throw e14329;
                              }
                            }
                          }();
                          if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__11982__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            var G__14389 = state_14323;
                            state_14323 = G__14389;
                            continue;
                          } else {
                            return ret_value__11982__auto__;
                          }
                          break;
                        }
                      };
                      rerenderer$browser$browser_$_state_machine__11981__auto__ = function(state_14323) {
                        switch(arguments.length) {
                          case 0:
                            return rerenderer$browser$browser_$_state_machine__11981__auto____0.call(this);
                          case 1:
                            return rerenderer$browser$browser_$_state_machine__11981__auto____1.call(this, state_14323);
                        }
                        throw new Error("Invalid arity: " + arguments.length);
                      };
                      rerenderer$browser$browser_$_state_machine__11981__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$browser$browser_$_state_machine__11981__auto____0;
                      rerenderer$browser$browser_$_state_machine__11981__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$browser$browser_$_state_machine__11981__auto____1;
                      return rerenderer$browser$browser_$_state_machine__11981__auto__;
                    }();
                  }(switch__11980__auto__, c__12042__auto__, img, loaded_ch, ___$1, canvas_ctx, platform_id);
                }();
                var state__12044__auto__ = function() {
                  var statearr_14331 = f__12043__auto__.call(null);
                  statearr_14331[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12042__auto__;
                  return statearr_14331;
                }();
                return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12044__auto__);
              };
            }(c__12042__auto__, img, loaded_ch, ___$1, canvas_ctx, platform_id));
            return c__12042__auto__;
          };
        }(img, loaded_ch, ___$1, canvas_ctx, platform_id));
        var c__12042__auto__ = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__12042__auto__, img, loaded_ch, ___$1, canvas_ctx, platform_id) {
          return function() {
            var f__12043__auto__ = function() {
              var switch__11980__auto__ = function(c__12042__auto__, img, loaded_ch, ___$1, canvas_ctx, platform_id) {
                return function(state_14335) {
                  var state_val_14336 = state_14335[1];
                  if (state_val_14336 === 2) {
                    var inst_14333 = state_14335[2];
                    var state_14335__$1 = function() {
                      var statearr_14337 = state_14335;
                      statearr_14337[7] = inst_14333;
                      return statearr_14337;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14335__$1, img);
                  } else {
                    if (state_val_14336 === 1) {
                      var state_14335__$1 = state_14335;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14335__$1, 2, loaded_ch);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__12042__auto__, img, loaded_ch, ___$1, canvas_ctx, platform_id);
              return function(switch__11980__auto__, c__12042__auto__, img, loaded_ch, ___$1, canvas_ctx, platform_id) {
                return function() {
                  var rerenderer$browser$browser_$_state_machine__11981__auto__ = null;
                  var rerenderer$browser$browser_$_state_machine__11981__auto____0 = function() {
                    var statearr_14341 = [null, null, null, null, null, null, null, null];
                    statearr_14341[0] = rerenderer$browser$browser_$_state_machine__11981__auto__;
                    statearr_14341[1] = 1;
                    return statearr_14341;
                  };
                  var rerenderer$browser$browser_$_state_machine__11981__auto____1 = function(state_14335) {
                    while (true) {
                      var ret_value__11982__auto__ = function() {
                        try {
                          while (true) {
                            var result__11983__auto__ = switch__11980__auto__.call(null, state_14335);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__11983__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__11983__auto__;
                            }
                            break;
                          }
                        } catch (e14342) {
                          if (e14342 instanceof Object) {
                            var ex__11984__auto__ = e14342;
                            var statearr_14343_14390 = state_14335;
                            statearr_14343_14390[5] = ex__11984__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14335);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e14342;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__11982__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__14391 = state_14335;
                        state_14335 = G__14391;
                        continue;
                      } else {
                        return ret_value__11982__auto__;
                      }
                      break;
                    }
                  };
                  rerenderer$browser$browser_$_state_machine__11981__auto__ = function(state_14335) {
                    switch(arguments.length) {
                      case 0:
                        return rerenderer$browser$browser_$_state_machine__11981__auto____0.call(this);
                      case 1:
                        return rerenderer$browser$browser_$_state_machine__11981__auto____1.call(this, state_14335);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  rerenderer$browser$browser_$_state_machine__11981__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$browser$browser_$_state_machine__11981__auto____0;
                  rerenderer$browser$browser_$_state_machine__11981__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$browser$browser_$_state_machine__11981__auto____1;
                  return rerenderer$browser$browser_$_state_machine__11981__auto__;
                }();
              }(switch__11980__auto__, c__12042__auto__, img, loaded_ch, ___$1, canvas_ctx, platform_id);
            }();
            var state__12044__auto__ = function() {
              var statearr_14344 = f__12043__auto__.call(null);
              statearr_14344[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12042__auto__;
              return statearr_14344;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12044__auto__);
          };
        }(c__12042__auto__, img, loaded_ch, ___$1, canvas_ctx, platform_id));
        return c__12042__auto__;
      };
    }(canvas_ctx, platform_id);
    rerenderer.browser.t14281.prototype.rerenderer$core$IPlatform$sound$arity$2 = function(canvas_ctx, platform_id) {
      return function(_, src) {
        var self__ = this;
        var ___$1 = this;
        var c__12042__auto__ = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__12042__auto__, ___$1, canvas_ctx, platform_id) {
          return function() {
            var f__12043__auto__ = function() {
              var switch__11980__auto__ = function(c__12042__auto__, ___$1, canvas_ctx, platform_id) {
                return function(state_14347) {
                  var state_val_14348 = state_14347[1];
                  if (state_val_14348 === 1) {
                    var inst_14345 = new Audio(src);
                    var state_14347__$1 = state_14347;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14347__$1, inst_14345);
                  } else {
                    return null;
                  }
                };
              }(c__12042__auto__, ___$1, canvas_ctx, platform_id);
              return function(switch__11980__auto__, c__12042__auto__, ___$1, canvas_ctx, platform_id) {
                return function() {
                  var rerenderer$browser$browser_$_state_machine__11981__auto__ = null;
                  var rerenderer$browser$browser_$_state_machine__11981__auto____0 = function() {
                    var statearr_14352 = [null, null, null, null, null, null, null];
                    statearr_14352[0] = rerenderer$browser$browser_$_state_machine__11981__auto__;
                    statearr_14352[1] = 1;
                    return statearr_14352;
                  };
                  var rerenderer$browser$browser_$_state_machine__11981__auto____1 = function(state_14347) {
                    while (true) {
                      var ret_value__11982__auto__ = function() {
                        try {
                          while (true) {
                            var result__11983__auto__ = switch__11980__auto__.call(null, state_14347);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__11983__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__11983__auto__;
                            }
                            break;
                          }
                        } catch (e14353) {
                          if (e14353 instanceof Object) {
                            var ex__11984__auto__ = e14353;
                            var statearr_14354_14392 = state_14347;
                            statearr_14354_14392[5] = ex__11984__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14347);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e14353;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__11982__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__14393 = state_14347;
                        state_14347 = G__14393;
                        continue;
                      } else {
                        return ret_value__11982__auto__;
                      }
                      break;
                    }
                  };
                  rerenderer$browser$browser_$_state_machine__11981__auto__ = function(state_14347) {
                    switch(arguments.length) {
                      case 0:
                        return rerenderer$browser$browser_$_state_machine__11981__auto____0.call(this);
                      case 1:
                        return rerenderer$browser$browser_$_state_machine__11981__auto____1.call(this, state_14347);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  rerenderer$browser$browser_$_state_machine__11981__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$browser$browser_$_state_machine__11981__auto____0;
                  rerenderer$browser$browser_$_state_machine__11981__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$browser$browser_$_state_machine__11981__auto____1;
                  return rerenderer$browser$browser_$_state_machine__11981__auto__;
                }();
              }(switch__11980__auto__, c__12042__auto__, ___$1, canvas_ctx, platform_id);
            }();
            var state__12044__auto__ = function() {
              var statearr_14355 = f__12043__auto__.call(null);
              statearr_14355[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12042__auto__;
              return statearr_14355;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12044__auto__);
          };
        }(c__12042__auto__, ___$1, canvas_ctx, platform_id));
        return c__12042__auto__;
      };
    }(canvas_ctx, platform_id);
    rerenderer.browser.t14281.prototype.rerenderer$core$IPlatform$play_BANG_$arity$2 = function(canvas_ctx, platform_id) {
      return function(_, sound) {
        var self__ = this;
        var ___$1 = this;
        return sound.play();
      };
    }(canvas_ctx, platform_id);
    rerenderer.browser.t14281.prototype.cljs$core$IMeta$_meta$arity$1 = function(canvas_ctx, platform_id) {
      return function(_14283) {
        var self__ = this;
        var _14283__$1 = this;
        return self__.meta14282;
      };
    }(canvas_ctx, platform_id);
    rerenderer.browser.t14281.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(canvas_ctx, platform_id) {
      return function(_14283, meta14282__$1) {
        var self__ = this;
        var _14283__$1 = this;
        return new rerenderer.browser.t14281(self__.platform_id, self__.canvas_ctx, self__.canvas, self__.browser, meta14282__$1);
      };
    }(canvas_ctx, platform_id);
    rerenderer.browser.t14281.cljs$lang$type = true;
    rerenderer.browser.t14281.cljs$lang$ctorStr = "rerenderer.browser/t14281";
    rerenderer.browser.t14281.cljs$lang$ctorPrWriter = function(canvas_ctx, platform_id) {
      return function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
        return cljs.core._write.call(null, writer__4937__auto__, "rerenderer.browser/t14281");
      };
    }(canvas_ctx, platform_id);
    rerenderer.browser.__GT_t14281 = function(canvas_ctx, platform_id) {
      return function rerenderer$browser$browser_$___GT_t14281(platform_id__$1, canvas_ctx__$1, canvas__$1, browser__$1, meta14282) {
        return new rerenderer.browser.t14281(platform_id__$1, canvas_ctx__$1, canvas__$1, browser__$1, meta14282);
      };
    }(canvas_ctx, platform_id);
  }
  return new rerenderer.browser.t14281(platform_id, canvas_ctx, canvas, rerenderer$browser$browser, cljs.core.PersistentArrayMap.EMPTY);
};
goog.provide("rerenderer.examples.simple");
goog.require("cljs.core");
goog.require("rerenderer.browser");
goog.require("rerenderer.core");
goog.require("cljs.core.async");
rerenderer.examples.simple.root = function rerenderer$examples$simple$root(ctx, p__14886, p__14887) {
  var map__14890 = p__14886;
  var map__14890__$1 = cljs.core.seq_QMARK_.call(null, map__14890) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14890) : map__14890;
  var color = cljs.core.get.call(null, map__14890__$1, new cljs.core.Keyword(null, "color", "color", 1011675173));
  var map__14891 = p__14887;
  var map__14891__$1 = cljs.core.seq_QMARK_.call(null, map__14891) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14891) : map__14891;
  var colors = cljs.core.get.call(null, map__14891__$1, new cljs.core.Keyword(null, "colors", "colors", 1157174732));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-fillStyle"], null)], null), cljs.core.get.call(null, colors, color)], null));
  return cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["fillRect", 50, 50, 100, 100], null)], null)], null));
};
rerenderer.examples.simple.handle_clicks_BANG_ = function rerenderer$examples$simple$handle_clicks_BANG_(platform, state, p__14893) {
  var map__14919 = p__14893;
  var map__14919__$1 = cljs.core.seq_QMARK_.call(null, map__14919) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14919) : map__14919;
  var colors = cljs.core.get.call(null, map__14919__$1, new cljs.core.Keyword(null, "colors", "colors", 1157174732));
  var clicks = cljs.core.async.chan.call(null);
  rerenderer.core.listen_BANG_.call(null, platform, "click", clicks);
  var c__12042__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12042__auto__, clicks, map__14919, map__14919__$1, colors) {
    return function() {
      var f__12043__auto__ = function() {
        var switch__11980__auto__ = function(c__12042__auto__, clicks, map__14919, map__14919__$1, colors) {
          return function(state_14932) {
            var state_val_14933 = state_14932[1];
            if (state_val_14933 === 4) {
              var inst_14922 = state_14932[2];
              var inst_14923 = cljs.core.PersistentVector.EMPTY_NODE;
              var inst_14924 = [new cljs.core.Keyword(null, "color", "color", 1011675173)];
              var inst_14925 = new cljs.core.PersistentVector(null, 1, 5, inst_14923, inst_14924, null);
              var inst_14926 = function() {
                return function(inst_14922, inst_14923, inst_14924, inst_14925, state_val_14933, c__12042__auto__, clicks, map__14919, map__14919__$1, colors) {
                  return function(p1__14892_SHARP_) {
                    return cljs.core.mod.call(null, p1__14892_SHARP_ + 1, cljs.core.count.call(null, colors));
                  };
                }(inst_14922, inst_14923, inst_14924, inst_14925, state_val_14933, c__12042__auto__, clicks, map__14919, map__14919__$1, colors);
              }();
              var inst_14927 = cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, inst_14925, inst_14926);
              var state_14932__$1 = function() {
                var statearr_14934 = state_14932;
                statearr_14934[7] = inst_14922;
                statearr_14934[8] = inst_14927;
                return statearr_14934;
              }();
              var statearr_14935_14944 = state_14932__$1;
              statearr_14935_14944[2] = null;
              statearr_14935_14944[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14933 === 3) {
                var inst_14930 = state_14932[2];
                var state_14932__$1 = state_14932;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14932__$1, inst_14930);
              } else {
                if (state_val_14933 === 2) {
                  var state_14932__$1 = state_14932;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14932__$1, 4, clicks);
                } else {
                  if (state_val_14933 === 1) {
                    var state_14932__$1 = state_14932;
                    var statearr_14936_14945 = state_14932__$1;
                    statearr_14936_14945[2] = null;
                    statearr_14936_14945[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__12042__auto__, clicks, map__14919, map__14919__$1, colors);
        return function(switch__11980__auto__, c__12042__auto__, clicks, map__14919, map__14919__$1, colors) {
          return function() {
            var rerenderer$examples$simple$handle_clicks_BANG__$_state_machine__11981__auto__ = null;
            var rerenderer$examples$simple$handle_clicks_BANG__$_state_machine__11981__auto____0 = function() {
              var statearr_14940 = [null, null, null, null, null, null, null, null, null];
              statearr_14940[0] = rerenderer$examples$simple$handle_clicks_BANG__$_state_machine__11981__auto__;
              statearr_14940[1] = 1;
              return statearr_14940;
            };
            var rerenderer$examples$simple$handle_clicks_BANG__$_state_machine__11981__auto____1 = function(state_14932) {
              while (true) {
                var ret_value__11982__auto__ = function() {
                  try {
                    while (true) {
                      var result__11983__auto__ = switch__11980__auto__.call(null, state_14932);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__11983__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__11983__auto__;
                      }
                      break;
                    }
                  } catch (e14941) {
                    if (e14941 instanceof Object) {
                      var ex__11984__auto__ = e14941;
                      var statearr_14942_14946 = state_14932;
                      statearr_14942_14946[5] = ex__11984__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14932);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14941;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__11982__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14947 = state_14932;
                  state_14932 = G__14947;
                  continue;
                } else {
                  return ret_value__11982__auto__;
                }
                break;
              }
            };
            rerenderer$examples$simple$handle_clicks_BANG__$_state_machine__11981__auto__ = function(state_14932) {
              switch(arguments.length) {
                case 0:
                  return rerenderer$examples$simple$handle_clicks_BANG__$_state_machine__11981__auto____0.call(this);
                case 1:
                  return rerenderer$examples$simple$handle_clicks_BANG__$_state_machine__11981__auto____1.call(this, state_14932);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            rerenderer$examples$simple$handle_clicks_BANG__$_state_machine__11981__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$examples$simple$handle_clicks_BANG__$_state_machine__11981__auto____0;
            rerenderer$examples$simple$handle_clicks_BANG__$_state_machine__11981__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$examples$simple$handle_clicks_BANG__$_state_machine__11981__auto____1;
            return rerenderer$examples$simple$handle_clicks_BANG__$_state_machine__11981__auto__;
          }();
        }(switch__11980__auto__, c__12042__auto__, clicks, map__14919, map__14919__$1, colors);
      }();
      var state__12044__auto__ = function() {
        var statearr_14943 = f__12043__auto__.call(null);
        statearr_14943[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12042__auto__;
        return statearr_14943;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12044__auto__);
    };
  }(c__12042__auto__, clicks, map__14919, map__14919__$1, colors));
  return c__12042__auto__;
};
rerenderer.examples.simple.init_BANG_ = function rerenderer$examples$simple$init_BANG_(canvas) {
  var platform = rerenderer.browser.browser.call(null, canvas);
  var state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "color", "color", 1011675173), 0], null));
  var options = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colors", "colors", 1157174732), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["red", "green", "blue"], null)], null);
  rerenderer.core.init_BANG_.call(null, platform, rerenderer.examples.simple.root, state, options);
  return rerenderer.examples.simple.handle_clicks_BANG_.call(null, platform, state, options);
};
goog.provide("rerenderer.android");
goog.require("cljs.core");
goog.require("rerenderer.core");
goog.require("clojure.string");
goog.require("cljs.core.match");
rerenderer.android.send_BANG_ = function rerenderer$android$send_BANG_(proxy, calls) {
  return proxy.send(JSON.stringify(cljs.core.clj__GT_js.call(null, calls)));
};
rerenderer.android.prepare_call = function rerenderer$android$prepare_call(p__14396) {
  var vec__14401 = p__14396;
  var vec__14402 = cljs.core.nth.call(null, vec__14401, 0, null);
  var vec__14403 = cljs.core.nth.call(null, vec__14402, 0, null);
  var who = cljs.core.nth.call(null, vec__14403, 0, null);
  var vec__14404 = cljs.core.nth.call(null, vec__14402, 1, null);
  var method = cljs.core.nth.call(null, vec__14404, 0, null);
  var args = cljs.core.nthnext.call(null, vec__14404, 1);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.replace_first.call(null, who, "-", ""), method, args], null);
};
rerenderer.android.android = function rerenderer$android$android(proxy) {
  var platform_id = [cljs.core.str(cljs.core.gensym.call(null))].join("");
  proxy.platformId = platform_id;
  if (typeof rerenderer.android.t14416 !== "undefined") {
  } else {
    rerenderer.android.t14416 = function(platform_id, proxy, android, meta14417) {
      this.platform_id = platform_id;
      this.proxy = proxy;
      this.android = android;
      this.meta14417 = meta14417;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    rerenderer.android.t14416.prototype.rerenderer$core$IPlatform$ = true;
    rerenderer.android.t14416.prototype.rerenderer$core$IPlatform$render_BANG_$arity$2 = function(platform_id) {
      return function(_, ctx) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core._EQ_.call(null, self__.platform_id, self__.proxy.platformId)) {
          return rerenderer.android.send_BANG_.call(null, self__.proxy, function() {
            var iter__5111__auto__ = function(___$1, platform_id) {
              return function rerenderer$android$android_$_iter__14419(s__14420) {
                return new cljs.core.LazySeq(null, function(___$1, platform_id) {
                  return function() {
                    var s__14420__$1 = s__14420;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__14420__$1);
                      if (temp__4126__auto__) {
                        var s__14420__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__14420__$2)) {
                          var c__5109__auto__ = cljs.core.chunk_first.call(null, s__14420__$2);
                          var size__5110__auto__ = cljs.core.count.call(null, c__5109__auto__);
                          var b__14422 = cljs.core.chunk_buffer.call(null, size__5110__auto__);
                          if (function() {
                            var i__14421 = 0;
                            while (true) {
                              if (i__14421 < size__5110__auto__) {
                                var vec__14425 = cljs.core._nth.call(null, c__5109__auto__, i__14421);
                                var action = cljs.core.nth.call(null, vec__14425, 0, null);
                                var params = cljs.core.nthnext.call(null, vec__14425, 1);
                                if (cljs.core._EQ_.call(null, action, new cljs.core.Keyword(null, "call", "call", -519999866))) {
                                  cljs.core.chunk_append.call(null, b__14422, rerenderer.android.prepare_call.call(null, params));
                                  var G__14427 = i__14421 + 1;
                                  i__14421 = G__14427;
                                  continue;
                                } else {
                                  var G__14428 = i__14421 + 1;
                                  i__14421 = G__14428;
                                  continue;
                                }
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14422), rerenderer$android$android_$_iter__14419.call(null, cljs.core.chunk_rest.call(null, s__14420__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14422), null);
                          }
                        } else {
                          var vec__14426 = cljs.core.first.call(null, s__14420__$2);
                          var action = cljs.core.nth.call(null, vec__14426, 0, null);
                          var params = cljs.core.nthnext.call(null, vec__14426, 1);
                          if (cljs.core._EQ_.call(null, action, new cljs.core.Keyword(null, "call", "call", -519999866))) {
                            return cljs.core.cons.call(null, rerenderer.android.prepare_call.call(null, params), rerenderer$android$android_$_iter__14419.call(null, cljs.core.rest.call(null, s__14420__$2)));
                          } else {
                            var G__14429 = cljs.core.rest.call(null, s__14420__$2);
                            s__14420__$1 = G__14429;
                            continue;
                          }
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(___$1, platform_id), null, null);
              };
            }(___$1, platform_id);
            return iter__5111__auto__.call(null, ctx);
          }());
        } else {
          return null;
        }
      };
    }(platform_id);
    rerenderer.android.t14416.prototype.cljs$core$IMeta$_meta$arity$1 = function(platform_id) {
      return function(_14418) {
        var self__ = this;
        var _14418__$1 = this;
        return self__.meta14417;
      };
    }(platform_id);
    rerenderer.android.t14416.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(platform_id) {
      return function(_14418, meta14417__$1) {
        var self__ = this;
        var _14418__$1 = this;
        return new rerenderer.android.t14416(self__.platform_id, self__.proxy, self__.android, meta14417__$1);
      };
    }(platform_id);
    rerenderer.android.t14416.cljs$lang$type = true;
    rerenderer.android.t14416.cljs$lang$ctorStr = "rerenderer.android/t14416";
    rerenderer.android.t14416.cljs$lang$ctorPrWriter = function(platform_id) {
      return function(this__4936__auto__, writer__4937__auto__, opt__4938__auto__) {
        return cljs.core._write.call(null, writer__4937__auto__, "rerenderer.android/t14416");
      };
    }(platform_id);
    rerenderer.android.__GT_t14416 = function(platform_id) {
      return function rerenderer$android$android_$___GT_t14416(platform_id__$1, proxy__$1, android__$1, meta14417) {
        return new rerenderer.android.t14416(platform_id__$1, proxy__$1, android__$1, meta14417);
      };
    }(platform_id);
  }
  return new rerenderer.android.t14416(platform_id, proxy, rerenderer$android$android, cljs.core.PersistentArrayMap.EMPTY);
};
goog.provide("rerenderer.examples.bird");
goog.require("cljs.core");
goog.require("rerenderer.browser");
goog.require("rerenderer.core");
goog.require("cljs.core.match");
goog.require("cljs.core.async");
rerenderer.examples.bird.bird_start_x = 50;
rerenderer.examples.bird.bariers_start = 200;
rerenderer.examples.bird.bariers_screens = 2;
rerenderer.examples.bird.barier_min_w = 30;
rerenderer.examples.bird.barier_max_w = 60;
rerenderer.examples.bird.barier_min_h = 50;
rerenderer.examples.bird.barier_max_h = 350;
rerenderer.examples.bird.barier_min_offset = 50;
rerenderer.examples.bird.barier_max_offset = 250;
rerenderer.examples.bird.tick = 10;
rerenderer.examples.bird.jump_high = 200;
rerenderer.examples.bird.fly_down_high = 5;
rerenderer.examples.bird.draw_background = function rerenderer$examples$bird$draw_background(ctx, atlas, w, h, bird_x) {
  var dw = h / 512 * 286;
  var offset = 0 - cljs.core.mod.call(null, bird_x / 2, dw);
  var seq__14356 = cljs.core.seq.call(null, cljs.core.range.call(null, offset, w, dw));
  var chunk__14357 = null;
  var count__14358 = 0;
  var i__14359 = 0;
  while (true) {
    if (i__14359 < count__14358) {
      var x = cljs.core._nth.call(null, chunk__14357, i__14359);
      cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["drawImage", atlas, 0, 0, 286, 512, x, 0, dw, h], null)], null)], null));
      var G__14360 = seq__14356;
      var G__14361 = chunk__14357;
      var G__14362 = count__14358;
      var G__14363 = i__14359 + 1;
      seq__14356 = G__14360;
      chunk__14357 = G__14361;
      count__14358 = G__14362;
      i__14359 = G__14363;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__14356);
      if (temp__4126__auto__) {
        var seq__14356__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__14356__$1)) {
          var c__5118__auto__ = cljs.core.chunk_first.call(null, seq__14356__$1);
          var G__14364 = cljs.core.chunk_rest.call(null, seq__14356__$1);
          var G__14365 = c__5118__auto__;
          var G__14366 = cljs.core.count.call(null, c__5118__auto__);
          var G__14367 = 0;
          seq__14356 = G__14364;
          chunk__14357 = G__14365;
          count__14358 = G__14366;
          i__14359 = G__14367;
          continue;
        } else {
          var x = cljs.core.first.call(null, seq__14356__$1);
          cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["drawImage", atlas, 0, 0, 286, 512, x, 0, dw, h], null)], null)], null));
          var G__14368 = cljs.core.next.call(null, seq__14356__$1);
          var G__14369 = null;
          var G__14370 = 0;
          var G__14371 = 0;
          seq__14356 = G__14368;
          chunk__14357 = G__14369;
          count__14358 = G__14370;
          i__14359 = G__14371;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
rerenderer.examples.bird.is_visible_QMARK_ = function rerenderer$examples$bird$is_visible_QMARK_(view_start, view_end, p__14372) {
  var map__14374 = p__14372;
  var map__14374__$1 = cljs.core.seq_QMARK_.call(null, map__14374) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14374) : map__14374;
  var w = cljs.core.get.call(null, map__14374__$1, new cljs.core.Keyword(null, "w", "w", 354169001));
  var x = cljs.core.get.call(null, map__14374__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
  return view_start <= x + w && view_end >= x;
};
rerenderer.examples.bird.get_barier_sprite_x = function rerenderer$examples$bird$get_barier_sprite_x(pos, color) {
  try {
    if (cljs.core.keyword_identical_QMARK_.call(null, pos, new cljs.core.Keyword(null, "down", "down", 1565245570))) {
      try {
        if (cljs.core.keyword_identical_QMARK_.call(null, color, new cljs.core.Keyword(null, "red", "red", -969428204))) {
          return 56;
        } else {
          throw cljs.core.match.backtrack;
        }
      } catch (e14394) {
        if (e14394 instanceof Error) {
          var e__13353__auto__ = e14394;
          if (e__13353__auto__ === cljs.core.match.backtrack) {
            throw cljs.core.match.backtrack;
          } else {
            throw e__13353__auto__;
          }
        } else {
          throw e14394;
        }
      }
    } else {
      throw cljs.core.match.backtrack;
    }
  } catch (e14387) {
    if (e14387 instanceof Error) {
      var e__13353__auto__ = e14387;
      if (e__13353__auto__ === cljs.core.match.backtrack) {
        try {
          if (cljs.core.keyword_identical_QMARK_.call(null, pos, new cljs.core.Keyword(null, "up", "up", -269712113))) {
            try {
              if (cljs.core.keyword_identical_QMARK_.call(null, color, new cljs.core.Keyword(null, "red", "red", -969428204))) {
                return 0;
              } else {
                throw cljs.core.match.backtrack;
              }
            } catch (e14393) {
              if (e14393 instanceof Error) {
                var e__13353__auto____$1 = e14393;
                if (e__13353__auto____$1 === cljs.core.match.backtrack) {
                  throw cljs.core.match.backtrack;
                } else {
                  throw e__13353__auto____$1;
                }
              } else {
                throw e14393;
              }
            }
          } else {
            throw cljs.core.match.backtrack;
          }
        } catch (e14388) {
          if (e14388 instanceof Error) {
            var e__13353__auto____$1 = e14388;
            if (e__13353__auto____$1 === cljs.core.match.backtrack) {
              try {
                if (cljs.core.keyword_identical_QMARK_.call(null, pos, new cljs.core.Keyword(null, "down", "down", 1565245570))) {
                  try {
                    if (cljs.core.keyword_identical_QMARK_.call(null, color, new cljs.core.Keyword(null, "green", "green", -945526839))) {
                      return 168;
                    } else {
                      throw cljs.core.match.backtrack;
                    }
                  } catch (e14392) {
                    if (e14392 instanceof Error) {
                      var e__13353__auto____$2 = e14392;
                      if (e__13353__auto____$2 === cljs.core.match.backtrack) {
                        throw cljs.core.match.backtrack;
                      } else {
                        throw e__13353__auto____$2;
                      }
                    } else {
                      throw e14392;
                    }
                  }
                } else {
                  throw cljs.core.match.backtrack;
                }
              } catch (e14389) {
                if (e14389 instanceof Error) {
                  var e__13353__auto____$2 = e14389;
                  if (e__13353__auto____$2 === cljs.core.match.backtrack) {
                    try {
                      if (cljs.core.keyword_identical_QMARK_.call(null, pos, new cljs.core.Keyword(null, "up", "up", -269712113))) {
                        try {
                          if (cljs.core.keyword_identical_QMARK_.call(null, color, new cljs.core.Keyword(null, "green", "green", -945526839))) {
                            return 112;
                          } else {
                            throw cljs.core.match.backtrack;
                          }
                        } catch (e14391) {
                          if (e14391 instanceof Error) {
                            var e__13353__auto____$3 = e14391;
                            if (e__13353__auto____$3 === cljs.core.match.backtrack) {
                              throw cljs.core.match.backtrack;
                            } else {
                              throw e__13353__auto____$3;
                            }
                          } else {
                            throw e14391;
                          }
                        }
                      } else {
                        throw cljs.core.match.backtrack;
                      }
                    } catch (e14390) {
                      if (e14390 instanceof Error) {
                        var e__13353__auto____$3 = e14390;
                        if (e__13353__auto____$3 === cljs.core.match.backtrack) {
                          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(pos), cljs.core.str(" "), cljs.core.str(color)].join(""));
                        } else {
                          throw e__13353__auto____$3;
                        }
                      } else {
                        throw e14390;
                      }
                    }
                  } else {
                    throw e__13353__auto____$2;
                  }
                } else {
                  throw e14389;
                }
              }
            } else {
              throw e__13353__auto____$1;
            }
          } else {
            throw e14388;
          }
        }
      } else {
        throw e__13353__auto__;
      }
    } else {
      throw e14387;
    }
  }
};
rerenderer.examples.bird.draw_barier = function rerenderer$examples$bird$draw_barier(ctx, atlas, view_start, view_h, p__14395) {
  var map__14397 = p__14395;
  var map__14397__$1 = cljs.core.seq_QMARK_.call(null, map__14397) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14397) : map__14397;
  var color = cljs.core.get.call(null, map__14397__$1, new cljs.core.Keyword(null, "color", "color", 1011675173));
  var h = cljs.core.get.call(null, map__14397__$1, new cljs.core.Keyword(null, "h", "h", 1109658740));
  var w = cljs.core.get.call(null, map__14397__$1, new cljs.core.Keyword(null, "w", "w", 354169001));
  var pos = cljs.core.get.call(null, map__14397__$1, new cljs.core.Keyword(null, "pos", "pos", -864607220));
  var x = cljs.core.get.call(null, map__14397__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-fillStyle"], null)], null), color], null));
  var sx = rerenderer.examples.bird.get_barier_sprite_x.call(null, pos, color);
  var dx = x - view_start;
  var dy = cljs.core._EQ_.call(null, pos, new cljs.core.Keyword(null, "up", "up", -269712113)) ? 0 : view_h - h;
  return cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["drawImage", atlas, sx, 645, 52, 320, dx, dy, w, h], null)], null)], null));
};
rerenderer.examples.bird.draw_terrain = function rerenderer$examples$bird$draw_terrain(ctx, atlas, terrain, view_start, view_end, view_h) {
  var seq__14404 = cljs.core.seq.call(null, terrain);
  var chunk__14406 = null;
  var count__14407 = 0;
  var i__14408 = 0;
  while (true) {
    if (i__14408 < count__14407) {
      var barier = cljs.core._nth.call(null, chunk__14406, i__14408);
      if (cljs.core.truth_(rerenderer.examples.bird.is_visible_QMARK_.call(null, view_start, view_end, barier))) {
        rerenderer.examples.bird.draw_barier.call(null, ctx, atlas, view_start, view_h, barier);
        var G__14410 = seq__14404;
        var G__14411 = chunk__14406;
        var G__14412 = count__14407;
        var G__14413 = i__14408 + 1;
        seq__14404 = G__14410;
        chunk__14406 = G__14411;
        count__14407 = G__14412;
        i__14408 = G__14413;
        continue;
      } else {
        var G__14414 = seq__14404;
        var G__14415 = chunk__14406;
        var G__14416 = count__14407;
        var G__14417 = i__14408 + 1;
        seq__14404 = G__14414;
        chunk__14406 = G__14415;
        count__14407 = G__14416;
        i__14408 = G__14417;
        continue;
      }
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__14404);
      if (temp__4126__auto__) {
        var seq__14404__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__14404__$1)) {
          var c__5118__auto__ = cljs.core.chunk_first.call(null, seq__14404__$1);
          var G__14418 = cljs.core.chunk_rest.call(null, seq__14404__$1);
          var G__14419 = c__5118__auto__;
          var G__14420 = cljs.core.count.call(null, c__5118__auto__);
          var G__14421 = 0;
          seq__14404 = G__14418;
          chunk__14406 = G__14419;
          count__14407 = G__14420;
          i__14408 = G__14421;
          continue;
        } else {
          var barier = cljs.core.first.call(null, seq__14404__$1);
          if (cljs.core.truth_(rerenderer.examples.bird.is_visible_QMARK_.call(null, view_start, view_end, barier))) {
            rerenderer.examples.bird.draw_barier.call(null, ctx, atlas, view_start, view_h, barier);
            var G__14422 = cljs.core.next.call(null, seq__14404__$1);
            var G__14423 = null;
            var G__14424 = 0;
            var G__14425 = 0;
            seq__14404 = G__14422;
            chunk__14406 = G__14423;
            count__14407 = G__14424;
            i__14408 = G__14425;
            continue;
          } else {
            var G__14426 = cljs.core.next.call(null, seq__14404__$1);
            var G__14427 = null;
            var G__14428 = 0;
            var G__14429 = 0;
            seq__14404 = G__14426;
            chunk__14406 = G__14427;
            count__14407 = G__14428;
            i__14408 = G__14429;
            continue;
          }
        }
      } else {
        return null;
      }
    }
    break;
  }
};
rerenderer.examples.bird.draw_bird = function rerenderer$examples$bird$draw_bird(ctx, atlas, y) {
  return cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["drawImage", atlas, 4, 980, 36, 36, rerenderer.examples.bird.bird_start_x - 18, y - 18, 36, 36], null)], null)], null));
};
rerenderer.examples.bird.draw_score = function rerenderer$examples$bird$draw_score(ctx, score, w) {
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-fillStyle"], null)], null), "red"], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-font"], null)], null), "32px monospace"], null));
  var text = [cljs.core.str("SCORE: "), cljs.core.str(score)].join("");
  var offset = 20 * cljs.core.count.call(null, text);
  return cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["fillText", text, w - offset, 30], null)], null)], null));
};
rerenderer.examples.bird.draw_click_to_start = function rerenderer$examples$bird$draw_click_to_start(ctx, w, h) {
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-font"], null)], null), "48px mononspace"], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-fillStyle"], null)], null), "rgba(0,0,0,0.5)"], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["fillRect", 150, 200, 500, 120], null)], null)], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-fillStyle"], null)], null), "white"], null));
  return cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["fillText", "CLICK TO START!", w / 2 - 200, h / 2 + 20], null)], null)], null));
};
rerenderer.examples.bird.flappy_bird_root = function rerenderer$examples$bird$flappy_bird_root(ctx, p__14430, p__14431) {
  var map__14434 = p__14430;
  var map__14434__$1 = cljs.core.seq_QMARK_.call(null, map__14434) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14434) : map__14434;
  var started = cljs.core.get.call(null, map__14434__$1, new cljs.core.Keyword(null, "started", "started", 585705024));
  var score = cljs.core.get.call(null, map__14434__$1, new cljs.core.Keyword(null, "score", "score", -1963588780));
  var bird_x = cljs.core.get.call(null, map__14434__$1, new cljs.core.Keyword(null, "bird-x", "bird-x", -752294537));
  var bird_y = cljs.core.get.call(null, map__14434__$1, new cljs.core.Keyword(null, "bird-y", "bird-y", 31948262));
  var terrain = cljs.core.get.call(null, map__14434__$1, new cljs.core.Keyword(null, "terrain", "terrain", 704966005));
  var map__14435 = p__14431;
  var map__14435__$1 = cljs.core.seq_QMARK_.call(null, map__14435) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14435) : map__14435;
  var h = cljs.core.get.call(null, map__14435__$1, new cljs.core.Keyword(null, "h", "h", 1109658740));
  var w = cljs.core.get.call(null, map__14435__$1, new cljs.core.Keyword(null, "w", "w", 354169001));
  var atlas = cljs.core.get.call(null, map__14435__$1, new cljs.core.Keyword(null, "atlas", "atlas", 1594808522));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["clearRect", 0, 0, w, h], null)], null)], null));
  rerenderer.examples.bird.draw_background.call(null, ctx, atlas, w, h, bird_x);
  var view_start_14436 = bird_x - rerenderer.examples.bird.bird_start_x;
  rerenderer.examples.bird.draw_terrain.call(null, ctx, atlas, terrain, view_start_14436, w + view_start_14436, h);
  rerenderer.examples.bird.draw_bird.call(null, ctx, atlas, h - bird_y);
  rerenderer.examples.bird.draw_score.call(null, ctx, score, w);
  if (cljs.core.truth_(started)) {
    return null;
  } else {
    return rerenderer.examples.bird.draw_click_to_start.call(null, ctx, w, h);
  }
};
rerenderer.examples.bird.rand_from_range = function rerenderer$examples$bird$rand_from_range(from, to) {
  return from + cljs.core.rand_int.call(null, to - from);
};
rerenderer.examples.bird.generate_terrain = function rerenderer$examples$bird$generate_terrain(from, to) {
  var x = from;
  var result = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (x < to) {
      var pos = cljs.core.rand_nth.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up", "up", -269712113), new cljs.core.Keyword(null, "down", "down", 1565245570)], null));
      var color = cljs.core.rand_nth.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "red", "red", -969428204), new cljs.core.Keyword(null, "green", "green", -945526839)], null));
      var w = rerenderer.examples.bird.rand_from_range.call(null, rerenderer.examples.bird.barier_min_w, rerenderer.examples.bird.barier_max_w);
      var h = rerenderer.examples.bird.rand_from_range.call(null, rerenderer.examples.bird.barier_min_h, rerenderer.examples.bird.barier_max_h);
      var next = x + w + rerenderer.examples.bird.rand_from_range.call(null, rerenderer.examples.bird.barier_min_offset, rerenderer.examples.bird.barier_max_offset);
      var G__14437 = next;
      var G__14438 = cljs.core.conj.call(null, result, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), w, new cljs.core.Keyword(null, "h", "h", 1109658740), h, new cljs.core.Keyword(null, "color", "color", 1011675173), color, new cljs.core.Keyword(null, "pos", "pos", -864607220), pos, new cljs.core.Keyword(null, "x", "x", 2099068185), x], null));
      x = G__14437;
      result = G__14438;
      continue;
    } else {
      return result;
    }
    break;
  }
};
rerenderer.examples.bird.reset_state_BANG_ = function rerenderer$examples$bird$reset_state_BANG_(state, p__14439) {
  var map__14442 = p__14439;
  var map__14442__$1 = cljs.core.seq_QMARK_.call(null, map__14442) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14442) : map__14442;
  var w = cljs.core.get.call(null, map__14442__$1, new cljs.core.Keyword(null, "w", "w", 354169001));
  var map__14443 = cljs.core.deref.call(null, state);
  var map__14443__$1 = cljs.core.seq_QMARK_.call(null, map__14443) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14443) : map__14443;
  var initial = cljs.core.get.call(null, map__14443__$1, new cljs.core.Keyword(null, "initial", "initial", 1854648214));
  cljs.core.reset_BANG_.call(null, state, initial);
  return cljs.core.swap_BANG_.call(null, state, cljs.core.assoc, new cljs.core.Keyword(null, "initial", "initial", 1854648214), initial, new cljs.core.Keyword(null, "terrain", "terrain", 704966005), rerenderer.examples.bird.generate_terrain.call(null, rerenderer.examples.bird.bariers_start, w * rerenderer.examples.bird.bariers_screens));
};
rerenderer.examples.bird.jump = function rerenderer$examples$bird$jump(platform, state, p__14445) {
  var map__14447 = p__14445;
  var map__14447__$1 = cljs.core.seq_QMARK_.call(null, map__14447) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14447) : map__14447;
  var sounds = cljs.core.get.call(null, map__14447__$1, new cljs.core.Keyword(null, "sounds", "sounds", 1244211385));
  var h = cljs.core.get.call(null, map__14447__$1, new cljs.core.Keyword(null, "h", "h", 1109658740));
  cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "bird-y", "bird-y", 31948262)], null), function(map__14447, map__14447__$1, sounds, h) {
    return function(p1__14444_SHARP_) {
      if (h > p1__14444_SHARP_) {
        return rerenderer.examples.bird.jump_high + p1__14444_SHARP_;
      } else {
        return p1__14444_SHARP_;
      }
    };
  }(map__14447, map__14447__$1, sounds, h));
  return rerenderer.core.play_BANG_.call(null, platform, (new cljs.core.Keyword(null, "jump", "jump", -971319427)).cljs$core$IFn$_invoke$arity$1(sounds));
};
rerenderer.examples.bird.handle_clicks_BANG_ = function rerenderer$examples$bird$handle_clicks_BANG_(platform, state, options) {
  var clicks = cljs.core.async.chan.call(null);
  rerenderer.core.listen_BANG_.call(null, platform, "click", clicks);
  rerenderer.core.listen_BANG_.call(null, platform, "keydown", clicks);
  var c__7641__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7641__auto__, clicks) {
    return function() {
      var f__7642__auto__ = function() {
        var switch__7579__auto__ = function(c__7641__auto__, clicks) {
          return function(state_14527) {
            var state_val_14528 = state_14527[1];
            if (state_val_14528 === 7) {
              var inst_14522 = state_14527[2];
              var state_14527__$1 = function() {
                var statearr_14529 = state_14527;
                statearr_14529[7] = inst_14522;
                return statearr_14529;
              }();
              var statearr_14530_14552 = state_14527__$1;
              statearr_14530_14552[2] = null;
              statearr_14530_14552[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14528 === 1) {
                var state_14527__$1 = state_14527;
                var statearr_14531_14553 = state_14527__$1;
                statearr_14531_14553[2] = null;
                statearr_14531_14553[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14528 === 4) {
                  var inst_14502 = state_14527[2];
                  var inst_14503 = cljs.core.deref.call(null, state);
                  var inst_14504 = (new cljs.core.Keyword(null, "finished", "finished", -1018867731)).cljs$core$IFn$_invoke$arity$1(inst_14503);
                  var state_14527__$1 = function() {
                    var statearr_14532 = state_14527;
                    statearr_14532[8] = inst_14502;
                    return statearr_14532;
                  }();
                  if (cljs.core.truth_(inst_14504)) {
                    var statearr_14533_14554 = state_14527__$1;
                    statearr_14533_14554[1] = 5;
                  } else {
                    var statearr_14534_14555 = state_14527__$1;
                    statearr_14534_14555[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14528 === 13) {
                    var inst_14518 = state_14527[2];
                    var state_14527__$1 = state_14527;
                    var statearr_14535_14556 = state_14527__$1;
                    statearr_14535_14556[2] = inst_14518;
                    statearr_14535_14556[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14528 === 6) {
                      var inst_14508 = cljs.core.deref.call(null, state);
                      var inst_14509 = (new cljs.core.Keyword(null, "started", "started", 585705024)).cljs$core$IFn$_invoke$arity$1(inst_14508);
                      var inst_14510 = cljs.core.not.call(null, inst_14509);
                      var state_14527__$1 = state_14527;
                      if (inst_14510) {
                        var statearr_14536_14557 = state_14527__$1;
                        statearr_14536_14557[1] = 8;
                      } else {
                        var statearr_14537_14558 = state_14527__$1;
                        statearr_14537_14558[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14528 === 3) {
                        var inst_14525 = state_14527[2];
                        var state_14527__$1 = state_14527;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14527__$1, inst_14525);
                      } else {
                        if (state_val_14528 === 12) {
                          var state_14527__$1 = state_14527;
                          var statearr_14538_14559 = state_14527__$1;
                          statearr_14538_14559[2] = null;
                          statearr_14538_14559[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14528 === 2) {
                            var state_14527__$1 = state_14527;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14527__$1, 4, clicks);
                          } else {
                            if (state_val_14528 === 11) {
                              var inst_14515 = rerenderer.examples.bird.jump.call(null, platform, state, options);
                              var state_14527__$1 = state_14527;
                              var statearr_14539_14560 = state_14527__$1;
                              statearr_14539_14560[2] = inst_14515;
                              statearr_14539_14560[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14528 === 9) {
                                var state_14527__$1 = state_14527;
                                var statearr_14540_14561 = state_14527__$1;
                                statearr_14540_14561[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14528 === 5) {
                                  var inst_14506 = rerenderer.examples.bird.reset_state_BANG_.call(null, state, options);
                                  var state_14527__$1 = state_14527;
                                  var statearr_14542_14562 = state_14527__$1;
                                  statearr_14542_14562[2] = inst_14506;
                                  statearr_14542_14562[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14528 === 10) {
                                    var inst_14520 = state_14527[2];
                                    var state_14527__$1 = state_14527;
                                    var statearr_14543_14563 = state_14527__$1;
                                    statearr_14543_14563[2] = inst_14520;
                                    statearr_14543_14563[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14528 === 8) {
                                      var inst_14512 = cljs.core.swap_BANG_.call(null, state, cljs.core.assoc, new cljs.core.Keyword(null, "started", "started", 585705024), true);
                                      var state_14527__$1 = state_14527;
                                      var statearr_14544_14564 = state_14527__$1;
                                      statearr_14544_14564[2] = inst_14512;
                                      statearr_14544_14564[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7641__auto__, clicks);
        return function(switch__7579__auto__, c__7641__auto__, clicks) {
          return function() {
            var rerenderer$examples$bird$handle_clicks_BANG__$_state_machine__7580__auto__ = null;
            var rerenderer$examples$bird$handle_clicks_BANG__$_state_machine__7580__auto____0 = function() {
              var statearr_14548 = [null, null, null, null, null, null, null, null, null];
              statearr_14548[0] = rerenderer$examples$bird$handle_clicks_BANG__$_state_machine__7580__auto__;
              statearr_14548[1] = 1;
              return statearr_14548;
            };
            var rerenderer$examples$bird$handle_clicks_BANG__$_state_machine__7580__auto____1 = function(state_14527) {
              while (true) {
                var ret_value__7581__auto__ = function() {
                  try {
                    while (true) {
                      var result__7582__auto__ = switch__7579__auto__.call(null, state_14527);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7582__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7582__auto__;
                      }
                      break;
                    }
                  } catch (e14549) {
                    if (e14549 instanceof Object) {
                      var ex__7583__auto__ = e14549;
                      var statearr_14550_14565 = state_14527;
                      statearr_14550_14565[5] = ex__7583__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14527);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14549;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7581__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14566 = state_14527;
                  state_14527 = G__14566;
                  continue;
                } else {
                  return ret_value__7581__auto__;
                }
                break;
              }
            };
            rerenderer$examples$bird$handle_clicks_BANG__$_state_machine__7580__auto__ = function(state_14527) {
              switch(arguments.length) {
                case 0:
                  return rerenderer$examples$bird$handle_clicks_BANG__$_state_machine__7580__auto____0.call(this);
                case 1:
                  return rerenderer$examples$bird$handle_clicks_BANG__$_state_machine__7580__auto____1.call(this, state_14527);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            rerenderer$examples$bird$handle_clicks_BANG__$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$examples$bird$handle_clicks_BANG__$_state_machine__7580__auto____0;
            rerenderer$examples$bird$handle_clicks_BANG__$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$examples$bird$handle_clicks_BANG__$_state_machine__7580__auto____1;
            return rerenderer$examples$bird$handle_clicks_BANG__$_state_machine__7580__auto__;
          }();
        }(switch__7579__auto__, c__7641__auto__, clicks);
      }();
      var state__7643__auto__ = function() {
        var statearr_14551 = f__7642__auto__.call(null);
        statearr_14551[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7641__auto__;
        return statearr_14551;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7643__auto__);
    };
  }(c__7641__auto__, clicks));
  return c__7641__auto__;
};
rerenderer.examples.bird.renew_terrain = function rerenderer$examples$bird$renew_terrain(terrain, w, bird_x) {
  if (cljs.core.mod.call(null, bird_x, w) === 0) {
    return cljs.core.concat.call(null, rerenderer.examples.bird.generate_terrain.call(null, w + bird_x, w + w + bird_x), cljs.core.remove.call(null, function(p1__14567_SHARP_) {
      return(new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(p1__14567_SHARP_) - bird_x < 0 - rerenderer.examples.bird.bird_start_x;
    }, terrain));
  } else {
    return terrain;
  }
};
rerenderer.examples.bird.has_cord_QMARK_ = function rerenderer$examples$bird$has_cord_QMARK_(cx, cy, scene_h, p__14568) {
  var map__14570 = p__14568;
  var map__14570__$1 = cljs.core.seq_QMARK_.call(null, map__14570) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14570) : map__14570;
  var pos = cljs.core.get.call(null, map__14570__$1, new cljs.core.Keyword(null, "pos", "pos", -864607220));
  var h = cljs.core.get.call(null, map__14570__$1, new cljs.core.Keyword(null, "h", "h", 1109658740));
  var w = cljs.core.get.call(null, map__14570__$1, new cljs.core.Keyword(null, "w", "w", 354169001));
  var x = cljs.core.get.call(null, map__14570__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
  var y = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up", "up", -269712113), pos) ? scene_h - h : 0;
  return x <= cx && cx <= x + w && (y <= cy && cy <= y + h);
};
rerenderer.examples.bird.is_lose_QMARK_ = function rerenderer$examples$bird$is_lose_QMARK_(p__14572, h) {
  var map__14574 = p__14572;
  var map__14574__$1 = cljs.core.seq_QMARK_.call(null, map__14574) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14574) : map__14574;
  var terrain = cljs.core.get.call(null, map__14574__$1, new cljs.core.Keyword(null, "terrain", "terrain", 704966005));
  var bird_x = cljs.core.get.call(null, map__14574__$1, new cljs.core.Keyword(null, "bird-x", "bird-x", -752294537));
  var bird_y = cljs.core.get.call(null, map__14574__$1, new cljs.core.Keyword(null, "bird-y", "bird-y", 31948262));
  if (bird_y <= 0) {
    return true;
  } else {
    if (cljs.core.truth_(cljs.core.some.call(null, function(map__14574, map__14574__$1, terrain, bird_x, bird_y) {
      return function(p1__14571_SHARP_) {
        return rerenderer.examples.bird.has_cord_QMARK_.call(null, bird_x, bird_y, h, p1__14571_SHARP_);
      };
    }(map__14574, map__14574__$1, terrain, bird_x, bird_y), terrain))) {
      return true;
    } else {
      return false;
    }
  }
};
rerenderer.examples.bird.fly_down = function rerenderer$examples$bird$fly_down(bird_y) {
  if (bird_y > 0) {
    return bird_y - rerenderer.examples.bird.fly_down_high;
  } else {
    return bird_y;
  }
};
rerenderer.examples.bird.update_state_on_timer = function rerenderer$examples$bird$update_state_on_timer(state, p__14575) {
  var map__14577 = p__14575;
  var map__14577__$1 = cljs.core.seq_QMARK_.call(null, map__14577) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14577) : map__14577;
  var h = cljs.core.get.call(null, map__14577__$1, new cljs.core.Keyword(null, "h", "h", 1109658740));
  var w = cljs.core.get.call(null, map__14577__$1, new cljs.core.Keyword(null, "w", "w", 354169001));
  return cljs.core.assoc.call(null, cljs.core.update_in.call(null, cljs.core.update_in.call(null, cljs.core.update_in.call(null, cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "bird-y", "bird-y", 31948262)], null), rerenderer.examples.bird.fly_down), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "bird-x", "bird-x", -752294537)], null), 
  cljs.core.inc), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "terrain", "terrain", 704966005)], null), rerenderer.examples.bird.renew_terrain, w, (new cljs.core.Keyword(null, "bird-x", "bird-x", -752294537)).cljs$core$IFn$_invoke$arity$1(state)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "score", "score", -1963588780)], null), cljs.core.inc), new cljs.core.Keyword(null, 
  "finished", "finished", -1018867731), rerenderer.examples.bird.is_lose_QMARK_.call(null, state, h));
};
rerenderer.examples.bird.handle_timer_BANG_ = function rerenderer$examples$bird$handle_timer_BANG_(platform, state, options) {
  var c__7641__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7641__auto__) {
    return function() {
      var f__7642__auto__ = function() {
        var switch__7579__auto__ = function(c__7641__auto__) {
          return function(state_14670) {
            var state_val_14671 = state_14670[1];
            if (state_val_14671 === 7) {
              var inst_14649 = state_14670[2];
              var state_14670__$1 = state_14670;
              if (cljs.core.truth_(inst_14649)) {
                var statearr_14672_14696 = state_14670__$1;
                statearr_14672_14696[1] = 8;
              } else {
                var statearr_14673_14697 = state_14670__$1;
                statearr_14673_14697[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14671 === 1) {
                var state_14670__$1 = state_14670;
                var statearr_14674_14698 = state_14670__$1;
                statearr_14674_14698[2] = null;
                statearr_14674_14698[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14671 === 4) {
                  var inst_14642 = state_14670[7];
                  var inst_14640 = state_14670[2];
                  var inst_14641 = cljs.core.deref.call(null, state);
                  var inst_14642__$1 = (new cljs.core.Keyword(null, "finished", "finished", -1018867731)).cljs$core$IFn$_invoke$arity$1(inst_14641);
                  var state_14670__$1 = function() {
                    var statearr_14675 = state_14670;
                    statearr_14675[7] = inst_14642__$1;
                    statearr_14675[8] = inst_14640;
                    return statearr_14675;
                  }();
                  if (cljs.core.truth_(inst_14642__$1)) {
                    var statearr_14676_14699 = state_14670__$1;
                    statearr_14676_14699[1] = 5;
                  } else {
                    var statearr_14677_14700 = state_14670__$1;
                    statearr_14677_14700[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14671 === 13) {
                    var inst_14663 = state_14670[2];
                    var state_14670__$1 = state_14670;
                    var statearr_14678_14701 = state_14670__$1;
                    statearr_14678_14701[2] = inst_14663;
                    statearr_14678_14701[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14671 === 6) {
                      var inst_14645 = cljs.core.deref.call(null, state);
                      var inst_14646 = (new cljs.core.Keyword(null, "started", "started", 585705024)).cljs$core$IFn$_invoke$arity$1(inst_14645);
                      var inst_14647 = cljs.core.not.call(null, inst_14646);
                      var state_14670__$1 = state_14670;
                      var statearr_14679_14702 = state_14670__$1;
                      statearr_14679_14702[2] = inst_14647;
                      statearr_14679_14702[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14671 === 3) {
                        var inst_14668 = state_14670[2];
                        var state_14670__$1 = state_14670;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14670__$1, inst_14668);
                      } else {
                        if (state_val_14671 === 12) {
                          var state_14670__$1 = state_14670;
                          var statearr_14680_14703 = state_14670__$1;
                          statearr_14680_14703[2] = null;
                          statearr_14680_14703[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14671 === 2) {
                            var inst_14638 = cljs.core.async.timeout.call(null, rerenderer.examples.bird.tick);
                            var state_14670__$1 = state_14670;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14670__$1, 4, inst_14638);
                          } else {
                            if (state_val_14671 === 11) {
                              var inst_14656 = cljs.core.PersistentVector.EMPTY_NODE;
                              var inst_14657 = [new cljs.core.Keyword(null, "sounds", "sounds", 1244211385), new cljs.core.Keyword(null, "die", "die", -547192252)];
                              var inst_14658 = new cljs.core.PersistentVector(null, 2, 5, inst_14656, inst_14657, null);
                              var inst_14659 = cljs.core.get_in.call(null, options, inst_14658);
                              var inst_14660 = rerenderer.core.play_BANG_.call(null, platform, inst_14659);
                              var state_14670__$1 = state_14670;
                              var statearr_14681_14704 = state_14670__$1;
                              statearr_14681_14704[2] = inst_14660;
                              statearr_14681_14704[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14671 === 9) {
                                var inst_14652 = cljs.core.swap_BANG_.call(null, state, rerenderer.examples.bird.update_state_on_timer, options);
                                var inst_14653 = cljs.core.deref.call(null, state);
                                var inst_14654 = (new cljs.core.Keyword(null, "finished", "finished", -1018867731)).cljs$core$IFn$_invoke$arity$1(inst_14653);
                                var state_14670__$1 = function() {
                                  var statearr_14682 = state_14670;
                                  statearr_14682[9] = inst_14652;
                                  return statearr_14682;
                                }();
                                if (cljs.core.truth_(inst_14654)) {
                                  var statearr_14683_14705 = state_14670__$1;
                                  statearr_14683_14705[1] = 11;
                                } else {
                                  var statearr_14684_14706 = state_14670__$1;
                                  statearr_14684_14706[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14671 === 5) {
                                  var inst_14642 = state_14670[7];
                                  var state_14670__$1 = state_14670;
                                  var statearr_14685_14707 = state_14670__$1;
                                  statearr_14685_14707[2] = inst_14642;
                                  statearr_14685_14707[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14671 === 10) {
                                    var inst_14665 = state_14670[2];
                                    var state_14670__$1 = function() {
                                      var statearr_14686 = state_14670;
                                      statearr_14686[10] = inst_14665;
                                      return statearr_14686;
                                    }();
                                    var statearr_14687_14708 = state_14670__$1;
                                    statearr_14687_14708[2] = null;
                                    statearr_14687_14708[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14671 === 8) {
                                      var state_14670__$1 = state_14670;
                                      var statearr_14688_14709 = state_14670__$1;
                                      statearr_14688_14709[2] = null;
                                      statearr_14688_14709[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7641__auto__);
        return function(switch__7579__auto__, c__7641__auto__) {
          return function() {
            var rerenderer$examples$bird$handle_timer_BANG__$_state_machine__7580__auto__ = null;
            var rerenderer$examples$bird$handle_timer_BANG__$_state_machine__7580__auto____0 = function() {
              var statearr_14692 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_14692[0] = rerenderer$examples$bird$handle_timer_BANG__$_state_machine__7580__auto__;
              statearr_14692[1] = 1;
              return statearr_14692;
            };
            var rerenderer$examples$bird$handle_timer_BANG__$_state_machine__7580__auto____1 = function(state_14670) {
              while (true) {
                var ret_value__7581__auto__ = function() {
                  try {
                    while (true) {
                      var result__7582__auto__ = switch__7579__auto__.call(null, state_14670);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7582__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7582__auto__;
                      }
                      break;
                    }
                  } catch (e14693) {
                    if (e14693 instanceof Object) {
                      var ex__7583__auto__ = e14693;
                      var statearr_14694_14710 = state_14670;
                      statearr_14694_14710[5] = ex__7583__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14670);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14693;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7581__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14711 = state_14670;
                  state_14670 = G__14711;
                  continue;
                } else {
                  return ret_value__7581__auto__;
                }
                break;
              }
            };
            rerenderer$examples$bird$handle_timer_BANG__$_state_machine__7580__auto__ = function(state_14670) {
              switch(arguments.length) {
                case 0:
                  return rerenderer$examples$bird$handle_timer_BANG__$_state_machine__7580__auto____0.call(this);
                case 1:
                  return rerenderer$examples$bird$handle_timer_BANG__$_state_machine__7580__auto____1.call(this, state_14670);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            rerenderer$examples$bird$handle_timer_BANG__$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$examples$bird$handle_timer_BANG__$_state_machine__7580__auto____0;
            rerenderer$examples$bird$handle_timer_BANG__$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$examples$bird$handle_timer_BANG__$_state_machine__7580__auto____1;
            return rerenderer$examples$bird$handle_timer_BANG__$_state_machine__7580__auto__;
          }();
        }(switch__7579__auto__, c__7641__auto__);
      }();
      var state__7643__auto__ = function() {
        var statearr_14695 = f__7642__auto__.call(null);
        statearr_14695[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7641__auto__;
        return statearr_14695;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7643__auto__);
    };
  }(c__7641__auto__));
  return c__7641__auto__;
};
rerenderer.examples.bird.init_BANG_ = function rerenderer$examples$bird$init_BANG_(canvas) {
  var c__7641__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7641__auto__) {
    return function() {
      var f__7642__auto__ = function() {
        var switch__7579__auto__ = function(c__7641__auto__) {
          return function(state_14789) {
            var state_val_14790 = state_14789[1];
            if (state_val_14790 === 4) {
              var inst_14765 = state_14789[7];
              var inst_14775 = state_14789[8];
              var inst_14758 = state_14789[9];
              var inst_14766 = state_14789[10];
              var inst_14757 = state_14789[11];
              var inst_14778 = state_14789[2];
              var inst_14779 = canvas.height;
              var inst_14780 = [inst_14775, inst_14778, inst_14758, inst_14779];
              var inst_14781 = cljs.core.PersistentHashMap.fromArrays(inst_14766, inst_14780);
              var inst_14782 = cljs.core.deref.call(null, inst_14765);
              var inst_14783 = cljs.core.assoc.call(null, inst_14782, new cljs.core.Keyword(null, "started", "started", 585705024), true);
              var inst_14784 = cljs.core.swap_BANG_.call(null, inst_14765, cljs.core.assoc, new cljs.core.Keyword(null, "initial", "initial", 1854648214), inst_14783);
              var inst_14785 = rerenderer.core.init_BANG_.call(null, inst_14757, rerenderer.examples.bird.flappy_bird_root, inst_14765, inst_14781);
              var inst_14786 = rerenderer.examples.bird.handle_clicks_BANG_.call(null, inst_14757, inst_14765, inst_14781);
              var inst_14787 = rerenderer.examples.bird.handle_timer_BANG_.call(null, inst_14757, inst_14765, inst_14781);
              var state_14789__$1 = function() {
                var statearr_14791 = state_14789;
                statearr_14791[12] = inst_14785;
                statearr_14791[13] = inst_14786;
                statearr_14791[14] = inst_14784;
                return statearr_14791;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14789__$1, inst_14787);
            } else {
              if (state_val_14790 === 3) {
                var inst_14767 = state_14789[15];
                var inst_14770 = state_14789[16];
                var inst_14757 = state_14789[11];
                var inst_14773 = state_14789[2];
                var inst_14774 = [inst_14770, inst_14773];
                var inst_14775 = cljs.core.PersistentHashMap.fromArrays(inst_14767, inst_14774);
                var inst_14776 = rerenderer.core.image.call(null, inst_14757, "bird.png");
                var state_14789__$1 = function() {
                  var statearr_14792 = state_14789;
                  statearr_14792[8] = inst_14775;
                  return statearr_14792;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14789__$1, 4, inst_14776);
              } else {
                if (state_val_14790 === 2) {
                  var inst_14757 = state_14789[11];
                  var inst_14770 = state_14789[2];
                  var inst_14771 = rerenderer.core.sound.call(null, inst_14757, "bird_jump.ogg");
                  var state_14789__$1 = function() {
                    var statearr_14793 = state_14789;
                    statearr_14793[16] = inst_14770;
                    return statearr_14793;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14789__$1, 3, inst_14771);
                } else {
                  if (state_val_14790 === 1) {
                    var inst_14758 = state_14789[9];
                    var inst_14757 = state_14789[11];
                    var inst_14757__$1 = rerenderer.browser.browser.call(null, canvas);
                    var inst_14758__$1 = canvas.width;
                    var inst_14759 = [new cljs.core.Keyword(null, "terrain", "terrain", 704966005), new cljs.core.Keyword(null, "bird-y", "bird-y", 31948262), new cljs.core.Keyword(null, "bird-x", "bird-x", -752294537), new cljs.core.Keyword(null, "score", "score", -1963588780), new cljs.core.Keyword(null, "finished", "finished", -1018867731), new cljs.core.Keyword(null, "started", "started", 585705024)];
                    var inst_14760 = inst_14758__$1 * rerenderer.examples.bird.bariers_screens;
                    var inst_14761 = rerenderer.examples.bird.generate_terrain.call(null, rerenderer.examples.bird.bariers_start, inst_14760);
                    var inst_14762 = inst_14758__$1 / 2;
                    var inst_14763 = [inst_14761, inst_14762, rerenderer.examples.bird.bird_start_x, 0, false, false];
                    var inst_14764 = cljs.core.PersistentHashMap.fromArrays(inst_14759, inst_14763);
                    var inst_14765 = cljs.core.atom.call(null, inst_14764);
                    var inst_14766 = [new cljs.core.Keyword(null, "sounds", "sounds", 1244211385), new cljs.core.Keyword(null, "atlas", "atlas", 1594808522), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.Keyword(null, "h", "h", 1109658740)];
                    var inst_14767 = [new cljs.core.Keyword(null, "die", "die", -547192252), new cljs.core.Keyword(null, "jump", "jump", -971319427)];
                    var inst_14768 = rerenderer.core.sound.call(null, inst_14757__$1, "bird_die.ogg");
                    var state_14789__$1 = function() {
                      var statearr_14794 = state_14789;
                      statearr_14794[15] = inst_14767;
                      statearr_14794[7] = inst_14765;
                      statearr_14794[9] = inst_14758__$1;
                      statearr_14794[10] = inst_14766;
                      statearr_14794[11] = inst_14757__$1;
                      return statearr_14794;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14789__$1, 2, inst_14768);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__7641__auto__);
        return function(switch__7579__auto__, c__7641__auto__) {
          return function() {
            var rerenderer$examples$bird$init_BANG__$_state_machine__7580__auto__ = null;
            var rerenderer$examples$bird$init_BANG__$_state_machine__7580__auto____0 = function() {
              var statearr_14798 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_14798[0] = rerenderer$examples$bird$init_BANG__$_state_machine__7580__auto__;
              statearr_14798[1] = 1;
              return statearr_14798;
            };
            var rerenderer$examples$bird$init_BANG__$_state_machine__7580__auto____1 = function(state_14789) {
              while (true) {
                var ret_value__7581__auto__ = function() {
                  try {
                    while (true) {
                      var result__7582__auto__ = switch__7579__auto__.call(null, state_14789);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7582__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7582__auto__;
                      }
                      break;
                    }
                  } catch (e14799) {
                    if (e14799 instanceof Object) {
                      var ex__7583__auto__ = e14799;
                      var statearr_14800_14802 = state_14789;
                      statearr_14800_14802[5] = ex__7583__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14789);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14799;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7581__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14803 = state_14789;
                  state_14789 = G__14803;
                  continue;
                } else {
                  return ret_value__7581__auto__;
                }
                break;
              }
            };
            rerenderer$examples$bird$init_BANG__$_state_machine__7580__auto__ = function(state_14789) {
              switch(arguments.length) {
                case 0:
                  return rerenderer$examples$bird$init_BANG__$_state_machine__7580__auto____0.call(this);
                case 1:
                  return rerenderer$examples$bird$init_BANG__$_state_machine__7580__auto____1.call(this, state_14789);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            rerenderer$examples$bird$init_BANG__$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$examples$bird$init_BANG__$_state_machine__7580__auto____0;
            rerenderer$examples$bird$init_BANG__$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$examples$bird$init_BANG__$_state_machine__7580__auto____1;
            return rerenderer$examples$bird$init_BANG__$_state_machine__7580__auto__;
          }();
        }(switch__7579__auto__, c__7641__auto__);
      }();
      var state__7643__auto__ = function() {
        var statearr_14801 = f__7642__auto__.call(null);
        statearr_14801[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7641__auto__;
        return statearr_14801;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7643__auto__);
    };
  }(c__7641__auto__));
  return c__7641__auto__;
};
goog.provide("rerenderer.examples.android");
goog.require("cljs.core");
goog.require("rerenderer.android");
goog.require("rerenderer.core");
goog.require("cljs.core.async");
rerenderer.examples.android.root = function rerenderer$examples$android$root(ctx, p__15922) {
  var map__15924 = p__15922;
  var map__15924__$1 = cljs.core.seq_QMARK_.call(null, map__15924) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15924) : map__15924;
  var cy = cljs.core.get.call(null, map__15924__$1, new cljs.core.Keyword(null, "cy", "cy", 755331060));
  var cx = cljs.core.get.call(null, map__15924__$1, new cljs.core.Keyword(null, "cx", "cx", 1272694324));
  var time = cljs.core.get.call(null, map__15924__$1, new cljs.core.Keyword(null, "time", "time", 1385887882));
  var paint = cljs.core.get.call(null, map__15924__$1, new cljs.core.Keyword(null, "paint", "paint", 1531901299));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-canvas"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["drawRGB", 250, 0, 0], null)], null)], 
  null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-paint"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["setARGB", 250, 150, 0, 150], null)], null)], 
  null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-paint"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["setTextSize", 100], null)], null)], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-canvas"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["drawText", "It's working!", 100, 1E3, 
  paint], null)], null)], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-paint"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["setARGB", 250, 250, 250, 250], null)], 
  null)], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-paint"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["setTextSize", 30], null)], null)], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-canvas"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["drawText", [cljs.core.str(time)].join(""), 
  100, 1500, paint], null)], null)], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-paint"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["setARGB", 150, 0, 250, 0], null)], null)], 
  null));
  return cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-canvas"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["drawCircle", cx, cy, 100, paint], 
  null)], null)], null));
};
rerenderer.examples.android.init_BANG_ = function rerenderer$examples$android$init_BANG_() {
  var platform = rerenderer.android.android.call(null, android);
  var state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "paint", "paint", 1531901299), android.paint(), new cljs.core.Keyword(null, "time", "time", 1385887882), new Date, new cljs.core.Keyword(null, "cx", "cx", 1272694324), 0, new cljs.core.Keyword(null, "cy", "cy", 755331060), 0], null));
  rerenderer.core.init_BANG_.call(null, platform, rerenderer.examples.android.root, state, cljs.core.PersistentArrayMap.EMPTY);
  var c__12042__auto___16035 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12042__auto___16035, platform, state) {
    return function() {
      var f__12043__auto__ = function() {
        var switch__11980__auto__ = function(c__12042__auto___16035, platform, state) {
          return function(state_15999) {
            var state_val_16000 = state_15999[1];
            if (state_val_16000 === 4) {
              var inst_15994 = state_15999[2];
              var state_15999__$1 = function() {
                var statearr_16001 = state_15999;
                statearr_16001[7] = inst_15994;
                return statearr_16001;
              }();
              var statearr_16002_16036 = state_15999__$1;
              statearr_16002_16036[2] = null;
              statearr_16002_16036[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16000 === 3) {
                var inst_15997 = state_15999[2];
                var state_15999__$1 = state_15999;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15999__$1, inst_15997);
              } else {
                if (state_val_16000 === 2) {
                  var inst_15982 = cljs.core.PersistentVector.EMPTY_NODE;
                  var inst_15983 = [new cljs.core.Keyword(null, "cx", "cx", 1272694324)];
                  var inst_15984 = new cljs.core.PersistentVector(null, 1, 5, inst_15982, inst_15983, null);
                  var inst_15985 = function() {
                    return function(inst_15982, inst_15983, inst_15984, state_val_16000, c__12042__auto___16035, platform, state) {
                      return function(p1__15925_SHARP_) {
                        return cljs.core.mod.call(null, p1__15925_SHARP_ + 10, 1080);
                      };
                    }(inst_15982, inst_15983, inst_15984, state_val_16000, c__12042__auto___16035, platform, state);
                  }();
                  var inst_15986 = cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, inst_15984, inst_15985);
                  var inst_15987 = cljs.core.PersistentVector.EMPTY_NODE;
                  var inst_15988 = [new cljs.core.Keyword(null, "cy", "cy", 755331060)];
                  var inst_15989 = new cljs.core.PersistentVector(null, 1, 5, inst_15987, inst_15988, null);
                  var inst_15990 = function() {
                    return function(inst_15982, inst_15983, inst_15984, inst_15985, inst_15986, inst_15987, inst_15988, inst_15989, state_val_16000, c__12042__auto___16035, platform, state) {
                      return function(p1__15926_SHARP_) {
                        return cljs.core.mod.call(null, p1__15926_SHARP_ + 10, 1920);
                      };
                    }(inst_15982, inst_15983, inst_15984, inst_15985, inst_15986, inst_15987, inst_15988, inst_15989, state_val_16000, c__12042__auto___16035, platform, state);
                  }();
                  var inst_15991 = cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, inst_15989, inst_15990);
                  var inst_15992 = cljs.core.async.timeout.call(null, 10);
                  var state_15999__$1 = function() {
                    var statearr_16003 = state_15999;
                    statearr_16003[8] = inst_15991;
                    statearr_16003[9] = inst_15986;
                    return statearr_16003;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15999__$1, 4, inst_15992);
                } else {
                  if (state_val_16000 === 1) {
                    var state_15999__$1 = state_15999;
                    var statearr_16004_16037 = state_15999__$1;
                    statearr_16004_16037[2] = null;
                    statearr_16004_16037[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__12042__auto___16035, platform, state);
        return function(switch__11980__auto__, c__12042__auto___16035, platform, state) {
          return function() {
            var rerenderer$examples$android$init_BANG__$_state_machine__11981__auto__ = null;
            var rerenderer$examples$android$init_BANG__$_state_machine__11981__auto____0 = function() {
              var statearr_16008 = [null, null, null, null, null, null, null, null, null, null];
              statearr_16008[0] = rerenderer$examples$android$init_BANG__$_state_machine__11981__auto__;
              statearr_16008[1] = 1;
              return statearr_16008;
            };
            var rerenderer$examples$android$init_BANG__$_state_machine__11981__auto____1 = function(state_15999) {
              while (true) {
                var ret_value__11982__auto__ = function() {
                  try {
                    while (true) {
                      var result__11983__auto__ = switch__11980__auto__.call(null, state_15999);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__11983__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__11983__auto__;
                      }
                      break;
                    }
                  } catch (e16009) {
                    if (e16009 instanceof Object) {
                      var ex__11984__auto__ = e16009;
                      var statearr_16010_16038 = state_15999;
                      statearr_16010_16038[5] = ex__11984__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15999);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16009;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__11982__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16039 = state_15999;
                  state_15999 = G__16039;
                  continue;
                } else {
                  return ret_value__11982__auto__;
                }
                break;
              }
            };
            rerenderer$examples$android$init_BANG__$_state_machine__11981__auto__ = function(state_15999) {
              switch(arguments.length) {
                case 0:
                  return rerenderer$examples$android$init_BANG__$_state_machine__11981__auto____0.call(this);
                case 1:
                  return rerenderer$examples$android$init_BANG__$_state_machine__11981__auto____1.call(this, state_15999);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            rerenderer$examples$android$init_BANG__$_state_machine__11981__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$examples$android$init_BANG__$_state_machine__11981__auto____0;
            rerenderer$examples$android$init_BANG__$_state_machine__11981__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$examples$android$init_BANG__$_state_machine__11981__auto____1;
            return rerenderer$examples$android$init_BANG__$_state_machine__11981__auto__;
          }();
        }(switch__11980__auto__, c__12042__auto___16035, platform, state);
      }();
      var state__12044__auto__ = function() {
        var statearr_16011 = f__12043__auto__.call(null);
        statearr_16011[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12042__auto___16035;
        return statearr_16011;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12044__auto__);
    };
  }(c__12042__auto___16035, platform, state));
  var c__12042__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12042__auto__, platform, state) {
    return function() {
      var f__12043__auto__ = function() {
        var switch__11980__auto__ = function(c__12042__auto__, platform, state) {
          return function(state_16022) {
            var state_val_16023 = state_16022[1];
            if (state_val_16023 === 4) {
              var inst_16017 = state_16022[2];
              var state_16022__$1 = function() {
                var statearr_16024 = state_16022;
                statearr_16024[7] = inst_16017;
                return statearr_16024;
              }();
              var statearr_16025_16040 = state_16022__$1;
              statearr_16025_16040[2] = null;
              statearr_16025_16040[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16023 === 3) {
                var inst_16020 = state_16022[2];
                var state_16022__$1 = state_16022;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16022__$1, inst_16020);
              } else {
                if (state_val_16023 === 2) {
                  var inst_16013 = new Date;
                  var inst_16014 = cljs.core.swap_BANG_.call(null, state, cljs.core.assoc, new cljs.core.Keyword(null, "time", "time", 1385887882), inst_16013);
                  var inst_16015 = cljs.core.async.timeout.call(null, 300);
                  var state_16022__$1 = function() {
                    var statearr_16026 = state_16022;
                    statearr_16026[8] = inst_16014;
                    return statearr_16026;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16022__$1, 4, inst_16015);
                } else {
                  if (state_val_16023 === 1) {
                    var state_16022__$1 = state_16022;
                    var statearr_16027_16041 = state_16022__$1;
                    statearr_16027_16041[2] = null;
                    statearr_16027_16041[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__12042__auto__, platform, state);
        return function(switch__11980__auto__, c__12042__auto__, platform, state) {
          return function() {
            var rerenderer$examples$android$init_BANG__$_state_machine__11981__auto__ = null;
            var rerenderer$examples$android$init_BANG__$_state_machine__11981__auto____0 = function() {
              var statearr_16031 = [null, null, null, null, null, null, null, null, null];
              statearr_16031[0] = rerenderer$examples$android$init_BANG__$_state_machine__11981__auto__;
              statearr_16031[1] = 1;
              return statearr_16031;
            };
            var rerenderer$examples$android$init_BANG__$_state_machine__11981__auto____1 = function(state_16022) {
              while (true) {
                var ret_value__11982__auto__ = function() {
                  try {
                    while (true) {
                      var result__11983__auto__ = switch__11980__auto__.call(null, state_16022);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__11983__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__11983__auto__;
                      }
                      break;
                    }
                  } catch (e16032) {
                    if (e16032 instanceof Object) {
                      var ex__11984__auto__ = e16032;
                      var statearr_16033_16042 = state_16022;
                      statearr_16033_16042[5] = ex__11984__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16022);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16032;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__11982__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16043 = state_16022;
                  state_16022 = G__16043;
                  continue;
                } else {
                  return ret_value__11982__auto__;
                }
                break;
              }
            };
            rerenderer$examples$android$init_BANG__$_state_machine__11981__auto__ = function(state_16022) {
              switch(arguments.length) {
                case 0:
                  return rerenderer$examples$android$init_BANG__$_state_machine__11981__auto____0.call(this);
                case 1:
                  return rerenderer$examples$android$init_BANG__$_state_machine__11981__auto____1.call(this, state_16022);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            rerenderer$examples$android$init_BANG__$_state_machine__11981__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$examples$android$init_BANG__$_state_machine__11981__auto____0;
            rerenderer$examples$android$init_BANG__$_state_machine__11981__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$examples$android$init_BANG__$_state_machine__11981__auto____1;
            return rerenderer$examples$android$init_BANG__$_state_machine__11981__auto__;
          }();
        }(switch__11980__auto__, c__12042__auto__, platform, state);
      }();
      var state__12044__auto__ = function() {
        var statearr_16034 = f__12043__auto__.call(null);
        statearr_16034[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12042__auto__;
        return statearr_16034;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12044__auto__);
    };
  }(c__12042__auto__, platform, state));
  return c__12042__auto__;
};
goog.provide("rerenderer.examples.core");
goog.require("cljs.core");
goog.require("rerenderer.browser");
goog.require("rerenderer.core");
goog.require("rerenderer.examples.bird");
goog.require("cljs.core.async");
cljs.core.enable_console_print_BANG_.call(null);
rerenderer.examples.core.rotating_rectangle = function rerenderer$examples$core$rotating_rectangle(ctx, p__14806, _) {
  var map__14808 = p__14806;
  var map__14808__$1 = cljs.core.seq_QMARK_.call(null, map__14808) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14808) : map__14808;
  var angle = cljs.core.get.call(null, map__14808__$1, new cljs.core.Keyword(null, "angle", "angle", 1622094254));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["save"], null)], null)], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["clearRect", 0, 0, 100, 100], null)], null)], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-fillStyle"], null)], null), "red"], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["translate", 35, 35], null)], null)], null));
  var rangle_14809 = angle * (Math.PI / 180);
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["rotate", rangle_14809], null)], null)], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["fillRect", -25, -25, 50, 50], null)], null)], null));
  return cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["restore"], null)], null)], null));
};
rerenderer.examples.core.rotate_rectangle = function rerenderer$examples$core$rotate_rectangle(state) {
  var c__7641__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7641__auto__) {
    return function() {
      var f__7642__auto__ = function() {
        var switch__7579__auto__ = function(c__7641__auto__) {
          return function(state_14849) {
            var state_val_14850 = state_14849[1];
            if (state_val_14850 === 4) {
              var inst_14839 = state_14849[2];
              var inst_14840 = cljs.core.PersistentVector.EMPTY_NODE;
              var inst_14841 = [new cljs.core.Keyword(null, "angle", "angle", 1622094254)];
              var inst_14842 = new cljs.core.PersistentVector(null, 1, 5, inst_14840, inst_14841, null);
              var inst_14843 = function() {
                return function(inst_14839, inst_14840, inst_14841, inst_14842, state_val_14850, c__7641__auto__) {
                  return function(p1__14810_SHARP_) {
                    return cljs.core.mod.call(null, p1__14810_SHARP_ + 1, 360);
                  };
                }(inst_14839, inst_14840, inst_14841, inst_14842, state_val_14850, c__7641__auto__);
              }();
              var inst_14844 = cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, inst_14842, inst_14843);
              var state_14849__$1 = function() {
                var statearr_14851 = state_14849;
                statearr_14851[7] = inst_14839;
                statearr_14851[8] = inst_14844;
                return statearr_14851;
              }();
              var statearr_14852_14861 = state_14849__$1;
              statearr_14852_14861[2] = null;
              statearr_14852_14861[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14850 === 3) {
                var inst_14847 = state_14849[2];
                var state_14849__$1 = state_14849;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14849__$1, inst_14847);
              } else {
                if (state_val_14850 === 2) {
                  var inst_14837 = cljs.core.async.timeout.call(null, 5);
                  var state_14849__$1 = state_14849;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14849__$1, 4, inst_14837);
                } else {
                  if (state_val_14850 === 1) {
                    var state_14849__$1 = state_14849;
                    var statearr_14853_14862 = state_14849__$1;
                    statearr_14853_14862[2] = null;
                    statearr_14853_14862[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__7641__auto__);
        return function(switch__7579__auto__, c__7641__auto__) {
          return function() {
            var rerenderer$examples$core$rotate_rectangle_$_state_machine__7580__auto__ = null;
            var rerenderer$examples$core$rotate_rectangle_$_state_machine__7580__auto____0 = function() {
              var statearr_14857 = [null, null, null, null, null, null, null, null, null];
              statearr_14857[0] = rerenderer$examples$core$rotate_rectangle_$_state_machine__7580__auto__;
              statearr_14857[1] = 1;
              return statearr_14857;
            };
            var rerenderer$examples$core$rotate_rectangle_$_state_machine__7580__auto____1 = function(state_14849) {
              while (true) {
                var ret_value__7581__auto__ = function() {
                  try {
                    while (true) {
                      var result__7582__auto__ = switch__7579__auto__.call(null, state_14849);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7582__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7582__auto__;
                      }
                      break;
                    }
                  } catch (e14858) {
                    if (e14858 instanceof Object) {
                      var ex__7583__auto__ = e14858;
                      var statearr_14859_14863 = state_14849;
                      statearr_14859_14863[5] = ex__7583__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14849);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14858;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7581__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14864 = state_14849;
                  state_14849 = G__14864;
                  continue;
                } else {
                  return ret_value__7581__auto__;
                }
                break;
              }
            };
            rerenderer$examples$core$rotate_rectangle_$_state_machine__7580__auto__ = function(state_14849) {
              switch(arguments.length) {
                case 0:
                  return rerenderer$examples$core$rotate_rectangle_$_state_machine__7580__auto____0.call(this);
                case 1:
                  return rerenderer$examples$core$rotate_rectangle_$_state_machine__7580__auto____1.call(this, state_14849);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            rerenderer$examples$core$rotate_rectangle_$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$examples$core$rotate_rectangle_$_state_machine__7580__auto____0;
            rerenderer$examples$core$rotate_rectangle_$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$examples$core$rotate_rectangle_$_state_machine__7580__auto____1;
            return rerenderer$examples$core$rotate_rectangle_$_state_machine__7580__auto__;
          }();
        }(switch__7579__auto__, c__7641__auto__);
      }();
      var state__7643__auto__ = function() {
        var statearr_14860 = f__7642__auto__.call(null);
        statearr_14860[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7641__auto__;
        return statearr_14860;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7643__auto__);
    };
  }(c__7641__auto__));
  return c__7641__auto__;
};
rerenderer.examples.core.scene_1 = function rerenderer$examples$core$scene_1(canvas) {
  var state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "angle", "angle", 1622094254), 0], null));
  rerenderer.core.init_BANG_.call(null, rerenderer.browser.browser.call(null, canvas), rerenderer.examples.core.rotating_rectangle, state, cljs.core.PersistentArrayMap.EMPTY);
  return rerenderer.examples.core.rotate_rectangle.call(null, state);
};
rerenderer.examples.core.rotating_and_moving_rectangle = function rerenderer$examples$core$rotating_and_moving_rectangle(ctx, p__14865, _) {
  var map__14867 = p__14865;
  var map__14867__$1 = cljs.core.seq_QMARK_.call(null, map__14867) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14867) : map__14867;
  var x = cljs.core.get.call(null, map__14867__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
  var angle = cljs.core.get.call(null, map__14867__$1, new cljs.core.Keyword(null, "angle", "angle", 1622094254));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["save"], null)], null)], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["clearRect", 0, 0, 700, 100], null)], null)], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-fillStyle"], null)], null), "red"], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["translate", x + 25, 35], null)], null)], null));
  var rangle_14868 = angle * (Math.PI / 180);
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["rotate", rangle_14868], null)], null)], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["fillRect", -25, -25, 50, 50], null)], null)], null));
  return cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["restore"], null)], null)], null));
};
rerenderer.examples.core.rotate_and_move_rectangle = function rerenderer$examples$core$rotate_and_move_rectangle(state) {
  var c__7641__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7641__auto__) {
    return function() {
      var f__7642__auto__ = function() {
        var switch__7579__auto__ = function(c__7641__auto__) {
          return function(state_14919) {
            var state_val_14920 = state_14919[1];
            if (state_val_14920 === 4) {
              var inst_14904 = state_14919[2];
              var inst_14905 = cljs.core.PersistentVector.EMPTY_NODE;
              var inst_14906 = [new cljs.core.Keyword(null, "angle", "angle", 1622094254)];
              var inst_14907 = new cljs.core.PersistentVector(null, 1, 5, inst_14905, inst_14906, null);
              var inst_14908 = function() {
                return function(inst_14904, inst_14905, inst_14906, inst_14907, state_val_14920, c__7641__auto__) {
                  return function(p1__14869_SHARP_) {
                    return cljs.core.mod.call(null, p1__14869_SHARP_ + 1, 360);
                  };
                }(inst_14904, inst_14905, inst_14906, inst_14907, state_val_14920, c__7641__auto__);
              }();
              var inst_14909 = cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, inst_14907, inst_14908);
              var inst_14910 = cljs.core.PersistentVector.EMPTY_NODE;
              var inst_14911 = [new cljs.core.Keyword(null, "x", "x", 2099068185)];
              var inst_14912 = new cljs.core.PersistentVector(null, 1, 5, inst_14910, inst_14911, null);
              var inst_14913 = function() {
                return function(inst_14904, inst_14905, inst_14906, inst_14907, inst_14908, inst_14909, inst_14910, inst_14911, inst_14912, state_val_14920, c__7641__auto__) {
                  return function(p1__14870_SHARP_) {
                    return cljs.core.mod.call(null, p1__14870_SHARP_ + 1, 600);
                  };
                }(inst_14904, inst_14905, inst_14906, inst_14907, inst_14908, inst_14909, inst_14910, inst_14911, inst_14912, state_val_14920, c__7641__auto__);
              }();
              var inst_14914 = cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, inst_14912, inst_14913);
              var state_14919__$1 = function() {
                var statearr_14921 = state_14919;
                statearr_14921[7] = inst_14914;
                statearr_14921[8] = inst_14909;
                statearr_14921[9] = inst_14904;
                return statearr_14921;
              }();
              var statearr_14922_14931 = state_14919__$1;
              statearr_14922_14931[2] = null;
              statearr_14922_14931[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14920 === 3) {
                var inst_14917 = state_14919[2];
                var state_14919__$1 = state_14919;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14919__$1, inst_14917);
              } else {
                if (state_val_14920 === 2) {
                  var inst_14902 = cljs.core.async.timeout.call(null, 5);
                  var state_14919__$1 = state_14919;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14919__$1, 4, inst_14902);
                } else {
                  if (state_val_14920 === 1) {
                    var state_14919__$1 = state_14919;
                    var statearr_14923_14932 = state_14919__$1;
                    statearr_14923_14932[2] = null;
                    statearr_14923_14932[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__7641__auto__);
        return function(switch__7579__auto__, c__7641__auto__) {
          return function() {
            var rerenderer$examples$core$rotate_and_move_rectangle_$_state_machine__7580__auto__ = null;
            var rerenderer$examples$core$rotate_and_move_rectangle_$_state_machine__7580__auto____0 = function() {
              var statearr_14927 = [null, null, null, null, null, null, null, null, null, null];
              statearr_14927[0] = rerenderer$examples$core$rotate_and_move_rectangle_$_state_machine__7580__auto__;
              statearr_14927[1] = 1;
              return statearr_14927;
            };
            var rerenderer$examples$core$rotate_and_move_rectangle_$_state_machine__7580__auto____1 = function(state_14919) {
              while (true) {
                var ret_value__7581__auto__ = function() {
                  try {
                    while (true) {
                      var result__7582__auto__ = switch__7579__auto__.call(null, state_14919);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7582__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7582__auto__;
                      }
                      break;
                    }
                  } catch (e14928) {
                    if (e14928 instanceof Object) {
                      var ex__7583__auto__ = e14928;
                      var statearr_14929_14933 = state_14919;
                      statearr_14929_14933[5] = ex__7583__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14919);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14928;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7581__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14934 = state_14919;
                  state_14919 = G__14934;
                  continue;
                } else {
                  return ret_value__7581__auto__;
                }
                break;
              }
            };
            rerenderer$examples$core$rotate_and_move_rectangle_$_state_machine__7580__auto__ = function(state_14919) {
              switch(arguments.length) {
                case 0:
                  return rerenderer$examples$core$rotate_and_move_rectangle_$_state_machine__7580__auto____0.call(this);
                case 1:
                  return rerenderer$examples$core$rotate_and_move_rectangle_$_state_machine__7580__auto____1.call(this, state_14919);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            rerenderer$examples$core$rotate_and_move_rectangle_$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$examples$core$rotate_and_move_rectangle_$_state_machine__7580__auto____0;
            rerenderer$examples$core$rotate_and_move_rectangle_$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$examples$core$rotate_and_move_rectangle_$_state_machine__7580__auto____1;
            return rerenderer$examples$core$rotate_and_move_rectangle_$_state_machine__7580__auto__;
          }();
        }(switch__7579__auto__, c__7641__auto__);
      }();
      var state__7643__auto__ = function() {
        var statearr_14930 = f__7642__auto__.call(null);
        statearr_14930[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7641__auto__;
        return statearr_14930;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7643__auto__);
    };
  }(c__7641__auto__));
  return c__7641__auto__;
};
rerenderer.examples.core.scene_2 = function rerenderer$examples$core$scene_2(canvas) {
  var state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "angle", "angle", 1622094254), 0, new cljs.core.Keyword(null, "x", "x", 2099068185), 10], null));
  rerenderer.core.init_BANG_.call(null, rerenderer.browser.browser.call(null, canvas), rerenderer.examples.core.rotating_and_moving_rectangle, state, cljs.core.PersistentArrayMap.EMPTY);
  return rerenderer.examples.core.rotate_and_move_rectangle.call(null, state);
};
rerenderer.examples.core.sprites = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "run", "run", -1821166653), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [328, 320], null), new cljs.core.Keyword(null, "run-1", "run-1", 912288944), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [354, 320], null), new cljs.core.Keyword(null, 
"run-2", "run-2", -764777726), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [378, 320], null), new cljs.core.Keyword(null, "jump", "jump", -971319427), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [335, 240], null), new cljs.core.Keyword(null, "stand", "stand", -1484467872), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [214, 240], null)], null), new cljs.core.Keyword(null, "left", "left", 
-399115937), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "run", "run", -1821166653), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [60, 320], null), new cljs.core.Keyword(null, "run-1", "run-1", 912288944), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [34, 320], null), new cljs.core.Keyword(null, "run-2", "run-2", -764777726), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[8, 320], null), new cljs.core.Keyword(null, "jump", "jump", -971319427), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [54, 240], null), new cljs.core.Keyword(null, "stand", "stand", -1484467872), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [174, 240], null)], null)], null);
rerenderer.examples.core.mario = function rerenderer$examples$core$mario(ctx, atlas, mario_state, x, y) {
  if (cljs.core.truth_(mario_state)) {
    var vec__14936 = cljs.core.get_in.call(null, rerenderer.examples.core.sprites, mario_state);
    var sx = cljs.core.nth.call(null, vec__14936, 0, null);
    var sy = cljs.core.nth.call(null, vec__14936, 1, null);
    return cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["drawImage", atlas, sx, sy, 20, 40, x, y, 40, 80], null)], null)], null));
  } else {
    return null;
  }
};
rerenderer.examples.core.all_marios = function rerenderer$examples$core$all_marios(ctx, p__14937, p__14938) {
  var map__14941 = p__14937;
  var map__14941__$1 = cljs.core.seq_QMARK_.call(null, map__14941) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14941) : map__14941;
  var mario_5 = cljs.core.get.call(null, map__14941__$1, new cljs.core.Keyword(null, "mario-5", "mario-5", -1095425108));
  var mario_4 = cljs.core.get.call(null, map__14941__$1, new cljs.core.Keyword(null, "mario-4", "mario-4", -954408368));
  var mario_3 = cljs.core.get.call(null, map__14941__$1, new cljs.core.Keyword(null, "mario-3", "mario-3", 1587193006));
  var mario_2 = cljs.core.get.call(null, map__14941__$1, new cljs.core.Keyword(null, "mario-2", "mario-2", 1394328914));
  var mario_1 = cljs.core.get.call(null, map__14941__$1, new cljs.core.Keyword(null, "mario-1", "mario-1", -918771711));
  var mario_0 = cljs.core.get.call(null, map__14941__$1, new cljs.core.Keyword(null, "mario-0", "mario-0", 1593581409));
  var map__14942 = p__14938;
  var map__14942__$1 = cljs.core.seq_QMARK_.call(null, map__14942) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14942) : map__14942;
  var atlas = cljs.core.get.call(null, map__14942__$1, new cljs.core.Keyword(null, "atlas", "atlas", 1594808522));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["clearRect", 0, 0, 300, 300], null)], null)], null));
  rerenderer.examples.core.mario.call(null, ctx, atlas, mario_0, 10, 10);
  rerenderer.examples.core.mario.call(null, ctx, atlas, mario_1, 60, 10);
  rerenderer.examples.core.mario.call(null, ctx, atlas, mario_2, 110, 10);
  rerenderer.examples.core.mario.call(null, ctx, atlas, mario_3, 10, 80);
  rerenderer.examples.core.mario.call(null, ctx, atlas, mario_4, 60, 80);
  return rerenderer.examples.core.mario.call(null, ctx, atlas, mario_5, 110, 80);
};
rerenderer.examples.core.handle_mario = function rerenderer$examples$core$handle_mario(state, state_key, draw_state_key) {
  var c__7641__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7641__auto__) {
    return function() {
      var f__7642__auto__ = function() {
        var switch__7579__auto__ = function(c__7641__auto__) {
          return function(state_15052) {
            var state_val_15053 = state_15052[1];
            if (state_val_15053 === 7) {
              var inst_15018 = state_15052[7];
              var inst_15043 = state_15052[2];
              var inst_15044 = cljs.core.PersistentVector.EMPTY_NODE;
              var inst_15045 = [inst_15018, inst_15043];
              var inst_15046 = new cljs.core.PersistentVector(null, 2, 5, inst_15044, inst_15045, null);
              var inst_15047 = cljs.core.swap_BANG_.call(null, state, cljs.core.assoc, draw_state_key, inst_15046);
              var state_15052__$1 = function() {
                var statearr_15054 = state_15052;
                statearr_15054[8] = inst_15047;
                return statearr_15054;
              }();
              var statearr_15055_15077 = state_15052__$1;
              statearr_15055_15077[2] = null;
              statearr_15055_15077[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15053 === 1) {
                var state_15052__$1 = state_15052;
                var statearr_15056_15078 = state_15052__$1;
                statearr_15056_15078[2] = null;
                statearr_15056_15078[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15053 === 4) {
                  var inst_15019 = state_15052[9];
                  var inst_15018 = state_15052[7];
                  var inst_15013 = state_15052[2];
                  var inst_15016 = cljs.core.deref.call(null, state);
                  var inst_15017 = cljs.core.get.call(null, inst_15016, state_key);
                  var inst_15018__$1 = cljs.core.nth.call(null, inst_15017, 0, null);
                  var inst_15019__$1 = cljs.core.nth.call(null, inst_15017, 1, null);
                  var inst_15020 = cljs.core.deref.call(null, state);
                  var inst_15021 = cljs.core.get.call(null, inst_15020, draw_state_key);
                  var inst_15022 = cljs.core.nth.call(null, inst_15021, 0, null);
                  var inst_15023 = cljs.core.nth.call(null, inst_15021, 1, null);
                  var inst_15024 = cljs.core._EQ_.call(null, inst_15018__$1, inst_15022);
                  var inst_15025 = cljs.core._EQ_.call(null, inst_15019__$1, new cljs.core.Keyword(null, "run", "run", -1821166653));
                  var inst_15026 = inst_15024 && inst_15025;
                  var state_15052__$1 = function() {
                    var statearr_15057 = state_15052;
                    statearr_15057[9] = inst_15019__$1;
                    statearr_15057[10] = inst_15023;
                    statearr_15057[11] = inst_15013;
                    statearr_15057[7] = inst_15018__$1;
                    return statearr_15057;
                  }();
                  if (cljs.core.truth_(inst_15026)) {
                    var statearr_15058_15079 = state_15052__$1;
                    statearr_15058_15079[1] = 5;
                  } else {
                    var statearr_15059_15080 = state_15052__$1;
                    statearr_15059_15080[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15053 === 13) {
                    var inst_15038 = state_15052[2];
                    var state_15052__$1 = state_15052;
                    var statearr_15060_15081 = state_15052__$1;
                    statearr_15060_15081[2] = inst_15038;
                    statearr_15060_15081[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15053 === 6) {
                      var inst_15019 = state_15052[9];
                      var state_15052__$1 = state_15052;
                      var statearr_15061_15082 = state_15052__$1;
                      statearr_15061_15082[2] = inst_15019;
                      statearr_15061_15082[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15053 === 3) {
                        var inst_15050 = state_15052[2];
                        var state_15052__$1 = state_15052;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15052__$1, inst_15050);
                      } else {
                        if (state_val_15053 === 12) {
                          var state_15052__$1 = state_15052;
                          var statearr_15062_15083 = state_15052__$1;
                          statearr_15062_15083[2] = new cljs.core.Keyword(null, "run", "run", -1821166653);
                          statearr_15062_15083[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15053 === 2) {
                            var inst_15011 = cljs.core.async.timeout.call(null, 100);
                            var state_15052__$1 = state_15052;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15052__$1, 4, inst_15011);
                          } else {
                            if (state_val_15053 === 11) {
                              var state_15052__$1 = state_15052;
                              var statearr_15063_15084 = state_15052__$1;
                              statearr_15063_15084[2] = new cljs.core.Keyword(null, "run-2", "run-2", -764777726);
                              statearr_15063_15084[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_15053 === 9) {
                                var inst_15023 = state_15052[10];
                                var inst_15034 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "run-1", "run-1", 912288944), inst_15023);
                                var state_15052__$1 = state_15052;
                                if (inst_15034) {
                                  var statearr_15064_15085 = state_15052__$1;
                                  statearr_15064_15085[1] = 11;
                                } else {
                                  var statearr_15065_15086 = state_15052__$1;
                                  statearr_15065_15086[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15053 === 5) {
                                  var inst_15023 = state_15052[10];
                                  var inst_15031 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "run", "run", -1821166653), inst_15023);
                                  var state_15052__$1 = state_15052;
                                  if (inst_15031) {
                                    var statearr_15066_15087 = state_15052__$1;
                                    statearr_15066_15087[1] = 8;
                                  } else {
                                    var statearr_15067_15088 = state_15052__$1;
                                    statearr_15067_15088[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15053 === 10) {
                                    var inst_15040 = state_15052[2];
                                    var state_15052__$1 = state_15052;
                                    var statearr_15068_15089 = state_15052__$1;
                                    statearr_15068_15089[2] = inst_15040;
                                    statearr_15068_15089[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_15053 === 8) {
                                      var state_15052__$1 = state_15052;
                                      var statearr_15069_15090 = state_15052__$1;
                                      statearr_15069_15090[2] = new cljs.core.Keyword(null, "run-1", "run-1", 912288944);
                                      statearr_15069_15090[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7641__auto__);
        return function(switch__7579__auto__, c__7641__auto__) {
          return function() {
            var rerenderer$examples$core$handle_mario_$_state_machine__7580__auto__ = null;
            var rerenderer$examples$core$handle_mario_$_state_machine__7580__auto____0 = function() {
              var statearr_15073 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_15073[0] = rerenderer$examples$core$handle_mario_$_state_machine__7580__auto__;
              statearr_15073[1] = 1;
              return statearr_15073;
            };
            var rerenderer$examples$core$handle_mario_$_state_machine__7580__auto____1 = function(state_15052) {
              while (true) {
                var ret_value__7581__auto__ = function() {
                  try {
                    while (true) {
                      var result__7582__auto__ = switch__7579__auto__.call(null, state_15052);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7582__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7582__auto__;
                      }
                      break;
                    }
                  } catch (e15074) {
                    if (e15074 instanceof Object) {
                      var ex__7583__auto__ = e15074;
                      var statearr_15075_15091 = state_15052;
                      statearr_15075_15091[5] = ex__7583__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15052);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15074;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7581__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15092 = state_15052;
                  state_15052 = G__15092;
                  continue;
                } else {
                  return ret_value__7581__auto__;
                }
                break;
              }
            };
            rerenderer$examples$core$handle_mario_$_state_machine__7580__auto__ = function(state_15052) {
              switch(arguments.length) {
                case 0:
                  return rerenderer$examples$core$handle_mario_$_state_machine__7580__auto____0.call(this);
                case 1:
                  return rerenderer$examples$core$handle_mario_$_state_machine__7580__auto____1.call(this, state_15052);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            rerenderer$examples$core$handle_mario_$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$examples$core$handle_mario_$_state_machine__7580__auto____0;
            rerenderer$examples$core$handle_mario_$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$examples$core$handle_mario_$_state_machine__7580__auto____1;
            return rerenderer$examples$core$handle_mario_$_state_machine__7580__auto__;
          }();
        }(switch__7579__auto__, c__7641__auto__);
      }();
      var state__7643__auto__ = function() {
        var statearr_15076 = f__7642__auto__.call(null);
        statearr_15076[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7641__auto__;
        return statearr_15076;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7643__auto__);
    };
  }(c__7641__auto__));
  return c__7641__auto__;
};
rerenderer.examples.core.scene_3 = function rerenderer$examples$core$scene_3(canvas) {
  var c__7641__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7641__auto__) {
    return function() {
      var f__7642__auto__ = function() {
        var switch__7579__auto__ = function(c__7641__auto__) {
          return function(state_15178) {
            var state_val_15179 = state_15178[1];
            if (state_val_15179 === 2) {
              var inst_15163 = state_15178[7];
              var inst_15164 = state_15178[8];
              var inst_15162 = state_15178[9];
              var inst_15167 = state_15178[2];
              var inst_15168 = [inst_15167];
              var inst_15169 = cljs.core.PersistentHashMap.fromArrays(inst_15164, inst_15168);
              var inst_15170 = rerenderer.core.init_BANG_.call(null, inst_15163, rerenderer.examples.core.all_marios, inst_15162, inst_15169);
              var inst_15171 = rerenderer.examples.core.handle_mario.call(null, inst_15162, new cljs.core.Keyword(null, "mario-0-state", "mario-0-state", 1249431969), new cljs.core.Keyword(null, "mario-0", "mario-0", 1593581409));
              var inst_15172 = rerenderer.examples.core.handle_mario.call(null, inst_15162, new cljs.core.Keyword(null, "mario-1-state", "mario-1-state", -148853510), new cljs.core.Keyword(null, "mario-1", "mario-1", -918771711));
              var inst_15173 = rerenderer.examples.core.handle_mario.call(null, inst_15162, new cljs.core.Keyword(null, "mario-2-state", "mario-2-state", 951570515), new cljs.core.Keyword(null, "mario-2", "mario-2", 1394328914));
              var inst_15174 = rerenderer.examples.core.handle_mario.call(null, inst_15162, new cljs.core.Keyword(null, "mario-3-state", "mario-3-state", 634495603), new cljs.core.Keyword(null, "mario-3", "mario-3", 1587193006));
              var inst_15175 = rerenderer.examples.core.handle_mario.call(null, inst_15162, new cljs.core.Keyword(null, "mario-4-state", "mario-4-state", -886695997), new cljs.core.Keyword(null, "mario-4", "mario-4", -954408368));
              var inst_15176 = rerenderer.examples.core.handle_mario.call(null, inst_15162, new cljs.core.Keyword(null, "mario-5-state", "mario-5-state", -751533065), new cljs.core.Keyword(null, "mario-5", "mario-5", -1095425108));
              var state_15178__$1 = function() {
                var statearr_15180 = state_15178;
                statearr_15180[10] = inst_15171;
                statearr_15180[11] = inst_15173;
                statearr_15180[12] = inst_15174;
                statearr_15180[13] = inst_15175;
                statearr_15180[14] = inst_15172;
                statearr_15180[15] = inst_15170;
                return statearr_15180;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15178__$1, inst_15176);
            } else {
              if (state_val_15179 === 1) {
                var inst_15163 = state_15178[7];
                var inst_15141 = [new cljs.core.Keyword(null, "mario-0-state", "mario-0-state", 1249431969), new cljs.core.Keyword(null, "mario-1-state", "mario-1-state", -148853510), new cljs.core.Keyword(null, "mario-2-state", "mario-2-state", 951570515), new cljs.core.Keyword(null, "mario-3-state", "mario-3-state", 634495603), new cljs.core.Keyword(null, "mario-4-state", "mario-4-state", -886695997), new cljs.core.Keyword(null, "mario-5-state", "mario-5-state", -751533065)];
                var inst_15142 = cljs.core.PersistentVector.EMPTY_NODE;
                var inst_15143 = [new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.Keyword(null, "stand", "stand", -1484467872)];
                var inst_15144 = new cljs.core.PersistentVector(null, 2, 5, inst_15142, inst_15143, null);
                var inst_15145 = cljs.core.PersistentVector.EMPTY_NODE;
                var inst_15146 = [new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.Keyword(null, "run", "run", -1821166653)];
                var inst_15147 = new cljs.core.PersistentVector(null, 2, 5, inst_15145, inst_15146, null);
                var inst_15148 = cljs.core.PersistentVector.EMPTY_NODE;
                var inst_15149 = [new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.Keyword(null, "jump", "jump", -971319427)];
                var inst_15150 = new cljs.core.PersistentVector(null, 2, 5, inst_15148, inst_15149, null);
                var inst_15151 = cljs.core.PersistentVector.EMPTY_NODE;
                var inst_15152 = [new cljs.core.Keyword(null, "left", "left", -399115937), new cljs.core.Keyword(null, "stand", "stand", -1484467872)];
                var inst_15153 = new cljs.core.PersistentVector(null, 2, 5, inst_15151, inst_15152, null);
                var inst_15154 = cljs.core.PersistentVector.EMPTY_NODE;
                var inst_15155 = [new cljs.core.Keyword(null, "left", "left", -399115937), new cljs.core.Keyword(null, "run", "run", -1821166653)];
                var inst_15156 = new cljs.core.PersistentVector(null, 2, 5, inst_15154, inst_15155, null);
                var inst_15157 = cljs.core.PersistentVector.EMPTY_NODE;
                var inst_15158 = [new cljs.core.Keyword(null, "left", "left", -399115937), new cljs.core.Keyword(null, "jump", "jump", -971319427)];
                var inst_15159 = new cljs.core.PersistentVector(null, 2, 5, inst_15157, inst_15158, null);
                var inst_15160 = [inst_15144, inst_15147, inst_15150, inst_15153, inst_15156, inst_15159];
                var inst_15161 = cljs.core.PersistentHashMap.fromArrays(inst_15141, inst_15160);
                var inst_15162 = cljs.core.atom.call(null, inst_15161);
                var inst_15163__$1 = rerenderer.browser.browser.call(null, canvas);
                var inst_15164 = [new cljs.core.Keyword(null, "atlas", "atlas", 1594808522)];
                var inst_15165 = rerenderer.core.image.call(null, inst_15163__$1, "mario.png");
                var state_15178__$1 = function() {
                  var statearr_15181 = state_15178;
                  statearr_15181[7] = inst_15163__$1;
                  statearr_15181[8] = inst_15164;
                  statearr_15181[9] = inst_15162;
                  return statearr_15181;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15178__$1, 2, inst_15165);
              } else {
                return null;
              }
            }
          };
        }(c__7641__auto__);
        return function(switch__7579__auto__, c__7641__auto__) {
          return function() {
            var rerenderer$examples$core$scene_3_$_state_machine__7580__auto__ = null;
            var rerenderer$examples$core$scene_3_$_state_machine__7580__auto____0 = function() {
              var statearr_15185 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_15185[0] = rerenderer$examples$core$scene_3_$_state_machine__7580__auto__;
              statearr_15185[1] = 1;
              return statearr_15185;
            };
            var rerenderer$examples$core$scene_3_$_state_machine__7580__auto____1 = function(state_15178) {
              while (true) {
                var ret_value__7581__auto__ = function() {
                  try {
                    while (true) {
                      var result__7582__auto__ = switch__7579__auto__.call(null, state_15178);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7582__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7582__auto__;
                      }
                      break;
                    }
                  } catch (e15186) {
                    if (e15186 instanceof Object) {
                      var ex__7583__auto__ = e15186;
                      var statearr_15187_15189 = state_15178;
                      statearr_15187_15189[5] = ex__7583__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15178);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15186;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7581__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15190 = state_15178;
                  state_15178 = G__15190;
                  continue;
                } else {
                  return ret_value__7581__auto__;
                }
                break;
              }
            };
            rerenderer$examples$core$scene_3_$_state_machine__7580__auto__ = function(state_15178) {
              switch(arguments.length) {
                case 0:
                  return rerenderer$examples$core$scene_3_$_state_machine__7580__auto____0.call(this);
                case 1:
                  return rerenderer$examples$core$scene_3_$_state_machine__7580__auto____1.call(this, state_15178);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            rerenderer$examples$core$scene_3_$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$examples$core$scene_3_$_state_machine__7580__auto____0;
            rerenderer$examples$core$scene_3_$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$examples$core$scene_3_$_state_machine__7580__auto____1;
            return rerenderer$examples$core$scene_3_$_state_machine__7580__auto__;
          }();
        }(switch__7579__auto__, c__7641__auto__);
      }();
      var state__7643__auto__ = function() {
        var statearr_15188 = f__7642__auto__.call(null);
        statearr_15188[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7641__auto__;
        return statearr_15188;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7643__auto__);
    };
  }(c__7641__auto__));
  return c__7641__auto__;
};
rerenderer.examples.core.mario_scenario = function rerenderer$examples$core$mario_scenario(state) {
  var c__7641__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7641__auto__) {
    return function() {
      var f__7642__auto__ = function() {
        var switch__7579__auto__ = function(c__7641__auto__) {
          return function(state_15599) {
            var state_val_15600 = state_15599[1];
            if (state_val_15600 === 7) {
              var inst_15444 = cljs.core.async.timeout.call(null, 5);
              var state_15599__$1 = state_15599;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15599__$1, 10, inst_15444);
            } else {
              if (state_val_15600 === 20) {
                var inst_15491 = cljs.core.async.timeout.call(null, 5);
                var state_15599__$1 = state_15599;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15599__$1, 23, inst_15491);
              } else {
                if (state_val_15600 === 27) {
                  var inst_15540 = state_15599[2];
                  var inst_15541 = 0;
                  var state_15599__$1 = function() {
                    var statearr_15601 = state_15599;
                    statearr_15601[7] = inst_15541;
                    statearr_15601[8] = inst_15540;
                    return statearr_15601;
                  }();
                  var statearr_15602_15665 = state_15599__$1;
                  statearr_15602_15665[2] = null;
                  statearr_15602_15665[1] = 32;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15600 === 1) {
                    var state_15599__$1 = state_15599;
                    var statearr_15603_15666 = state_15599__$1;
                    statearr_15603_15666[2] = null;
                    statearr_15603_15666[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15600 === 24) {
                      var inst_15511 = state_15599[2];
                      var inst_15512 = cljs.core.PersistentVector.EMPTY_NODE;
                      var inst_15513 = [new cljs.core.Keyword(null, "mario-state", "mario-state", -315386639), 0];
                      var inst_15514 = new cljs.core.PersistentVector(null, 2, 5, inst_15512, inst_15513, null);
                      var inst_15515 = cljs.core.swap_BANG_.call(null, state, cljs.core.assoc_in, inst_15514, new cljs.core.Keyword(null, "left", "left", -399115937));
                      var inst_15516 = cljs.core.async.timeout.call(null, 500);
                      var state_15599__$1 = function() {
                        var statearr_15604 = state_15599;
                        statearr_15604[9] = inst_15515;
                        statearr_15604[10] = inst_15511;
                        return statearr_15604;
                      }();
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15599__$1, 25, inst_15516);
                    } else {
                      if (state_val_15600 === 39) {
                        var inst_15570 = state_15599[11];
                        var inst_15572 = inst_15570 < 300;
                        var state_15599__$1 = state_15599;
                        if (cljs.core.truth_(inst_15572)) {
                          var statearr_15605_15667 = state_15599__$1;
                          statearr_15605_15667[1] = 41;
                        } else {
                          var statearr_15606_15668 = state_15599__$1;
                          statearr_15606_15668[1] = 42;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15600 === 4) {
                          var inst_15435 = state_15599[2];
                          var inst_15436 = cljs.core.PersistentVector.EMPTY_NODE;
                          var inst_15437 = [new cljs.core.Keyword(null, "mario-state", "mario-state", -315386639), 1];
                          var inst_15438 = new cljs.core.PersistentVector(null, 2, 5, inst_15436, inst_15437, null);
                          var inst_15439 = cljs.core.swap_BANG_.call(null, state, cljs.core.assoc_in, inst_15438, new cljs.core.Keyword(null, "jump", "jump", -971319427));
                          var inst_15440 = 0;
                          var state_15599__$1 = function() {
                            var statearr_15607 = state_15599;
                            statearr_15607[12] = inst_15439;
                            statearr_15607[13] = inst_15440;
                            statearr_15607[14] = inst_15435;
                            return statearr_15607;
                          }();
                          var statearr_15608_15669 = state_15599__$1;
                          statearr_15608_15669[2] = null;
                          statearr_15608_15669[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15600 === 15) {
                            var inst_15473 = state_15599[2];
                            var state_15599__$1 = state_15599;
                            var statearr_15609_15670 = state_15599__$1;
                            statearr_15609_15670[2] = inst_15473;
                            statearr_15609_15670[1] = 12;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15600 === 21) {
                              var state_15599__$1 = state_15599;
                              var statearr_15610_15671 = state_15599__$1;
                              statearr_15610_15671[2] = null;
                              statearr_15610_15671[1] = 22;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_15600 === 31) {
                                var inst_15523 = state_15599[15];
                                var inst_15529 = state_15599[2];
                                var inst_15530 = cljs.core.PersistentVector.EMPTY_NODE;
                                var inst_15531 = [new cljs.core.Keyword(null, "mario-y", "mario-y", 1718385780)];
                                var inst_15532 = new cljs.core.PersistentVector(null, 1, 5, inst_15530, inst_15531, null);
                                var inst_15533 = cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, inst_15532, cljs.core.dec);
                                var inst_15534 = inst_15523 + 1;
                                var inst_15523__$1 = inst_15534;
                                var state_15599__$1 = function() {
                                  var statearr_15611 = state_15599;
                                  statearr_15611[16] = inst_15529;
                                  statearr_15611[17] = inst_15533;
                                  statearr_15611[15] = inst_15523__$1;
                                  return statearr_15611;
                                }();
                                var statearr_15612_15672 = state_15599__$1;
                                statearr_15612_15672[2] = null;
                                statearr_15612_15672[1] = 26;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15600 === 32) {
                                  var inst_15541 = state_15599[7];
                                  var inst_15543 = inst_15541 < 20;
                                  var state_15599__$1 = state_15599;
                                  if (cljs.core.truth_(inst_15543)) {
                                    var statearr_15613_15673 = state_15599__$1;
                                    statearr_15613_15673[1] = 34;
                                  } else {
                                    var statearr_15614_15674 = state_15599__$1;
                                    statearr_15614_15674[1] = 35;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15600 === 40) {
                                    var inst_15587 = state_15599[2];
                                    var inst_15588 = cljs.core.PersistentVector.EMPTY_NODE;
                                    var inst_15589 = [new cljs.core.Keyword(null, "mario-state", "mario-state", -315386639), 0];
                                    var inst_15590 = new cljs.core.PersistentVector(null, 2, 5, inst_15588, inst_15589, null);
                                    var inst_15591 = cljs.core.swap_BANG_.call(null, state, cljs.core.assoc_in, inst_15590, new cljs.core.Keyword(null, "right", "right", -452581833));
                                    var inst_15592 = cljs.core.async.timeout.call(null, 500);
                                    var state_15599__$1 = function() {
                                      var statearr_15615 = state_15599;
                                      statearr_15615[18] = inst_15587;
                                      statearr_15615[19] = inst_15591;
                                      return statearr_15615;
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15599__$1, 45, inst_15592);
                                  } else {
                                    if (state_val_15600 === 33) {
                                      var inst_15558 = state_15599[2];
                                      var inst_15559 = cljs.core.PersistentVector.EMPTY_NODE;
                                      var inst_15560 = [new cljs.core.Keyword(null, "mario-state", "mario-state", -315386639), 1];
                                      var inst_15561 = new cljs.core.PersistentVector(null, 2, 5, inst_15559, inst_15560, null);
                                      var inst_15562 = cljs.core.swap_BANG_.call(null, state, cljs.core.assoc_in, inst_15561, new cljs.core.Keyword(null, "stand", "stand", -1484467872));
                                      var inst_15563 = cljs.core.async.timeout.call(null, 500);
                                      var state_15599__$1 = function() {
                                        var statearr_15616 = state_15599;
                                        statearr_15616[20] = inst_15558;
                                        statearr_15616[21] = inst_15562;
                                        return statearr_15616;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15599__$1, 38, inst_15563);
                                    } else {
                                      if (state_val_15600 === 13) {
                                        var inst_15462 = cljs.core.async.timeout.call(null, 5);
                                        var state_15599__$1 = state_15599;
                                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15599__$1, 16, inst_15462);
                                      } else {
                                        if (state_val_15600 === 22) {
                                          var inst_15502 = state_15599[2];
                                          var state_15599__$1 = state_15599;
                                          var statearr_15617_15675 = state_15599__$1;
                                          statearr_15617_15675[2] = inst_15502;
                                          statearr_15617_15675[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_15600 === 36) {
                                            var inst_15556 = state_15599[2];
                                            var state_15599__$1 = state_15599;
                                            var statearr_15618_15676 = state_15599__$1;
                                            statearr_15618_15676[2] = inst_15556;
                                            statearr_15618_15676[1] = 33;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_15600 === 41) {
                                              var inst_15574 = cljs.core.async.timeout.call(null, 5);
                                              var state_15599__$1 = state_15599;
                                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15599__$1, 44, inst_15574);
                                            } else {
                                              if (state_val_15600 === 43) {
                                                var inst_15585 = state_15599[2];
                                                var state_15599__$1 = state_15599;
                                                var statearr_15619_15677 = state_15599__$1;
                                                statearr_15619_15677[2] = inst_15585;
                                                statearr_15619_15677[1] = 40;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_15600 === 29) {
                                                  var state_15599__$1 = state_15599;
                                                  var statearr_15620_15678 = state_15599__$1;
                                                  statearr_15620_15678[2] = null;
                                                  statearr_15620_15678[1] = 30;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_15600 === 44) {
                                                    var inst_15570 = state_15599[11];
                                                    var inst_15576 = state_15599[2];
                                                    var inst_15577 = cljs.core.PersistentVector.EMPTY_NODE;
                                                    var inst_15578 = [new cljs.core.Keyword(null, "mario-x", "mario-x", 1743249500)];
                                                    var inst_15579 = new cljs.core.PersistentVector(null, 1, 5, inst_15577, inst_15578, null);
                                                    var inst_15580 = cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, inst_15579, cljs.core.dec);
                                                    var inst_15581 = inst_15570 + 1;
                                                    var inst_15570__$1 = inst_15581;
                                                    var state_15599__$1 = function() {
                                                      var statearr_15621 = state_15599;
                                                      statearr_15621[22] = inst_15580;
                                                      statearr_15621[23] = inst_15576;
                                                      statearr_15621[11] = inst_15570__$1;
                                                      return statearr_15621;
                                                    }();
                                                    var statearr_15622_15679 = state_15599__$1;
                                                    statearr_15622_15679[2] = null;
                                                    statearr_15622_15679[1] = 39;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_15600 === 6) {
                                                      var inst_15457 = state_15599[2];
                                                      var inst_15458 = 0;
                                                      var state_15599__$1 = function() {
                                                        var statearr_15623 = state_15599;
                                                        statearr_15623[24] = inst_15458;
                                                        statearr_15623[25] = inst_15457;
                                                        return statearr_15623;
                                                      }();
                                                      var statearr_15624_15680 = state_15599__$1;
                                                      statearr_15624_15680[2] = null;
                                                      statearr_15624_15680[1] = 11;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_15600 === 28) {
                                                        var inst_15527 = cljs.core.async.timeout.call(null, 5);
                                                        var state_15599__$1 = state_15599;
                                                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15599__$1, 31, inst_15527);
                                                      } else {
                                                        if (state_val_15600 === 25) {
                                                          var inst_15518 = state_15599[2];
                                                          var inst_15519 = cljs.core.PersistentVector.EMPTY_NODE;
                                                          var inst_15520 = [new cljs.core.Keyword(null, "mario-state", "mario-state", -315386639), 1];
                                                          var inst_15521 = new cljs.core.PersistentVector(null, 2, 5, inst_15519, inst_15520, null);
                                                          var inst_15522 = cljs.core.swap_BANG_.call(null, state, cljs.core.assoc_in, inst_15521, new cljs.core.Keyword(null, "jump", "jump", -971319427));
                                                          var inst_15523 = 0;
                                                          var state_15599__$1 = function() {
                                                            var statearr_15625 = state_15599;
                                                            statearr_15625[26] = inst_15522;
                                                            statearr_15625[15] = inst_15523;
                                                            statearr_15625[27] = inst_15518;
                                                            return statearr_15625;
                                                          }();
                                                          var statearr_15626_15681 = state_15599__$1;
                                                          statearr_15626_15681[2] = null;
                                                          statearr_15626_15681[1] = 26;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_15600 === 34) {
                                                            var inst_15545 = cljs.core.async.timeout.call(null, 5);
                                                            var state_15599__$1 = state_15599;
                                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15599__$1, 37, inst_15545);
                                                          } else {
                                                            if (state_val_15600 === 17) {
                                                              var inst_15482 = state_15599[2];
                                                              var inst_15483 = cljs.core.PersistentVector.EMPTY_NODE;
                                                              var inst_15484 = [new cljs.core.Keyword(null, "mario-state", "mario-state", -315386639), 1];
                                                              var inst_15485 = new cljs.core.PersistentVector(null, 2, 5, inst_15483, inst_15484, null);
                                                              var inst_15486 = cljs.core.swap_BANG_.call(null, state, cljs.core.assoc_in, inst_15485, new cljs.core.Keyword(null, "run", "run", -1821166653));
                                                              var inst_15487 = 0;
                                                              var state_15599__$1 = function() {
                                                                var statearr_15627 = state_15599;
                                                                statearr_15627[28] = inst_15486;
                                                                statearr_15627[29] = inst_15482;
                                                                statearr_15627[30] = inst_15487;
                                                                return statearr_15627;
                                                              }();
                                                              var statearr_15628_15682 = state_15599__$1;
                                                              statearr_15628_15682[2] = null;
                                                              statearr_15628_15682[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_15600 === 3) {
                                                                var inst_15597 = state_15599[2];
                                                                var state_15599__$1 = state_15599;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15599__$1, inst_15597);
                                                              } else {
                                                                if (state_val_15600 === 12) {
                                                                  var inst_15475 = state_15599[2];
                                                                  var inst_15476 = cljs.core.PersistentVector.EMPTY_NODE;
                                                                  var inst_15477 = [new cljs.core.Keyword(null, "mario-state", "mario-state", -315386639), 1];
                                                                  var inst_15478 = new cljs.core.PersistentVector(null, 2, 5, inst_15476, inst_15477, null);
                                                                  var inst_15479 = cljs.core.swap_BANG_.call(null, state, cljs.core.assoc_in, inst_15478, new cljs.core.Keyword(null, "stand", "stand", -1484467872));
                                                                  var inst_15480 = cljs.core.async.timeout.call(null, 500);
                                                                  var state_15599__$1 = function() {
                                                                    var statearr_15629 = state_15599;
                                                                    statearr_15629[31] = inst_15475;
                                                                    statearr_15629[32] = inst_15479;
                                                                    return statearr_15629;
                                                                  }();
                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15599__$1, 17, inst_15480);
                                                                } else {
                                                                  if (state_val_15600 === 2) {
                                                                    var inst_15429 = cljs.core.PersistentVector.EMPTY_NODE;
                                                                    var inst_15430 = [new cljs.core.Keyword(null, "mario-state", "mario-state", -315386639), 1];
                                                                    var inst_15431 = new cljs.core.PersistentVector(null, 2, 5, inst_15429, inst_15430, null);
                                                                    var inst_15432 = cljs.core.swap_BANG_.call(null, state, cljs.core.assoc_in, inst_15431, new cljs.core.Keyword(null, "stand", "stand", -1484467872));
                                                                    var inst_15433 = cljs.core.async.timeout.call(null, 500);
                                                                    var state_15599__$1 = function() {
                                                                      var statearr_15630 = state_15599;
                                                                      statearr_15630[33] = inst_15432;
                                                                      return statearr_15630;
                                                                    }();
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15599__$1, 4, inst_15433);
                                                                  } else {
                                                                    if (state_val_15600 === 23) {
                                                                      var inst_15487 = state_15599[30];
                                                                      var inst_15493 = state_15599[2];
                                                                      var inst_15494 = cljs.core.PersistentVector.EMPTY_NODE;
                                                                      var inst_15495 = [new cljs.core.Keyword(null, "mario-x", "mario-x", 1743249500)];
                                                                      var inst_15496 = new cljs.core.PersistentVector(null, 1, 5, inst_15494, inst_15495, null);
                                                                      var inst_15497 = cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, inst_15496, cljs.core.inc);
                                                                      var inst_15498 = inst_15487 + 1;
                                                                      var inst_15487__$1 = inst_15498;
                                                                      var state_15599__$1 = function() {
                                                                        var statearr_15631 = state_15599;
                                                                        statearr_15631[34] = inst_15497;
                                                                        statearr_15631[35] = inst_15493;
                                                                        statearr_15631[30] = inst_15487__$1;
                                                                        return statearr_15631;
                                                                      }();
                                                                      var statearr_15632_15683 = state_15599__$1;
                                                                      statearr_15632_15683[2] = null;
                                                                      statearr_15632_15683[1] = 18;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_15600 === 35) {
                                                                        var state_15599__$1 = state_15599;
                                                                        var statearr_15633_15684 = state_15599__$1;
                                                                        statearr_15633_15684[2] = null;
                                                                        statearr_15633_15684[1] = 36;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_15600 === 19) {
                                                                          var inst_15504 = state_15599[2];
                                                                          var inst_15505 = cljs.core.PersistentVector.EMPTY_NODE;
                                                                          var inst_15506 = [new cljs.core.Keyword(null, "mario-state", "mario-state", -315386639), 1];
                                                                          var inst_15507 = new cljs.core.PersistentVector(null, 2, 5, inst_15505, inst_15506, null);
                                                                          var inst_15508 = cljs.core.swap_BANG_.call(null, state, cljs.core.assoc_in, inst_15507, new cljs.core.Keyword(null, "stand", "stand", -1484467872));
                                                                          var inst_15509 = cljs.core.async.timeout.call(null, 500);
                                                                          var state_15599__$1 = function() {
                                                                            var statearr_15634 = state_15599;
                                                                            statearr_15634[36] = inst_15504;
                                                                            statearr_15634[37] = inst_15508;
                                                                            return statearr_15634;
                                                                          }();
                                                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15599__$1, 24, inst_15509);
                                                                        } else {
                                                                          if (state_val_15600 === 11) {
                                                                            var inst_15458 = state_15599[24];
                                                                            var inst_15460 = inst_15458 < 20;
                                                                            var state_15599__$1 = state_15599;
                                                                            if (cljs.core.truth_(inst_15460)) {
                                                                              var statearr_15635_15685 = state_15599__$1;
                                                                              statearr_15635_15685[1] = 13;
                                                                            } else {
                                                                              var statearr_15636_15686 = state_15599__$1;
                                                                              statearr_15636_15686[1] = 14;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_15600 === 9) {
                                                                              var inst_15455 = state_15599[2];
                                                                              var state_15599__$1 = state_15599;
                                                                              var statearr_15637_15687 = state_15599__$1;
                                                                              statearr_15637_15687[2] = inst_15455;
                                                                              statearr_15637_15687[1] = 6;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_15600 === 5) {
                                                                                var inst_15440 = state_15599[13];
                                                                                var inst_15442 = inst_15440 < 20;
                                                                                var state_15599__$1 = state_15599;
                                                                                if (cljs.core.truth_(inst_15442)) {
                                                                                  var statearr_15638_15688 = state_15599__$1;
                                                                                  statearr_15638_15688[1] = 7;
                                                                                } else {
                                                                                  var statearr_15639_15689 = state_15599__$1;
                                                                                  statearr_15639_15689[1] = 8;
                                                                                }
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_15600 === 14) {
                                                                                  var state_15599__$1 = state_15599;
                                                                                  var statearr_15640_15690 = state_15599__$1;
                                                                                  statearr_15640_15690[2] = null;
                                                                                  statearr_15640_15690[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_15600 === 45) {
                                                                                    var inst_15594 = state_15599[2];
                                                                                    var state_15599__$1 = function() {
                                                                                      var statearr_15641 = state_15599;
                                                                                      statearr_15641[38] = inst_15594;
                                                                                      return statearr_15641;
                                                                                    }();
                                                                                    var statearr_15642_15691 = state_15599__$1;
                                                                                    statearr_15642_15691[2] = null;
                                                                                    statearr_15642_15691[1] = 2;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_15600 === 26) {
                                                                                      var inst_15523 = state_15599[15];
                                                                                      var inst_15525 = inst_15523 < 20;
                                                                                      var state_15599__$1 = state_15599;
                                                                                      if (cljs.core.truth_(inst_15525)) {
                                                                                        var statearr_15643_15692 = state_15599__$1;
                                                                                        statearr_15643_15692[1] = 28;
                                                                                      } else {
                                                                                        var statearr_15644_15693 = state_15599__$1;
                                                                                        statearr_15644_15693[1] = 29;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_15600 === 16) {
                                                                                        var inst_15458 = state_15599[24];
                                                                                        var inst_15464 = state_15599[2];
                                                                                        var inst_15465 = cljs.core.PersistentVector.EMPTY_NODE;
                                                                                        var inst_15466 = [new cljs.core.Keyword(null, "mario-y", "mario-y", 1718385780)];
                                                                                        var inst_15467 = new cljs.core.PersistentVector(null, 1, 5, inst_15465, inst_15466, null);
                                                                                        var inst_15468 = cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, inst_15467, cljs.core.inc);
                                                                                        var inst_15469 = inst_15458 + 1;
                                                                                        var inst_15458__$1 = inst_15469;
                                                                                        var state_15599__$1 = function() {
                                                                                          var statearr_15645 = state_15599;
                                                                                          statearr_15645[24] = inst_15458__$1;
                                                                                          statearr_15645[39] = inst_15464;
                                                                                          statearr_15645[40] = inst_15468;
                                                                                          return statearr_15645;
                                                                                        }();
                                                                                        var statearr_15646_15694 = state_15599__$1;
                                                                                        statearr_15646_15694[2] = null;
                                                                                        statearr_15646_15694[1] = 11;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_15600 === 38) {
                                                                                          var inst_15565 = state_15599[2];
                                                                                          var inst_15566 = cljs.core.PersistentVector.EMPTY_NODE;
                                                                                          var inst_15567 = [new cljs.core.Keyword(null, "mario-state", "mario-state", -315386639), 1];
                                                                                          var inst_15568 = new cljs.core.PersistentVector(null, 2, 5, inst_15566, inst_15567, null);
                                                                                          var inst_15569 = cljs.core.swap_BANG_.call(null, state, cljs.core.assoc_in, inst_15568, new cljs.core.Keyword(null, "run", "run", -1821166653));
                                                                                          var inst_15570 = 0;
                                                                                          var state_15599__$1 = function() {
                                                                                            var statearr_15647 = state_15599;
                                                                                            statearr_15647[41] = inst_15569;
                                                                                            statearr_15647[42] = inst_15565;
                                                                                            statearr_15647[11] = inst_15570;
                                                                                            return statearr_15647;
                                                                                          }();
                                                                                          var statearr_15648_15695 = state_15599__$1;
                                                                                          statearr_15648_15695[2] = null;
                                                                                          statearr_15648_15695[1] = 39;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_15600 === 30) {
                                                                                            var inst_15538 = state_15599[2];
                                                                                            var state_15599__$1 = state_15599;
                                                                                            var statearr_15649_15696 = state_15599__$1;
                                                                                            statearr_15649_15696[2] = inst_15538;
                                                                                            statearr_15649_15696[1] = 27;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_15600 === 10) {
                                                                                              var inst_15440 = state_15599[13];
                                                                                              var inst_15446 = state_15599[2];
                                                                                              var inst_15447 = cljs.core.PersistentVector.EMPTY_NODE;
                                                                                              var inst_15448 = [new cljs.core.Keyword(null, "mario-y", "mario-y", 1718385780)];
                                                                                              var inst_15449 = new cljs.core.PersistentVector(null, 1, 5, inst_15447, inst_15448, null);
                                                                                              var inst_15450 = cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, inst_15449, cljs.core.dec);
                                                                                              var inst_15451 = inst_15440 + 1;
                                                                                              var inst_15440__$1 = inst_15451;
                                                                                              var state_15599__$1 = function() {
                                                                                                var statearr_15650 = state_15599;
                                                                                                statearr_15650[43] = inst_15446;
                                                                                                statearr_15650[44] = inst_15450;
                                                                                                statearr_15650[13] = inst_15440__$1;
                                                                                                return statearr_15650;
                                                                                              }();
                                                                                              var statearr_15651_15697 = state_15599__$1;
                                                                                              statearr_15651_15697[2] = null;
                                                                                              statearr_15651_15697[1] = 5;
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_15600 === 18) {
                                                                                                var inst_15487 = state_15599[30];
                                                                                                var inst_15489 = inst_15487 < 300;
                                                                                                var state_15599__$1 = state_15599;
                                                                                                if (cljs.core.truth_(inst_15489)) {
                                                                                                  var statearr_15652_15698 = state_15599__$1;
                                                                                                  statearr_15652_15698[1] = 20;
                                                                                                } else {
                                                                                                  var statearr_15653_15699 = state_15599__$1;
                                                                                                  statearr_15653_15699[1] = 21;
                                                                                                }
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_15600 === 42) {
                                                                                                  var state_15599__$1 = state_15599;
                                                                                                  var statearr_15654_15700 = state_15599__$1;
                                                                                                  statearr_15654_15700[2] = null;
                                                                                                  statearr_15654_15700[1] = 43;
                                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                } else {
                                                                                                  if (state_val_15600 === 37) {
                                                                                                    var inst_15541 = state_15599[7];
                                                                                                    var inst_15547 = state_15599[2];
                                                                                                    var inst_15548 = cljs.core.PersistentVector.EMPTY_NODE;
                                                                                                    var inst_15549 = [new cljs.core.Keyword(null, "mario-y", "mario-y", 1718385780)];
                                                                                                    var inst_15550 = new cljs.core.PersistentVector(null, 1, 5, inst_15548, inst_15549, null);
                                                                                                    var inst_15551 = cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, inst_15550, cljs.core.inc);
                                                                                                    var inst_15552 = inst_15541 + 1;
                                                                                                    var inst_15541__$1 = inst_15552;
                                                                                                    var state_15599__$1 = function() {
                                                                                                      var statearr_15655 = state_15599;
                                                                                                      statearr_15655[7] = inst_15541__$1;
                                                                                                      statearr_15655[45] = inst_15551;
                                                                                                      statearr_15655[46] = inst_15547;
                                                                                                      return statearr_15655;
                                                                                                    }();
                                                                                                    var statearr_15656_15701 = state_15599__$1;
                                                                                                    statearr_15656_15701[2] = null;
                                                                                                    statearr_15656_15701[1] = 32;
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_15600 === 8) {
                                                                                                      var state_15599__$1 = state_15599;
                                                                                                      var statearr_15657_15702 = state_15599__$1;
                                                                                                      statearr_15657_15702[2] = null;
                                                                                                      statearr_15657_15702[1] = 9;
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7641__auto__);
        return function(switch__7579__auto__, c__7641__auto__) {
          return function() {
            var rerenderer$examples$core$mario_scenario_$_state_machine__7580__auto__ = null;
            var rerenderer$examples$core$mario_scenario_$_state_machine__7580__auto____0 = function() {
              var statearr_15661 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_15661[0] = rerenderer$examples$core$mario_scenario_$_state_machine__7580__auto__;
              statearr_15661[1] = 1;
              return statearr_15661;
            };
            var rerenderer$examples$core$mario_scenario_$_state_machine__7580__auto____1 = function(state_15599) {
              while (true) {
                var ret_value__7581__auto__ = function() {
                  try {
                    while (true) {
                      var result__7582__auto__ = switch__7579__auto__.call(null, state_15599);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7582__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7582__auto__;
                      }
                      break;
                    }
                  } catch (e15662) {
                    if (e15662 instanceof Object) {
                      var ex__7583__auto__ = e15662;
                      var statearr_15663_15703 = state_15599;
                      statearr_15663_15703[5] = ex__7583__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15599);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15662;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7581__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15704 = state_15599;
                  state_15599 = G__15704;
                  continue;
                } else {
                  return ret_value__7581__auto__;
                }
                break;
              }
            };
            rerenderer$examples$core$mario_scenario_$_state_machine__7580__auto__ = function(state_15599) {
              switch(arguments.length) {
                case 0:
                  return rerenderer$examples$core$mario_scenario_$_state_machine__7580__auto____0.call(this);
                case 1:
                  return rerenderer$examples$core$mario_scenario_$_state_machine__7580__auto____1.call(this, state_15599);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            rerenderer$examples$core$mario_scenario_$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$examples$core$mario_scenario_$_state_machine__7580__auto____0;
            rerenderer$examples$core$mario_scenario_$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$examples$core$mario_scenario_$_state_machine__7580__auto____1;
            return rerenderer$examples$core$mario_scenario_$_state_machine__7580__auto__;
          }();
        }(switch__7579__auto__, c__7641__auto__);
      }();
      var state__7643__auto__ = function() {
        var statearr_15664 = f__7642__auto__.call(null);
        statearr_15664[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7641__auto__;
        return statearr_15664;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7643__auto__);
    };
  }(c__7641__auto__));
  return c__7641__auto__;
};
rerenderer.examples.core.moving_mario = function rerenderer$examples$core$moving_mario(ctx, p__15705, p__15706) {
  var map__15709 = p__15705;
  var map__15709__$1 = cljs.core.seq_QMARK_.call(null, map__15709) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15709) : map__15709;
  var mario_y = cljs.core.get.call(null, map__15709__$1, new cljs.core.Keyword(null, "mario-y", "mario-y", 1718385780));
  var mario_x = cljs.core.get.call(null, map__15709__$1, new cljs.core.Keyword(null, "mario-x", "mario-x", 1743249500));
  var mario_draw_state = cljs.core.get.call(null, map__15709__$1, new cljs.core.Keyword(null, "mario-draw-state", "mario-draw-state", 442716451));
  var map__15710 = p__15706;
  var map__15710__$1 = cljs.core.seq_QMARK_.call(null, map__15710) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15710) : map__15710;
  var atlas = cljs.core.get.call(null, map__15710__$1, new cljs.core.Keyword(null, "atlas", "atlas", 1594808522));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["clearRect", 0, 0, 500, 300], null)], null)], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-fillStyle"], null)], null), "green"], null));
  cljs.core.swap_BANG_.call(null, ctx, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "call", "call", -519999866), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["fillRect", 0, 75, 400, 20], null)], null)], null));
  return rerenderer.examples.core.mario.call(null, ctx, atlas, mario_draw_state, mario_x, mario_y);
};
rerenderer.examples.core.scene_4 = function rerenderer$examples$core$scene_4(canvas) {
  var c__7641__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7641__auto__) {
    return function() {
      var f__7642__auto__ = function() {
        var switch__7579__auto__ = function(c__7641__auto__) {
          return function(state_15758) {
            var state_val_15759 = state_15758[1];
            if (state_val_15759 === 2) {
              var inst_15748 = state_15758[7];
              var inst_15747 = state_15758[8];
              var inst_15746 = state_15758[9];
              var inst_15751 = state_15758[2];
              var inst_15752 = [inst_15751];
              var inst_15753 = cljs.core.PersistentHashMap.fromArrays(inst_15748, inst_15752);
              var inst_15754 = rerenderer.core.init_BANG_.call(null, inst_15747, rerenderer.examples.core.moving_mario, inst_15746, inst_15753);
              var inst_15755 = rerenderer.examples.core.handle_mario.call(null, inst_15746, new cljs.core.Keyword(null, "mario-state", "mario-state", -315386639), new cljs.core.Keyword(null, "mario-draw-state", "mario-draw-state", 442716451));
              var inst_15756 = rerenderer.examples.core.mario_scenario.call(null, inst_15746);
              var state_15758__$1 = function() {
                var statearr_15760 = state_15758;
                statearr_15760[10] = inst_15754;
                statearr_15760[11] = inst_15755;
                return statearr_15760;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15758__$1, inst_15756);
            } else {
              if (state_val_15759 === 1) {
                var inst_15747 = state_15758[8];
                var inst_15740 = [new cljs.core.Keyword(null, "mario-state", "mario-state", -315386639), new cljs.core.Keyword(null, "mario-x", "mario-x", 1743249500), new cljs.core.Keyword(null, "mario-y", "mario-y", 1718385780)];
                var inst_15741 = cljs.core.PersistentVector.EMPTY_NODE;
                var inst_15742 = [new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.Keyword(null, "stand", "stand", -1484467872)];
                var inst_15743 = new cljs.core.PersistentVector(null, 2, 5, inst_15741, inst_15742, null);
                var inst_15744 = [inst_15743, 20, 15];
                var inst_15745 = cljs.core.PersistentHashMap.fromArrays(inst_15740, inst_15744);
                var inst_15746 = cljs.core.atom.call(null, inst_15745);
                var inst_15747__$1 = rerenderer.browser.browser.call(null, canvas);
                var inst_15748 = [new cljs.core.Keyword(null, "atlas", "atlas", 1594808522)];
                var inst_15749 = rerenderer.core.image.call(null, inst_15747__$1, "mario.png");
                var state_15758__$1 = function() {
                  var statearr_15761 = state_15758;
                  statearr_15761[7] = inst_15748;
                  statearr_15761[8] = inst_15747__$1;
                  statearr_15761[9] = inst_15746;
                  return statearr_15761;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15758__$1, 2, inst_15749);
              } else {
                return null;
              }
            }
          };
        }(c__7641__auto__);
        return function(switch__7579__auto__, c__7641__auto__) {
          return function() {
            var rerenderer$examples$core$scene_4_$_state_machine__7580__auto__ = null;
            var rerenderer$examples$core$scene_4_$_state_machine__7580__auto____0 = function() {
              var statearr_15765 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_15765[0] = rerenderer$examples$core$scene_4_$_state_machine__7580__auto__;
              statearr_15765[1] = 1;
              return statearr_15765;
            };
            var rerenderer$examples$core$scene_4_$_state_machine__7580__auto____1 = function(state_15758) {
              while (true) {
                var ret_value__7581__auto__ = function() {
                  try {
                    while (true) {
                      var result__7582__auto__ = switch__7579__auto__.call(null, state_15758);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7582__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7582__auto__;
                      }
                      break;
                    }
                  } catch (e15766) {
                    if (e15766 instanceof Object) {
                      var ex__7583__auto__ = e15766;
                      var statearr_15767_15769 = state_15758;
                      statearr_15767_15769[5] = ex__7583__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15758);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15766;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7581__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15770 = state_15758;
                  state_15758 = G__15770;
                  continue;
                } else {
                  return ret_value__7581__auto__;
                }
                break;
              }
            };
            rerenderer$examples$core$scene_4_$_state_machine__7580__auto__ = function(state_15758) {
              switch(arguments.length) {
                case 0:
                  return rerenderer$examples$core$scene_4_$_state_machine__7580__auto____0.call(this);
                case 1:
                  return rerenderer$examples$core$scene_4_$_state_machine__7580__auto____1.call(this, state_15758);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            rerenderer$examples$core$scene_4_$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$0 = rerenderer$examples$core$scene_4_$_state_machine__7580__auto____0;
            rerenderer$examples$core$scene_4_$_state_machine__7580__auto__.cljs$core$IFn$_invoke$arity$1 = rerenderer$examples$core$scene_4_$_state_machine__7580__auto____1;
            return rerenderer$examples$core$scene_4_$_state_machine__7580__auto__;
          }();
        }(switch__7579__auto__, c__7641__auto__);
      }();
      var state__7643__auto__ = function() {
        var statearr_15768 = f__7642__auto__.call(null);
        statearr_15768[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7641__auto__;
        return statearr_15768;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7643__auto__);
    };
  }(c__7641__auto__));
  return c__7641__auto__;
};
var pred__15771_15774 = cljs.core._EQ_;
var expr__15772_15775 = document.location.hash;
if (cljs.core.truth_(pred__15771_15774.call(null, "#scene-1", expr__15772_15775))) {
  rerenderer.examples.core.scene_1.call(null, document.getElementById("canvas-1"));
} else {
  if (cljs.core.truth_(pred__15771_15774.call(null, "#scene-2", expr__15772_15775))) {
    rerenderer.examples.core.scene_2.call(null, document.getElementById("canvas-1"));
  } else {
    if (cljs.core.truth_(pred__15771_15774.call(null, "#scene-3", expr__15772_15775))) {
      rerenderer.examples.core.scene_3.call(null, document.getElementById("canvas-1"));
    } else {
      if (cljs.core.truth_(pred__15771_15774.call(null, "#scene-4", expr__15772_15775))) {
        rerenderer.examples.core.scene_4.call(null, document.getElementById("canvas-1"));
      } else {
        rerenderer.examples.bird.init_BANG_.call(null, document.getElementById("canvas-1"));
      }
    }
  }
}
;